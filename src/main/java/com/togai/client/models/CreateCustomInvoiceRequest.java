/*
 * Togai Apis
 * APIs for Togai App
 *
 * The version of the OpenAPI document: 1.0
 * Contact: engg@togai.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.togai.client.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.togai.client.models.CustomInvoiceLineItem;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.togai.client.JSON;

/**
 * Payload to create invoice
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class CreateCustomInvoiceRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  @javax.annotation.Nonnull
  private String accountId;

  /**
   * Gets or Sets ownerType
   */
  @JsonAdapter(OwnerTypeEnum.Adapter.class)
  public enum OwnerTypeEnum {
    ACCOUNT("ACCOUNT"),
    
    INVOICE_GROUP("INVOICE_GROUP");

    private String value;

    OwnerTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OwnerTypeEnum fromValue(String value) {
      for (OwnerTypeEnum b : OwnerTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<OwnerTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OwnerTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OwnerTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OwnerTypeEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      OwnerTypeEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_OWNER_TYPE = "ownerType";
  @SerializedName(SERIALIZED_NAME_OWNER_TYPE)
  @javax.annotation.Nullable
  private OwnerTypeEnum ownerType;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  @javax.annotation.Nonnull
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  @javax.annotation.Nonnull
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_IDEMPOTENCY_KEY = "idempotencyKey";
  @SerializedName(SERIALIZED_NAME_IDEMPOTENCY_KEY)
  @javax.annotation.Nullable
  private String idempotencyKey;

  /**
   * Status to create an invoice in.
   */
  @JsonAdapter(StatusEnum.Adapter.class)
  public enum StatusEnum {
    DRAFT("DRAFT"),
    
    DUE("DUE"),
    
    PAID("PAID");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StatusEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StatusEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nonnull
  private StatusEnum status;

  public static final String SERIALIZED_NAME_LINE_ITEMS = "lineItems";
  @SerializedName(SERIALIZED_NAME_LINE_ITEMS)
  @javax.annotation.Nonnull
  private List<CustomInvoiceLineItem> lineItems = new ArrayList<>();

  public static final String SERIALIZED_NAME_AUTO_ADVANCE = "autoAdvance";
  @SerializedName(SERIALIZED_NAME_AUTO_ADVANCE)
  @javax.annotation.Nullable
  private Boolean autoAdvance;

  public static final String SERIALIZED_NAME_APPLY_CREDITS = "applyCredits";
  @SerializedName(SERIALIZED_NAME_APPLY_CREDITS)
  @javax.annotation.Nullable
  private Boolean applyCredits;

  public static final String SERIALIZED_NAME_APPLY_WALLET_BALANCE = "applyWalletBalance";
  @SerializedName(SERIALIZED_NAME_APPLY_WALLET_BALANCE)
  @javax.annotation.Nullable
  private Boolean applyWalletBalance;

  public CreateCustomInvoiceRequest() {
  }

  public CreateCustomInvoiceRequest accountId(@javax.annotation.Nonnull String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Get accountId
   * @return accountId
   */
  @javax.annotation.Nonnull
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(@javax.annotation.Nonnull String accountId) {
    this.accountId = accountId;
  }


  public CreateCustomInvoiceRequest ownerType(@javax.annotation.Nullable OwnerTypeEnum ownerType) {
    this.ownerType = ownerType;
    return this;
  }

  /**
   * Get ownerType
   * @return ownerType
   */
  @javax.annotation.Nullable
  public OwnerTypeEnum getOwnerType() {
    return ownerType;
  }

  public void setOwnerType(@javax.annotation.Nullable OwnerTypeEnum ownerType) {
    this.ownerType = ownerType;
  }


  public CreateCustomInvoiceRequest startDate(@javax.annotation.Nonnull OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(@javax.annotation.Nonnull OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public CreateCustomInvoiceRequest endDate(@javax.annotation.Nonnull OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(@javax.annotation.Nonnull OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public CreateCustomInvoiceRequest idempotencyKey(@javax.annotation.Nullable String idempotencyKey) {
    this.idempotencyKey = idempotencyKey;
    return this;
  }

  /**
   * Get idempotencyKey
   * @return idempotencyKey
   */
  @javax.annotation.Nullable
  public String getIdempotencyKey() {
    return idempotencyKey;
  }

  public void setIdempotencyKey(@javax.annotation.Nullable String idempotencyKey) {
    this.idempotencyKey = idempotencyKey;
  }


  public CreateCustomInvoiceRequest status(@javax.annotation.Nonnull StatusEnum status) {
    this.status = status;
    return this;
  }

  /**
   * Status to create an invoice in.
   * @return status
   */
  @javax.annotation.Nonnull
  public StatusEnum getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nonnull StatusEnum status) {
    this.status = status;
  }


  public CreateCustomInvoiceRequest lineItems(@javax.annotation.Nonnull List<CustomInvoiceLineItem> lineItems) {
    this.lineItems = lineItems;
    return this;
  }

  public CreateCustomInvoiceRequest addLineItemsItem(CustomInvoiceLineItem lineItemsItem) {
    if (this.lineItems == null) {
      this.lineItems = new ArrayList<>();
    }
    this.lineItems.add(lineItemsItem);
    return this;
  }

  /**
   * Get lineItems
   * @return lineItems
   */
  @javax.annotation.Nonnull
  public List<CustomInvoiceLineItem> getLineItems() {
    return lineItems;
  }

  public void setLineItems(@javax.annotation.Nonnull List<CustomInvoiceLineItem> lineItems) {
    this.lineItems = lineItems;
  }


  public CreateCustomInvoiceRequest autoAdvance(@javax.annotation.Nullable Boolean autoAdvance) {
    this.autoAdvance = autoAdvance;
    return this;
  }

  /**
   * This property defines the behaviour of status transition of the invoice. If true, invoice auto transitions from &#x60;DRAFT&#x60; to &#x60;DUE&#x60; or &#x60;PAID&#x60; at the end of pricing cycle. If false, the invoice’s state doesn’t automatically advance without an explicit action. Default: false 
   * @return autoAdvance
   */
  @javax.annotation.Nullable
  public Boolean getAutoAdvance() {
    return autoAdvance;
  }

  public void setAutoAdvance(@javax.annotation.Nullable Boolean autoAdvance) {
    this.autoAdvance = autoAdvance;
  }


  public CreateCustomInvoiceRequest applyCredits(@javax.annotation.Nullable Boolean applyCredits) {
    this.applyCredits = applyCredits;
    return this;
  }

  /**
   * This property defines the behaviour of whether or not to use credits to net off with the invoice amount. Default: true 
   * @return applyCredits
   */
  @javax.annotation.Nullable
  public Boolean getApplyCredits() {
    return applyCredits;
  }

  public void setApplyCredits(@javax.annotation.Nullable Boolean applyCredits) {
    this.applyCredits = applyCredits;
  }


  public CreateCustomInvoiceRequest applyWalletBalance(@javax.annotation.Nullable Boolean applyWalletBalance) {
    this.applyWalletBalance = applyWalletBalance;
    return this;
  }

  /**
   * This property defines the behaviour of whether or not to use wallet amount to net off with the invoice amount. Default: true 
   * @return applyWalletBalance
   */
  @javax.annotation.Nullable
  public Boolean getApplyWalletBalance() {
    return applyWalletBalance;
  }

  public void setApplyWalletBalance(@javax.annotation.Nullable Boolean applyWalletBalance) {
    this.applyWalletBalance = applyWalletBalance;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateCustomInvoiceRequest createCustomInvoiceRequest = (CreateCustomInvoiceRequest) o;
    return Objects.equals(this.accountId, createCustomInvoiceRequest.accountId) &&
        Objects.equals(this.ownerType, createCustomInvoiceRequest.ownerType) &&
        Objects.equals(this.startDate, createCustomInvoiceRequest.startDate) &&
        Objects.equals(this.endDate, createCustomInvoiceRequest.endDate) &&
        Objects.equals(this.idempotencyKey, createCustomInvoiceRequest.idempotencyKey) &&
        Objects.equals(this.status, createCustomInvoiceRequest.status) &&
        Objects.equals(this.lineItems, createCustomInvoiceRequest.lineItems) &&
        Objects.equals(this.autoAdvance, createCustomInvoiceRequest.autoAdvance) &&
        Objects.equals(this.applyCredits, createCustomInvoiceRequest.applyCredits) &&
        Objects.equals(this.applyWalletBalance, createCustomInvoiceRequest.applyWalletBalance);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, ownerType, startDate, endDate, idempotencyKey, status, lineItems, autoAdvance, applyCredits, applyWalletBalance);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateCustomInvoiceRequest {\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    ownerType: ").append(toIndentedString(ownerType)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    idempotencyKey: ").append(toIndentedString(idempotencyKey)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lineItems: ").append(toIndentedString(lineItems)).append("\n");
    sb.append("    autoAdvance: ").append(toIndentedString(autoAdvance)).append("\n");
    sb.append("    applyCredits: ").append(toIndentedString(applyCredits)).append("\n");
    sb.append("    applyWalletBalance: ").append(toIndentedString(applyWalletBalance)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("accountId");
    openapiFields.add("ownerType");
    openapiFields.add("startDate");
    openapiFields.add("endDate");
    openapiFields.add("idempotencyKey");
    openapiFields.add("status");
    openapiFields.add("lineItems");
    openapiFields.add("autoAdvance");
    openapiFields.add("applyCredits");
    openapiFields.add("applyWalletBalance");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("accountId");
    openapiRequiredFields.add("startDate");
    openapiRequiredFields.add("endDate");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("lineItems");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateCustomInvoiceRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateCustomInvoiceRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateCustomInvoiceRequest is not found in the empty JSON string", CreateCustomInvoiceRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateCustomInvoiceRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateCustomInvoiceRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateCustomInvoiceRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("accountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountId").toString()));
      }
      if ((jsonObj.get("ownerType") != null && !jsonObj.get("ownerType").isJsonNull()) && !jsonObj.get("ownerType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ownerType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ownerType").toString()));
      }
      // validate the optional field `ownerType`
      if (jsonObj.get("ownerType") != null && !jsonObj.get("ownerType").isJsonNull()) {
        OwnerTypeEnum.validateJsonElement(jsonObj.get("ownerType"));
      }
      if ((jsonObj.get("idempotencyKey") != null && !jsonObj.get("idempotencyKey").isJsonNull()) && !jsonObj.get("idempotencyKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `idempotencyKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("idempotencyKey").toString()));
      }
      if (!jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // validate the required field `status`
      StatusEnum.validateJsonElement(jsonObj.get("status"));
      // ensure the json data is an array
      if (!jsonObj.get("lineItems").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `lineItems` to be an array in the JSON string but got `%s`", jsonObj.get("lineItems").toString()));
      }

      JsonArray jsonArraylineItems = jsonObj.getAsJsonArray("lineItems");
      // validate the required field `lineItems` (array)
      for (int i = 0; i < jsonArraylineItems.size(); i++) {
        CustomInvoiceLineItem.validateJsonElement(jsonArraylineItems.get(i));
      };
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateCustomInvoiceRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateCustomInvoiceRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateCustomInvoiceRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateCustomInvoiceRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateCustomInvoiceRequest>() {
           @Override
           public void write(JsonWriter out, CreateCustomInvoiceRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateCustomInvoiceRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateCustomInvoiceRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateCustomInvoiceRequest
   * @throws IOException if the JSON string is invalid with respect to CreateCustomInvoiceRequest
   */
  public static CreateCustomInvoiceRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateCustomInvoiceRequest.class);
  }

  /**
   * Convert an instance of CreateCustomInvoiceRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

