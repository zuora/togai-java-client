openapi: 3.0.3
info:
  contact:
    email: engg@togai.com
  description: APIs for Togai App
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Togai Apis
  version: "1.0"
externalDocs:
  description: Find out more about Togai
  url: https://docs.togai.com/docs
servers:
- description: Api endpoint
  url: https://api.togai.com/
- description: Sandbox api endpoint
  url: https://sandbox-api.togai.com/
security:
- bearerAuth: []
tags:
- description: Customer level calls
  name: Customers
- description: Account level calls
  name: Accounts
- description: Event Schema level calls
  name: Event Schemas
- description: Usage Meter level calls
  name: Usage Meters
- description: Price Plan level calls
  name: Price Plans
- description: Settings
  name: Settings
- description: Price Experimentation apis
  name: Price Experimentation
- description: APIs for getting events ingested in Togai
  externalDocs:
    description: docs
    url: https://togai.com/docs/billing/events
  name: Event Management
- description: APIs for getting Togai metrics
  externalDocs:
    description: docs
    url: https://togai.com/docs/metrics
  name: Metrics
- description: Invoices API
  name: Invoices
- description: Credits API
  name: Credits
paths:
  /customers:
    get:
      description: Returns a list of customers with pagination and sort.
      operationId: getCustomers
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                CustomerPaginatedResponse:
                  $ref: '#/components/examples/CustomerPaginatedResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/CustomerPaginatedResponse'
          description: Response for list customers request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List customers
      tags:
      - Customers
      x-accepts: application/json
    post:
      description: This API let’s you to create customers and corresponding accounts.
      operationId: createCustomer
      requestBody:
        $ref: '#/components/requestBodies/CreateCustomerRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                CreateCustomerResponse:
                  $ref: '#/components/examples/CreateCustomerResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/CreateCustomerResponse'
          description: Response for Create customer request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create a customer
      tags:
      - Customers
      x-content-type: application/json
      x-accepts: application/json
  /customers/{customer_id}:
    delete:
      description: This API let’s you to delete a customer using customer_id.
      operationId: deleteCustomer
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        in: path
        name: customer_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Delete a customer
      tags:
      - Customers
      x-accepts: application/json
    get:
      description: Get customer information using customer_id.
      operationId: getCustomer
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        in: path
        name: customer_id
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Customer'
                  value: null
              schema:
                $ref: '#/components/schemas/Customer'
          description: Response for Get customer requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get a customer
      tags:
      - Customers
      x-accepts: application/json
    patch:
      description: This API let’s you to update a customer’s information using customer_id.
      operationId: updateCustomer
      parameters:
      - content:
          application/json:
            schema:
              example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
              maxLength: 50
              type: string
        in: path
        name: customer_id
        required: true
      requestBody:
        $ref: '#/components/requestBodies/UpdateCustomerRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Customer'
                  value: null
              schema:
                $ref: '#/components/schemas/Customer'
          description: Response for Get customer requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update a customer
      tags:
      - Customers
      x-content-type: application/json
      x-accepts: application/json
  /accounts:
    get:
      description: Returns a list of accounts of a customer with pagination and sort.
      operationId: getAccounts
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                AccountPaginatedResponse:
                  $ref: '#/components/examples/AccountPaginatedResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/AccountPaginatedResponse'
          description: Response for list customers request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List accounts of customer
      tags:
      - Accounts
      x-accepts: application/json
    post:
      description: This API let’s you to create an account for a customer using customer_id.
      operationId: createAccount
      requestBody:
        $ref: '#/components/requestBodies/CreateAccountRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
                  value: null
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create an account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts: application/json
  /accounts/{account_id}:
    delete:
      description: This API let’s you to delete a customer using customer_id and account_id.
      operationId: deleteAccount
      parameters:
      - content:
          application/json:
            schema:
              example: ACC00001
              maxLength: 50
              type: string
        description: account_id corresponding to an account
        in: path
        name: account_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Delete an account
      tags:
      - Accounts
      x-accepts: application/json
    get:
      description: Get account information using customer_id and account_id.
      operationId: getAccount
      parameters:
      - content:
          application/json:
            schema:
              example: ACC00001
              maxLength: 50
              type: string
        description: account_id corresponding to an account
        in: path
        name: account_id
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
                  value: null
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get an account
      tags:
      - Accounts
      x-accepts: application/json
    patch:
      description: This API let’s you to update an account’s information using customer_id
        and account_id.
      operationId: updateAccount
      parameters:
      - content:
          application/json:
            schema:
              example: ACC00001
              maxLength: 50
              type: string
        description: account_id corresponding to an account
        in: path
        name: account_id
        required: true
      requestBody:
        $ref: '#/components/requestBodies/UpdateAccountRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
                  value: null
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update an account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts: application/json
  /accounts/{account_id}/add_aliases:
    post:
      description: Add aliases to an account using customer_id and account_id.
      operationId: addAliases
      parameters:
      - content:
          application/json:
            schema:
              example: ACC00001
              maxLength: 50
              type: string
        description: account_id corresponding to an account
        in: path
        name: account_id
        required: true
      requestBody:
        $ref: '#/components/requestBodies/AddAccountAliasesRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
                  value: null
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Add Aliases to account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts: application/json
  /accounts/{account_id}/remove_aliases:
    post:
      description: Remove existing aliases tagged to an account using this API
      operationId: removeAliases
      parameters:
      - content:
          application/json:
            schema:
              example: ACC00001
              maxLength: 50
              type: string
        description: account_id corresponding to an account
        in: path
        name: account_id
        required: true
      requestBody:
        $ref: '#/components/requestBodies/RemoveAccountAliasesRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/Account'
                  value: null
              schema:
                $ref: '#/components/schemas/Account'
          description: Response for Create and Get account requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Remove Aliases to account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts: application/json
  /accounts/{account_id}/price_plans:
    post:
      description: This API let’s you to detach/attach a price plan from/to an existing
        account
      operationId: updatePricingSchedule
      parameters:
      - content:
          application/json:
            schema:
              example: ACC00001
              maxLength: 50
              type: string
        description: account_id corresponding to an account
        in: path
        name: account_id
        required: true
      requestBody:
        $ref: '#/components/requestBodies/UpdatePricingScheduleRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                UpdatePricingScheduleResponse:
                  $ref: '#/components/examples/UpdatePricingScheduleResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/UpdatePricingScheduleResponse'
          description: Response for dis/associate price plan request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Dis/associate a plan from/to an account
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts: application/json
  /accounts/{account_id}/edit_schedules:
    post:
      description: This API let’s you to detach/attach one or more price plans from/to
        an existing account
      operationId: updatePricingScheduleBatch
      parameters:
      - content:
          application/json:
            schema:
              example: ACC00001
              maxLength: 50
              type: string
        description: account_id corresponding to an account
        in: path
        name: account_id
        required: true
      requestBody:
        $ref: '#/components/requestBodies/EditPricingScheduleRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                UpdatePricingScheduleResponse:
                  $ref: '#/components/examples/UpdatePricingScheduleResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/UpdatePricingScheduleResponse'
          description: Response for edit pricing schedule request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Edit schedules of an account.
      tags:
      - Accounts
      x-content-type: application/json
      x-accepts: application/json
  /accounts/{account_id}/pricing_schedules:
    get:
      description: Returns a list of pricing schedules of an account with pagination
        and sort.
      operationId: getPricingSchedules
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: number
        style: form
      - content:
          application/json:
            schema:
              example: ACC00001
              maxLength: 50
              type: string
        description: account_id corresponding to an account
        in: path
        name: account_id
        required: true
      - explode: true
        in: query
        name: start_date
        required: false
        schema:
          example: 2023-03-30T10:41:10.088499
          type: string
        style: form
      - explode: true
        in: query
        name: end_date
        required: false
        schema:
          example: 2099-03-30T10:41:10.088499
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                PricingSchedulePaginatedResponse:
                  $ref: '#/components/examples/PricingSchedulePaginatedResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/PricingSchedulePaginatedResponse'
          description: Response for list pricing schedules request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List pricing schedules of an account
      tags:
      - Accounts
      x-accepts: application/json
  /event_schema:
    get:
      description: Returns a list of event schema with pagination.
      operationId: listEventSchemas
      parameters:
      - description: Filter by provided status
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchemaPaginatedResponse:
                  $ref: '#/components/examples/EventSchemaListPaginatedResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/EventSchemaListPaginatedResponse'
          description: Response for list events request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List event schemas
      tags:
      - Event Schemas
      x-accepts: application/json
    post:
      description: Create an event schema with attributes and dimensions to process
        events.
      operationId: createEventSchema
      requestBody:
        $ref: '#/components/requestBodies/CreateEventSchemaRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
                  value: null
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create an event schema
      tags:
      - Event Schemas
      x-content-type: application/json
      x-accepts: application/json
  /event_schema/{event_schema_name}:
    delete:
      description: "To delete(archive) an event schema, you’re required to archive\
        \ associated active usage meters if any."
      operationId: deleteEventSchema
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        in: path
        name: event_schema_name
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Delete an event schema
      tags:
      - Event Schemas
      x-accepts: application/json
    get:
      description: Get an event schema
      operationId: getEventSchema
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        in: path
        name: event_schema_name
        required: true
      - content:
          application/json:
            schema:
              example: 2
              format: int32
              type: integer
        description: Optional version to get a specific version. Gets latest version
          if it is not provided.
        in: query
        name: version
        required: false
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
                  value: null
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get an event schema
      tags:
      - Event Schemas
      x-accepts: application/json
    patch:
      description: |
        Update an event schema and add new attributes and dimensions

        Once an event schema is activated, you cannot update or delete existing attributes and dimensions however you can add new attributes and dimensions and update event schema description.
            operationId: updateEventSchema
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        in: path
        name: event_schema_name
        required: true
      requestBody:
        $ref: '#/components/requestBodies/UpdateEventSchemaRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
                  value: null
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update an event schema
      tags:
      - Event Schemas
      x-content-type: application/json
      x-accepts: application/json
  /event_schema/{event_schema_name}/versions:
    get:
      description: Get a list of all the versions of an event schema
      operationId: listEventSchemaVersions
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        in: path
        name: event_schema_name
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchemaVersionsResponse:
                  $ref: '#/components/examples/EventSchemaVersionsResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/EventSchemaVersionsResponse'
          description: Response for list event schema versions request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List all event schema versions
      tags:
      - Event Schemas
      x-accepts: application/json
  /event_schema/{event_schema_name}/activate:
    post:
      description: Activate an event schema
      operationId: activateEventSchema
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        in: path
        name: event_schema_name
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
                  value: null
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Activate an event schema
      tags:
      - Event Schemas
      x-accepts: application/json
  /event_schema/{event_schema_name}/deactivate:
    post:
      description: |
        You can deactivate an event schema using this API. In case you have an activate usage meter associated with the event schema, you will need to deactivate it first and then try deactivating the event schema.
      operationId: deactivateEventSchema
      parameters:
      - content:
          application/json:
            schema:
              example: rides
              maxLength: 50
              type: string
        in: path
        name: event_schema_name
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                EventSchema:
                  $ref: '#/components/examples/EventSchema'
                  value: null
              schema:
                $ref: '#/components/schemas/EventSchema'
          description: Response for Create and Get event schema requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Deactivate an event schema
      tags:
      - Event Schemas
      x-accepts: application/json
  /usage_meters:
    get:
      description: Get a list of usage meters associated with an event schema
      operationId: getUsageMetersForEventSchema
      parameters:
      - description: |
          Filter by status
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - ACTIVE
          - INACTIVE
          type: string
        style: form
      - description: |
          Filter by aggregations
        explode: true
        in: query
        name: aggregations
        required: false
        schema:
          enum:
          - COUNT
          - SUM
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                UsageMeterPaginatedResponse:
                  $ref: '#/components/examples/UsageMeterPaginatedResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/UsageMeterPaginatedResponse'
          description: Response for list usage_meters request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List usage meters for event schema
      tags:
      - Usage Meters
      x-accepts: application/json
    post:
      description: Create an usage meter and associate with an event schema
      operationId: createUsageMeter
      requestBody:
        $ref: '#/components/requestBodies/CreateUsageMeterRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
                  value: null
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create an usage meter
      tags:
      - Usage Meters
      x-content-type: application/json
      x-accepts: application/json
  /usage_meters/{usage_meter_id}:
    delete:
      description: Delete an Usage Meter
      operationId: deleteUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.1zYn
              maxLength: 50
              type: string
        in: path
        name: usage_meter_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Delete an Usage Meter
      tags:
      - Usage Meters
      x-accepts: application/json
    get:
      description: Get an usage meter using event schema name and usage meter id.
      operationId: getUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.1zYn
              maxLength: 50
              type: string
        in: path
        name: usage_meter_id
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
                  value: null
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get usage meter
      tags:
      - Usage Meters
      x-accepts: application/json
    patch:
      description: This API lets you update an existing usage meter.
      operationId: updateUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.1zYn
              maxLength: 50
              type: string
        in: path
        name: usage_meter_id
        required: true
      requestBody:
        $ref: '#/components/requestBodies/UpdateUsageMeterRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
                  value: null
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update an usage meter
      tags:
      - Usage Meters
      x-content-type: application/json
      x-accepts: application/json
  /usage_meters/{usage_meter_id}/activate:
    post:
      description: Activate usage meter
      operationId: activateUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.1zYn
              maxLength: 50
              type: string
        in: path
        name: usage_meter_id
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
                  value: null
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Activate usage meter
      tags:
      - Usage Meters
      x-accepts: application/json
  /usage_meters/{usage_meter_id}/deactivate:
    post:
      description: |
        Make an existing active usage meter to be inactive
        Active Usage Meters with active Pricing Plan attached can also be deactivated.
      operationId: deactivateUsageMeter
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.1zYn
              maxLength: 50
              type: string
        in: path
        name: usage_meter_id
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Customer:
                  $ref: '#/components/examples/UsageMeter'
                  value: null
              schema:
                $ref: '#/components/schemas/UsageMeter'
          description: Response for Create and Get usage event requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Deactivate usage meter
      tags:
      - Usage Meters
      x-accepts: application/json
  /price_plans:
    get:
      description: Get a list of price plans
      operationId: getPricePlans
      parameters:
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanPaginatedResponse:
                  $ref: '#/components/examples/PricePlanPaginatedResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/PricePlanPaginatedResponse'
          description: Response for list price plans request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List price plans
      tags:
      - Price Plans
      x-accepts: application/json
    post:
      description: |
        This API let's you create and price plan
        Learn more about [Price Plans](https://docs.togai.com/docs/priceplan)
      operationId: createPricePlan
      requestBody:
        $ref: '#/components/requestBodies/CreatePricePlanRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanResponse:
                  $ref: '#/components/examples/PricePlan'
                  value: null
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create a price plan
      tags:
      - Price Plans
      x-content-type: application/json
      x-accepts: application/json
  /price_plans/{price_plan_id}:
    get:
      description: Get a price plan details using price plan id
      operationId: getPricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.lv25y
              maxLength: 50
              type: string
        in: path
        name: price_plan_id
        required: true
      - content:
          application/json:
            schema:
              example: 2
              format: int32
              type: integer
        description: Optional version to get a specific version. Gets latest version
          if it is not provided.
        in: query
        name: version
        required: false
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanResponse:
                  $ref: '#/components/examples/PricePlan'
                  value: null
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get a price plan
      tags:
      - Price Plans
      x-accepts: application/json
    patch:
      description: |
        Update an existing price plan
        Price Plans with status as DRAFT alone can be updated . Learn more about [Price plans](https://docs.togai.com/docs/priceplan) from our Guides
      operationId: updatePricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.lv25y
              maxLength: 50
              type: string
        in: path
        name: price_plan_id
        required: true
      requestBody:
        $ref: '#/components/requestBodies/UpdatePricePlanRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanResponse:
                  $ref: '#/components/examples/PricePlan'
                  value: null
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update a price plan
      tags:
      - Price Plans
      x-content-type: application/json
      x-accepts: application/json
  /price_plans/{price_plan_id}/activate:
    post:
      description: Activate a price plan details using price plan id
      operationId: activatePricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.lv25y
              maxLength: 50
              type: string
        in: path
        name: price_plan_id
        required: true
      requestBody:
        $ref: '#/components/requestBodies/ActivatePricePlanRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanResponse:
                  $ref: '#/components/examples/PricePlan'
                  value: null
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Activate a price plan
      tags:
      - Price Plans
      x-content-type: application/json
      x-accepts: application/json
  /price_plans/{price_plan_id}/currencies:
    post:
      description: Add currencies to a price plan
      operationId: addCurrencyToPricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.lv25y
              maxLength: 50
              type: string
        in: path
        name: price_plan_id
        required: true
      requestBody:
        $ref: '#/components/requestBodies/AddCurrencyToPricePlanRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanResponse:
                  $ref: '#/components/examples/PricePlan'
                  value: null
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Add currencies to a price plan
      tags:
      - Price Plans
      x-content-type: application/json
      x-accepts: application/json
  /price_plans/{price_plan_id}/currencies/{currency_id}:
    delete:
      description: Remove a draft currency from a price plan
      operationId: removeCurrencyFromPricePlan
      parameters:
      - content:
          application/json:
            schema:
              example: um.1zYnCiM9Bpg.lv25y
              maxLength: 50
              type: string
        in: path
        name: price_plan_id
        required: true
      - content:
          application/json:
            schema:
              example: USD
              maxLength: 50
              type: string
        in: path
        name: currency_id
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                PricePlanResponse:
                  $ref: '#/components/examples/PricePlan'
                  value: null
              schema:
                $ref: '#/components/schemas/PricePlan'
          description: Response for Create and Get price plan requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Remove a draft currency from a price plan
      tags:
      - Price Plans
      x-accepts: application/json
  /addons:
    get:
      description: Get a list of add-ons
      operationId: getAddOns
      parameters:
      - description: |
          Filter by status
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - ACTIVE
          - ARCHIVED
          example: ACTIVE
          type: string
        style: form
      - explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOnPaginatedResponse'
          description: Response for List addons requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List addOns
      tags:
      - AddOns
      x-accepts: application/json
    post:
      description: Create an AddOn
      operationId: createAddOn
      requestBody:
        $ref: '#/components/requestBodies/CreateAddOnRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: Response for Create and Get addons requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create an AddOn
      tags:
      - AddOns
      x-content-type: application/json
      x-accepts: application/json
  /addons/{addon_id}:
    delete:
      description: Archive an addOn
      operationId: deleteAddOn
      parameters:
      - content:
          application/json:
            schema:
              example: addon.1zYnCiM9Bpg.lv25y
              maxLength: 50
              type: string
        in: path
        name: addon_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSuccessResponse'
          description: OK
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Delete an addon
      tags:
      - AddOns
      x-accepts: application/json
    get:
      description: Get details of an addon
      operationId: getAddOn
      parameters:
      - content:
          application/json:
            schema:
              example: addon.1zYnCiM9Bpg.lv25y
              maxLength: 50
              type: string
        in: path
        name: addon_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: Response for Create and Get addons requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get an addon
      tags:
      - AddOns
      x-accepts: application/json
    patch:
      description: |
        Update an existing addon
      operationId: updateAddOn
      parameters:
      - content:
          application/json:
            schema:
              example: addon.1zYnCiM9Bpg.lv25y
              maxLength: 50
              type: string
        in: path
        name: addon_id
        required: true
      requestBody:
        $ref: '#/components/requestBodies/UpdateAddOnRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOn'
          description: Response for Create and Get addons requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update an addon
      tags:
      - AddOns
      x-content-type: application/json
      x-accepts: application/json
  /settings:
    get:
      description: List settings
      operationId: listSetting
      parameters:
      - explode: true
        in: query
        name: entity_type
        required: false
        schema:
          example: ACCOUNT
          type: string
        style: form
      - explode: true
        in: query
        name: entity_id
        required: false
        schema:
          example: acc_X1Df3sRf3
          type: string
        style: form
      - explode: true
        in: query
        name: setting_id
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: namespace
        required: false
        schema:
          example: USER
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                SettingPaginatedResponse:
                  $ref: '#/components/examples/SettingPaginatedResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/SettingPaginatedResponse'
          description: Response for list setting request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Lists settings
      tags:
      - Settings
      x-accepts: application/json
    post:
      description: Create a setting
      operationId: insertSetting
      requestBody:
        $ref: '#/components/requestBodies/CreateSettingRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Setting:
                  $ref: '#/components/examples/Setting'
                  value: null
              schema:
                $ref: '#/components/schemas/Setting'
          description: Response for insert and update settings request
        "204":
          content:
            application/json:
              examples:
                Setting:
                  $ref: '#/components/examples/Setting'
                  value: null
              schema:
                $ref: '#/components/schemas/Setting'
          description: Response for insert and update settings request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Create a setting
      tags:
      - Settings
      x-content-type: application/json
      x-accepts: application/json
  /settings/{setting_id_str}:
    get:
      description: Get a setting
      operationId: getSetting
      parameters:
      - explode: false
        in: path
        name: setting_id_str
        required: true
        schema:
          example: setting.USER.success_threshold.ACCOUNT.G234DZZKBKACATFFGVGEMERFI
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              examples:
                Setting:
                  $ref: '#/components/examples/Setting'
                  value: null
              schema:
                $ref: '#/components/schemas/Setting'
          description: Response for insert and update settings request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get a setting
      tags:
      - Settings
      x-accepts: application/json
    patch:
      description: Update a setting
      operationId: updateSetting
      parameters:
      - explode: false
        in: path
        name: setting_id_str
        required: true
        schema:
          example: setting.USER.success_threshold.ACCOUNT.G234DZZKBKACATFFGVGEMERFI
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/UpdateSettingRequest'
      responses:
        "201":
          content:
            application/json:
              examples:
                Setting:
                  $ref: '#/components/examples/Setting'
                  value: null
              schema:
                $ref: '#/components/schemas/Setting'
          description: Response for insert and update settings request
        "204":
          content:
            application/json:
              examples:
                Setting:
                  $ref: '#/components/examples/Setting'
                  value: null
              schema:
                $ref: '#/components/schemas/Setting'
          description: Response for insert and update settings request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Update a setting
      tags:
      - Settings
      x-content-type: application/json
      x-accepts: application/json
  /revenue_calculator:
    post:
      description: Calculate and return the revenue for a existing or new price plan
      operationId: calculateRevenue
      requestBody:
        $ref: '#/components/requestBodies/CalculateRevenueRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                CalculateRevenueResponse:
                  $ref: '#/components/examples/CalculateRevenueResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/CalculateRevenueResponse'
          description: Response payload for calculateRevenueAPI
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Calculate and return the revenue for a existing or new price plan
      tags:
      - Price Experimentation
      x-content-type: application/json
      x-accepts: application/json
  /ingest:
    post:
      description: |
        This API let’s you to ingest events to your Togai account.
        Events ingested using this API will be processed via associated usage meters and further via associated price plans to generate final billable value to invoice the customer
        Read more about [Event Ingestion](https://docs.togai.com/docs/event-ingestion)
      operationId: ingest
      requestBody:
        content:
          application/json:
            examples:
              IngestEventRequest:
                $ref: '#/components/examples/IngestEventRequest'
                value: null
            schema:
              $ref: '#/components/schemas/IngestEventRequest'
        description: Request body to ingest events to Togai usage and billing management
          service.
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestEventResponse'
          description: Successfully accepted to process all the events from payload.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestEventResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential "x-api-key" is not valid. Please check the response
            message for failure details.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process the events as the size of the event payload
            is above the supported limit. Please check our docs for the api limits
            - https://togai.com/docs/limits.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service is currently unavailable to process the request.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Ingest events to Togai
      tags:
      - Event Ingestion
      x-controller-name: EventIngestionController
      x-operation-name: ingest
      x-content-type: application/json
      x-accepts: application/json
  /ingestBatch:
    post:
      description: |-
        This API let’s you to ingest events in batch upto 1000 events.
        Ingest large amounts of events up to 1000 in batches in an array using this API.
      operationId: ingestBatch
      requestBody:
        content:
          application/json:
            examples:
              IngestEventBatchRequest:
                $ref: '#/components/examples/IngestEventBatchRequest'
                value: null
            schema:
              $ref: '#/components/schemas/IngestBatchEventRequest'
        description: Request body to ingest events in batch to Togai usage and billing
          management service.
        required: true
      responses:
        "202":
          content:
            application/json:
              example:
                success: true
              schema:
                $ref: '#/components/schemas/IngestEventResponse'
          description: Successfully accepted to process all the events from payload.
        "207":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestEventResponse'
          description: Partial failure. Few events from request were not accepted
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IngestEventResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential "x-api-key" is not valid. Please check the response
            message for failure details.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process the events as the size of the event payload
            is above the supported limit. Please check our docs for the api limits
            - https://togai.com/docs/limits.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        "503":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Service is currently unavailable to process the request.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Ingest events to Togai in batch
      tags:
      - Event Ingestion
      x-controller-name: EventIngestionController
      x-operation-name: ingestBatch
      x-content-type: application/json
      x-accepts: application/json
  /events:
    get:
      description: This API let’s you to fetch a list of events with multiple query
        parameters
      operationId: getEvents
      parameters:
      - description: Pagination token used as a marker to get records from next page.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - description: Filter option to filter by status.
        examples:
          processed:
            value: PROCESSED
          in_progress:
            value: IN_PROGRESS
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: Filter option to filter based on account id.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          example: "1234"
          type: string
        style: form
      - description: Filter option to filter the events based on schema name.
        explode: true
        in: query
        name: schema_name
        required: false
        schema:
          example: Rides
          type: string
        style: form
      - description: "Maximum page size expected by client to return the record list.\
          \ \n\n NOTE: Max page size cannot be more than 50. Also 50 is the default\
          \ page size if no value is provided."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                GetEventsResponse:
                  $ref: '#/components/examples/GetEventsResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/GetEventsResponse'
          description: Success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential is not valid. Please check the response message
            for failure details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential does not have access to list events.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process the query parameters provided. Please check
            our docs for the api limits - https://togai.io/docs/limits.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get a list of usage events with multiple query options
      tags:
      - Event Management
      x-accepts: application/json
  /events/{event_id}:
    get:
      description: Fetch details of a particular event using the event ID.
      operationId: getSingleEvent
      parameters:
      - content:
          application/json:
            schema:
              example: f4a52f2d-b798-4e08-8b24-db0a5a468ba3
              maxLength: 50
              type: string
        in: path
        name: event_id
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                GetEventResponse:
                  $ref: '#/components/examples/GetEventResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/GetEventResponse'
          description: Success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential is not valid. Please check the response message
            for failure details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential does not have access to get events.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get an usage event using event id
      tags:
      - Event Management
      x-accepts: application/json
  /metrics:
    post:
      description: "Togai Metrics API allows you to fetch different metrics from Events,\
        \ Usage Meters and PricePlans with multiple queryable options.\nA single request\
        \ can query up to five metrics. \nSingle response can contain a maximum of\
        \ 100 data points.\n"
      operationId: getMetrics
      requestBody:
        $ref: '#/components/requestBodies/GetMetricsRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                GetMetricsResponse:
                  $ref: '#/components/examples/GetMetricsResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/GetMetricsResponse'
          description: Success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential is not valid. Please check the response message
            for failure details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential does not have access to get metrics.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get Togai Metrics
      tags:
      - Metrics
      x-content-type: application/json
      x-accepts: application/json
  /invoices:
    get:
      description: List invoices
      operationId: listInvoices
      parameters:
      - description: Pagination token used as a marker to get records from next page.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - description: Filter option to filter by status.
        examples:
          processed:
            value: PROCESSED
          in_progress:
            value: IN_PROGRESS
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: Filter option to filter based on account id.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          example: "1234"
          type: string
        style: form
      - description: Filter option to filter based on customer id.
        explode: true
        in: query
        name: customer_id
        required: false
        schema:
          example: "1234"
          type: string
        style: form
      - description: "Maximum page size expected by client to return the record list.\
          \ \n\n NOTE: Max page size cannot be more than 50. Also 50 is the default\
          \ page size if no value is provided."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: integer
        style: form
      - description: Start time filter in epoch milli seconds
        explode: true
        in: query
        name: start_time
        required: false
        schema:
          example: 1650110402000
          format: int64
          type: integer
        style: form
      - description: End time filter in epoch milli seconds
        explode: true
        in: query
        name: end_time
        required: false
        schema:
          example: 1650110402000
          format: int64
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                ListInvoicesResponse:
                  $ref: '#/components/examples/ListInvoicesResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/ListInvoicesResponse'
          description: Success response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Bad request. Please check the response message for failure
            details.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential is not valid. Please check the response message
            for failure details.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Credential does not have access to this operation.
        "422":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Unable to process the query parameters provided. Please check
            our docs for the api limits - https://togai.io/docs/limits.
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Request throttled. Please check the response message on the
            failure details.
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List invoices
      tags:
      - Invoices
      x-accepts: application/json
  /invoices/{invoice_id}:
    get:
      description: Get invoice
      operationId: getInvoice
      parameters:
      - content:
          application/json:
            schema:
              example: ACC001
              type: string
        in: path
        name: invoice_id
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Invoice:
                  $ref: '#/components/examples/Invoice'
                  value: null
              schema:
                $ref: '#/components/schemas/Invoice'
          description: Response for Get invoice requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get an invoice
      tags:
      - Invoices
      x-accepts: application/json
  /invoices/{invoice_id}/miscellaneous_charges:
    put:
      description: Add or update miscellaneous charges in Invoice
      operationId: manageMiscellaneousChargesInInvoice
      parameters:
      - content:
          application/json:
            schema:
              example: ACC001
              type: string
        in: path
        name: invoice_id
        required: true
      requestBody:
        $ref: '#/components/requestBodies/ManageMiscellaneousChargesRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                MiscellaneousChargesResponse:
                  $ref: '#/components/examples/MiscellaneousChargesResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MiscellaneousChargesResponse'
          description: Response for Miscellaneous Charges Request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Add or update miscellaneous charges in Invoice
      tags:
      - Invoices
      x-content-type: application/json
      x-accepts: application/json
  /accounts/{account_id}/miscellaneous_charges:
    put:
      description: Add or update miscellaneous charges in upcoming Invoice for a account
      operationId: manageMiscellaneousChargesInAccount
      parameters:
      - content:
          application/json:
            schema:
              example: ACC00001
              maxLength: 50
              type: string
        description: account_id corresponding to an account
        in: path
        name: account_id
        required: true
      requestBody:
        $ref: '#/components/requestBodies/ManageMiscellaneousChargesRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                MiscellaneousChargesResponse:
                  $ref: '#/components/examples/MiscellaneousChargesResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/MiscellaneousChargesResponse'
          description: Response for Miscellaneous Charges Request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Add or update miscellaneous charges in upcoming Invoice for a account
      tags:
      - Invoices
      x-content-type: application/json
      x-accepts: application/json
  /credits:
    get:
      description: Get all credits
      operationId: listCredits
      parameters:
      - description: Pagination token used as a marker to get records from next page.
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          type: string
        style: form
      - description: Filter option to filter by status.
        examples:
          processed:
            value: PROCESSED
          in_progress:
            value: IN_PROGRESS
        explode: true
        in: query
        name: status
        required: false
        schema:
          type: string
        style: form
      - description: Filter option to filter based on account id.
        explode: true
        in: query
        name: account_id
        required: false
        schema:
          example: "1234"
          type: string
        style: form
      - description: Filter option to filter based on credit id.
        explode: true
        in: query
        name: id
        required: false
        schema:
          example: cred.1znpoFlsI3U.zmg85
          type: string
        style: form
      - description: "Maximum page size expected by client to return the record list.\
          \ \n\n NOTE: Max page size cannot be more than 50. Also 50 is the default\
          \ page size if no value is provided."
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          example: 10
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              examples:
                ListCreditsResponse:
                  $ref: '#/components/examples/ListCreditsResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/ListCreditsResponse'
          description: Response for Get invoice requests
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: List credits
      tags:
      - Credits
      x-accepts: application/json
    post:
      description: Grant credit
      operationId: createCredit
      requestBody:
        $ref: '#/components/requestBodies/CreateCreditRequest'
      responses:
        "200":
          content:
            application/json:
              examples:
                Credit:
                  $ref: '#/components/examples/Credit'
                  value: null
              schema:
                $ref: '#/components/schemas/Credit'
          description: Response for List credits request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Grant credit
      tags:
      - Credits
      x-content-type: application/json
      x-accepts: application/json
  /credits/{credit_id}:
    get:
      description: Get credit details
      operationId: getCreditDetails
      parameters:
      - content:
          application/json:
            schema:
              example: creds.1znQx9jiIXw.r44fc
              type: string
        in: path
        name: credit_id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreditDetailsResponse'
          description: Response for Fetch Credit Details request. This contains Credit
            Transactions
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Get credit details
      tags:
      - Credits
      x-accepts: application/json
  /credits/{credit_id}/void:
    post:
      description: Void credit
      operationId: voidCredit
      parameters:
      - content:
          application/json:
            schema:
              example: creds.1znQx9jiIXw.r44fc
              type: string
        in: path
        name: credit_id
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                Credit:
                  $ref: '#/components/examples/Credit'
                  value: null
              schema:
                $ref: '#/components/schemas/Credit'
          description: Response for List credits request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Void credit
      tags:
      - Credits
      x-accepts: application/json
  /accounts/{account_id}/credit_balance:
    get:
      description: Credit balance for Account
      operationId: CreditBalanceForAccount
      parameters:
      - content:
          application/json:
            schema:
              example: ACC00001
              maxLength: 50
              type: string
        description: account_id corresponding to an account
        in: path
        name: account_id
        required: true
      responses:
        "200":
          content:
            application/json:
              examples:
                CreditBalanceResponse:
                  $ref: '#/components/examples/CreditBalanceResponse'
                  value: null
              schema:
                $ref: '#/components/schemas/CreditBalanceResponse'
          description: Response for Credit Balance Request
        "400":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "401":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "403":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "404":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        "429":
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
        default:
          content:
            application/json:
              examples:
                ErrorResponse:
                  summary: Error message
                  value:
                    message: <Reason message>
              schema:
                $ref: '#/components/schemas/ErrorResponse'
          description: Error response
      summary: Credit balance for Account
      tags:
      - Credits
      x-accepts: application/json
components:
  examples:
    SignupRequest:
      value:
        name: ACME Enterprise
        description: Brief description about ACME
        userDetails:
          name: Lorem Ipsum
          password: blackbELt@314
          email: john@example.com
          phone: +123456789
    CreateCustomerRequest:
      value:
        id: 01BX5ZZKBKACTAV9WEVGEMMVRZ
        name: ACME Enterprise
        primaryEmail: admin@example.com
        billingAddress: "201 Boulevard, WA 53123"
        settings:
        - id: customerSettingId
          value: INR
          namespace: USER
          name: Settings Name
          dataType: STRING
        account:
          id: ACC00001
          name: Primary Account
          invoiceCurrency: USD
          aliases:
          - acme_primary
          - admin@example.com
          settings:
          - id: accountSettingId
            value: INR
            namespace: USER
            name: Settings Name
            dataType: STRING
    UpdateCustomerRequest:
      value:
        name: ACME Enterprise
        primaryEmail: admin@example.com
        billingAddress: 201 Bleeker Street
    CreateAccountRequestWithoutCustomerId:
      value:
        id: ACC00001
        name: Primary Account
        aliases:
        - acme_primary
        - acme_1
        settings:
        - id: accountSettingId
          value: INR
          namespace: USER
          name: Settings Name
          dataType: STRING
    CreateAccountRequest:
      value:
        id: ACC00001
        name: Primary Account
        customerId: C1234qwd
        aliases:
        - acme_primary
        - acme_1
        settings:
        - id: accountSettingId
          value: INR
          namespace: USER
          name: Settings Name
          dataType: STRING
    UpdateAccountRequest:
      value:
        name: New Account Name
    AddAccountAliasesRequest:
      value:
        aliases:
        - account2@acme.com
        - +1234567890
    RemoveAccountAliasesRequest:
      value:
        aliases:
        - account2@acme.com
        - +1234567890
    CreateEventSchemaRequest:
      summary: Create event schema request payload
      value:
        name: ride_completed
        description: Cab ride completed
        attributes:
        - name: distance
        - name: time
        dimensions:
        - name: city
        - name: vehicle_type
        enrichments:
          dependencies:
          - type: SETTING
            key: setting.user.meters_per_km
            name: meters_per_km
          fields:
          - name: distanceInKM
            type: ATTRIBUTE
            enrichmentType: JSON_LOGIC
            value: "{\"/\":[{\"var\":[\"attribute.distance\"]},{\"var\":[\"dependencies.meters_per_km\"\
              ]}]}"
            order: 1
          - name: rideType
            type: DIMENSION
            enrichmentType: JSON_LOGIC
            value: "{\"if\":[{\"<=\":[100,{\"var\":[\"attribute.distanceInKM\"]}]},\"\
              long_distance\",\"short_distance\"]}"
            order: 2
    UpdateEventSchemaRequest:
      summary: Update event schema request payload
      value:
        description: Cab ride completed
        status: DRAFT
        attributes:
        - name: distance
        - name: time
        dimensions:
        - name: city
        - name: vehicle_type
        enrichments:
          dependencies:
          - type: SETTING
            key: setting.user.meters_per_km
            name: meters_per_km
          fields:
          - name: distanceInKM
            type: ATTRIBUTE
            enrichmentType: JSON_LOGIC
            value: "{\"/\":[{\"var\":[\"attribute.distance\"]},{\"var\":[\"dependencies.meters_per_km\"\
              ]}]}"
            order: 1
          - name: rideType
            type: DIMENSION
            enrichmentType: JSON_LOGIC
            value: "{\"if\":[{\"<=\":[100,{\"var\":[\"attribute.distanceInKM\"]}]},\"\
              long_distance\",\"short_distance\"]}"
            order: 2
    CreateUsageMeterRequest:
      value:
        name: Rides
        description: Cab rides
        type: COUNTER
        aggregation: SUM
        eventSchemaName: evfhr123d
        computations:
        - matcher: |
            {
              "and": [
                {"in": [{"var": "dimension.city"}, "chennai", "mumbai"]},
                "or": [
                  {">": [{"var": "attribute.distance"}, 100]},
                  {"<": [{"var": "attribute.distance"}, 20]}
                ]
              ]
            }
          computation:
            '*':
            - var: attributes.distance
            - 0.4
    CreatePricePlanRequest:
      value:
        name: Rides - Pro plan
        description: Price Plan
        pricePlanDetails:
          supportedCurrencies:
          - USD
          pricingCycleConfig:
            interval: MONTHLY
            startOffset:
              dayOffset: "4"
              monthOffset: "1"
            gracePeriod: 3
          usageRateCards:
          - displayName: Local Rides
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            ratePlan:
              pricingModel: TIERED
              slabs:
              - order: 1
                startAfter: 0
                priceType: FLAT
            rateValues:
            - currency: USD
              slabRates:
              - rate: 40
                order: 1
    UpdatePricePlanRequest:
      value:
        description: updated description
        pricePlanDetails:
          pricingCycleConfig:
            interval: MONTHLY
            startOffset:
              dayOffset: "6"
              monthOffset: NIL
            gracePeriod: 3
        mode: IMMEDIATE_IGNORE_OVERRIDE
    ActivatePricePlanRequest:
      value:
        currencies:
        - USD
        - INR
    FirstCalculateRevenueRequestExample:
      description: |
        Example request for calculate revenue API on a existing price plan with custom currency and usage.
      value:
        currencyConfig:
          mode: CUSTOM
          currency: USD
        pricePlanDetailsConfig:
          mode: PRICE_PLAN
          pricePlanId: pp.fdhkf.djf
          effectiveOn: {}
          pricingCycleOrdinal: 1
        usageConfig:
          mode: CUSTOM
          usageMap:
            um.1zcgWalbM2y.qaX5j: 100
    SecondCalculateRevenueRequestExample:
      description: |
        Example request for calculate revenue API on a custom price plan with currency as the invoice currency of a existing account, and existing usage of a account over a time period
      value:
        currencyConfig:
          mode: ACCOUNT_INVOICE
          accountId: ACC00001
        pricePlanDetailsConfig:
          mode: CUSTOM
          pricingCycleOrdinal: 1
          pricePlanDetails:
            supportedCurrencies:
            - USD
            pricingCycleConfig:
              interval: MONTHLY
              startOffset:
                dayOffset: "4"
                monthOffset: "1"
              gracePeriod: 3
            usageRateCards:
            - displayName: Local Rides
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              ratePlan:
                pricingModel: TIERED
                slabs:
                - order: 1
                  startAfter: 0
                  priceType: FLAT
              rateValues:
              - currency: USD
                slabRates:
                - rate: 40
                  order: 1
        usageConfig:
          mode: LOOKUP_RANGE
          lookupRange:
            start: {}
            end: {}
            accountId: ACC00001
    ThirdCalculateRevenueRequestExample:
      description: |
        Example request for calculate revenue API on a already associated price plan of the account  with currency as the invoice currency of an existing account, and existing usage of a account over a certain pricing cycle
      value:
        currencyConfig:
          mode: ACCOUNT_INVOICE
          accountId: ACC00001
        pricePlanDetailsConfig:
          mode: ACCOUNT
          accountId: ACC00001
          effectiveOn: {}
        usageConfig:
          mode: LOOKUP_CYCLE
          lookupCycle:
            accountId: ACC00001
            cycleEffectiveOn: {}
    UpdatePricingScheduleAssociateRequest:
      value:
        mode: ASSOCIATE
        pricePlanId: pp.1zYnCiM9Bpg.lv25y
        effectiveFrom: 2022-07-04
        effectiveUntil: 2022-10-04
    UpdatePricingScheduleDisassociateRequest:
      value:
        mode: DISASSOCIATE
        effectiveFrom: 2022-07-04
        effectiveUntil: 2022-10-04
    EditPricingScheduleRequest:
      value:
        edits:
        - mode: ASSOCIATE
          pricePlanId: pp.1zYnCiM9Bpg.lv25y
          effectiveFrom: 2022-07-04
          effectiveUntil: 2022-10-04
        - mode: DISASSOCIATE
          effectiveFrom: 2022-08-04
          effectiveUntil: 2022-09-04
    AddCurrencyToPricePlanRequest:
      value:
        currency: USD
        usageRates:
        - usageMeterId: um.1zYnCiM9Bpg.1zYn
          slabRates:
          - order: 0
            rate: 100
            config:
              minimumValue: 0
    UpdateSettingRequest:
      value:
        value: "{\"USD\":\"1\"}"
        name: Base_Currency
        dataType: JSON
    UpdateOrganizationSettingRequest:
      value:
        baseCurrency: USD
    Customer:
      summary: A sample Customer
      value:
        id: 01BX5ZZKBKACTAV9WEVGEMMVRZ
        name: ACME Enterprise
        primaryEmail: admin@example.com
        billingAddress: "201 Boulevard, WA 53123"
        status: ACTIVE
        updatedAt: 2020-07-04T12:00:00.000Z
        createdAt: 2020-07-04T12:00:00.000Z
    CreateCustomerResponse:
      value:
        id: 01BX5ZZKBKACTAV9WEVGEMMVRZ
        name: ACME Enterprise
        primaryEmail: admin@example.com
        billingAddress: "201 Boulevard, WA 53123"
        settings:
        - id: customerSettingId
          value: INR
          namespace: USER
          name: Settings Name
          dataType: STRING
        account:
          id: G234DZZKBKACATFFGVGEMERFH
          name: ACME Enterprise - Account
          invoiceCurrency: USD
          status: ACTIVE
          aliases:
          - alias: G234DZZKBKACATFFGVGEMERFH
            status: ACTIVE
          settings:
          - id: accountSettingId
            value: INR
            namespace: USER
            name: Settings Name
            dataType: STRING
    CustomerPaginatedResponse:
      value:
        data:
        - id: 01BX5ZZKBKACTAV9WEVGEMMVRZ
          name: ACME Enterprise
          primaryEmail: admin@example.com
          billingAddress: "201 Boulevard, WA 53123"
          status: ACTIVE
          createdAt: {}
          updatedAt: {}
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
    AccountPaginatedResponse:
      value:
        data:
        - id: G234DZZKBKACATFFGVGEMERFI
          name: ACME Enterprise - Account2
          status: ACTIVE
          aliases:
          - alias: account2@acme.com
            status: ACTIVE
          - alias: +1234567890
            status: ARCHIVED
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
    EventSchemaListPaginatedResponse:
      value:
        data:
        - name: ride_completed
          description: Cab ride completed
          version: 1
          status: DRAFT
          attributes:
          - name: distance
          - name: time
          dimensions:
          - name: city
          - name: ride_type
          usageMetersCount: 10
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
    UsageMeterPaginatedResponse:
      value:
        data:
        - id: 01BX5ZZKBKACTAV9WEVG
          name: Rides
          description: Cab rides
          type: COUNTER
          aggregation: COUNT
          status: DRAFT
          computations:
          - matcher: |
              {
                "and": [
                  {"in": [{"var": "dimension.city"}, "chennai", "mumbai"]},
                  "or": [
                    {">": [{"var": "attribute.distance"}, 100]},
                    {"<": [{"var": "attribute.distance"}, 20]}
                  ]
                ]
              }
            computation: "1"
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
    UpdatePricingScheduleResponse:
      value:
        accountId: G234DZZKBKACATFFGVGEMERFI
        accountName: ACME Enterprise - Account2
        pricingSchedules:
        - pricePlanId: pp.1zYnCiM9Bpg.lv25y
          startDate: 2022-12-02T00:00:00Z
          endDate: 9999-01-01T00:00:00Z
    EditPricingScheduleResponse:
      value:
        accountId: G234DZZKBKACATFFGVGEMERFI
        accountName: ACME Enterprise - Account2
        pricingSchedules:
        - pricePlanId: pp.1zYnCiM9Bpg.lv25y
          startDate: 2022-12-02T00:00:00Z
          endDate: 9999-01-01T00:00:00Z
    CalculateRevenueResponse:
      value:
        currency: USD
        revenueInfo:
        - usageRateCard:
            displayName: AfterShip Shipments1
            usageMeterId: um.1zcgWalbM2y.qaX5j
            ratePlan:
              pricingModel: TIERED
              slabs:
              - priceType: PER_UNIT
                startAfter: 0
                order: 1
              - priceType: PACKAGE
                startAfter: 2
                order: 2
                slabConfig:
                  packageSize: 10
            rateValues:
            - currency: USD
              slabRates:
              - order: 1
                rate: 10
                slabRateConfig:
                  minimumRate: 1
                  maximumRate: 10
              - order: 2
                rate: 20
        - revenueSummary:
            usages:
              um.fdjal.kdajf: 10
            slabRevenues:
            - order: 1
              usage: 10
              revenue: 100
            - order: 2
              usage: 0
              revenue: 0
    Account:
      summary: A sample Account
      value:
        id: G234DZZKBKACATFFGVGEMERFI
        name: ACME Enterprise - Account2
        invoiceCurrency: USD
        aliases:
        - alias: account2@acme.com
          status: ACTIVE
        - alias: +1234567890
          status: ACTIVE
        status: ACTIVE
    EventSchema:
      summary: A sample event schema
      value:
        name: ride_completed
        description: Cab ride completed
        version: 1
        status: DRAFT
        attributes:
        - name: distance
        - name: time
        dimensions:
        - name: city
        - name: ride_type
    EventSchemaVersionsResponse:
      summary: A sample event schema versions response
      value:
        data:
        - name: ride_completed
          description: Cab ride completed
          version: 1
          status: DRAFT
          attributes:
          - name: distance
          - name: time
          dimensions:
          - name: city
          - name: ride_type
    UsageMeter:
      value:
        id: um.1zlQTBWlkeO.lB7fh
        name: Rides
        description: Cab rides
        type: COUNTER
        aggregation: COUNT
        status: DRAFT
        computations:
        - matcher: |
            {
              "and": [
                {"in": [{"var": "dimension.city"}, "chennai", "mumbai"]},
                "or": [
                  {">": [{"var": "attribute.distance"}, 100]},
                  {"<": [{"var": "attribute.distance"}, 20]}
                ]
              ]
            }
          computation: "1"
    PricePlan:
      value:
        id: pp.1zl4adkQtKi.K7qrl
        name: price-plan-743762526
        status: ACTIVE
        usageMeters:
        - um.1zl4adcyXse.sPF2u
        pricePlanDetails:
          supportedCurrencies:
          - USD
          activeCurrencies:
          - USD
          pricingCycleConfig:
            interval: MONTHLY
            startOffset:
              dayOffset: "1"
              monthOffset: 1
            gracePeriod: 1
          usageRateCards:
          - displayName: AfterShip Shipments1-743762526
            usageMeterId: um.1zl4adcyXse.sPF2u
            ratePlan:
              pricingModel: TIERED
              slabs:
              - order: 1
                startAfter: 1
                priceType: PER_UNIT
                slabConfig: null
            rateValues:
            - currency: USD
              slabRates:
              - order: 1
                rate: 10
                slabRateConfig:
                  newKey: newValues
        createdAt: 2023-02-02T12:09:57.835211Z
        updatedAt: 2023-02-02T12:09:57.898191Z
        description: null
    PricePlanPaginatedResponse:
      value:
        data:
        - id: um.1zYnCiM9Bpg.lv25y
          name: Rides - Pro plan
          description: ""
          status: DRAFT
          usageMeters:
          - um.1zlQTBWlkeO.lB7fh
          - um.1zYnCiM9Bpg.1zYn
          pricePlanDetails:
            pricingCycleConfig:
              interval: MONTHLY
              startOffset:
                dayOffset: "4"
                monthOffset: NIL
              gracePeriod: 3
            usageRateCards:
            - displayName: Local Rides
              pricingModel: TIERED
              rateConfig:
                usageMeterId: um.1zYnCiM9Bpg.1zYn
                slabs:
                - rate: 100
                  priceType: PER_UNIT
                  startAfter: 0
                  order: 1
                - rate: 40
                  priceType: PER_UNIT
                  startAfter: 10
                  order: 2
                - rate: 10
                  priceType: PER_UNIT
                  startAfter: 50
                  order: 3
          updatedAt: 2020-01-01T00:00:00Z
          createdAt: 2020-01-01T00:00:00Z
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
    PricingSchedulePaginatedResponse:
      value:
        data:
        - pricePlanId: pp.bs8932bf328
        - startDate: 2080-10-04T00:00:00Z
          endDate: 2099-10-04T00:00:00Z
          pricePlanDetails:
            supportedCurrencies:
            - USD
            activeCurrencies:
            - USD
            pricingCycleConfig:
              interval: MONTHLY
              startOffset:
                dayOffset: "4"
                monthOffset: NIL
              gracePeriod: 3
            usageRateCards:
            - displayName: Local Rides
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              ratePlan:
                pricingModel: TIERED
                slabs:
                - order: 1
                  startAfter: 0
                  priceType: FLAT
              rateValues:
              - currency: USD
                slabRates:
                - rate: 40
                  order: 1
            fixedFeeRateCards:
            - id: addon.2077efUBMXo.DyzlZ
              displayName: Maintenance
              rateValues:
              - currency: USD
                rate: 10
            minimumCommitment:
              displayName: Minimum Commitment
              rateValues:
              - currency: USD
                rate: 10
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
    RateCardUsage:
      value:
        type: USAGE
        usageMeters:
        - 01BX55ZZdifACTAV9WEV
        displayName: Local Rides
        pricingModel: TIERED
        rateConfig:
          usageMeterId: um.1zYnCiM9Bpg.1zYn
          slabs:
          - rate: 100
            priceType: PER_UNIT
            startAfter: 0
            order: 1
          - rate: 40
            priceType: PER_UNIT
            startAfter: 10
            order: 2
          - rate: 10
            priceType: PER_UNIT
            startAfter: 50
            order: 3
    Setting:
      value:
        id: UserSetting
        value: INR
        entityType: ORGANIZATION
        entityId: XlK5h64gND
        namespace: USER
        name: Settings Name
        dataType: STRING
    SettingPaginatedResponse:
      value:
        data:
        - id: TogaiSetting
          value: INR
          entityType: ORGANIZATION
          entityId: XlK5h64gND
          namespace: togai
          name: Settings Name
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
        context:
          pageSize: 10
    OrganizationSetting:
      value:
        baseCurrency: INR
    IngestEventRequest:
      summary: example event ingestion request
      value:
        event:
          timestamp: 2022-06-15T07:30:35.123
          schemaName: travelCompletedEvent
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          accountId: "1"
          attributes:
          - name: distanceTravelled
            value: "50"
            unit: Miles
          - name: timeSpent
            value: "60"
            unit: Minutes
          dimensions:
            location: Seattle
            costCenterCode: "1234"
            travelType: Business
    IngestEventBatchRequest:
      summary: example batch event ingestion request
      value:
        events:
        - timestamp: 2022-06-15T07:30:35.123
          schemaName: travelCompletedEvent
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          accountId: "1"
          attributes:
          - name: distanceTravelled
            value: "50"
            unit: Miles
          - name: timeSpent
            value: "60"
            unit: Minutes
          dimensions:
            location: Seattle
            costCenterCode: "1234"
            travelType: Business
        - timestamp: 2022-06-15T07:30:35.123
          schemaName: sendMessageEvent
          id: c0b1306d-f506-43a6-856b-69221efaee6c
          accountId: "1"
          attributes:
          - name: messageSentCount
            value: "50"
            unit: None
          - name: sizeOfMessage
            value: "60"
            unit: KiloBytes
          dimensions:
            location: Seattle
            costCenterCode: "1234"
            messageProviderName: Twilio
    GetEventResponse:
      summary: example get event response
      value:
        events:
        - eventPayload:
            timestamp: 2023-02-23T14:25:10Z
            schemaName: travelCompletedEvent
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            accountId: "1"
            attributes:
            - name: distanceTravelled
              value: 50
              unit: Miles
            - name: timeSpent
              value: 60
              unit: Minutes
            dimensions:
              location: Seattle
              costCenterCode: 1234
              travelType: Business
          eventPipelineInfo:
            eventSchema:
              name: Rides
              version: 1
            usageMeters:
            - id: 23bh55ZZdifACTAV9WEV
              name: rides_distance
              version: 1
              status: PROCESSED_UNITS_COMPUTED
              units: 10.42
            - id: 23bh55ZZdifACTAV9WEV
              name: rides_time
              version: 1
              status: PROCESSED_FILTERED_OUT
            pricePlans:
            - name: pro-plan
              id: 68551191-982b-4663-92fa-38a6f8313e91
              scheduleId: c0b1306d-f506-43a6-856b-69221efaee6b
              cycleStart: 04-03-2022
              cycleEnd: 04-04-2022
            account:
              id: acme-prod
            customer:
              id: acme_inc
          ingestionStatus:
            status: INGESTION_COMPLETED_EVENT_NOT_BILLED
            statusDescription: Event ingestion completed successfully but the event
              is not associated with any bill plan.
    GetEventsResponse:
      summary: example get batch event response
      value:
        events:
        - eventPayload:
            timestamp: 2023-02-23T14:25:10Z
            schemaName: travelCompletedEvent
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            accountId: "1"
            attributes:
            - name: distanceTravelled
              value: 50
              unit: Miles
            - name: timeSpent
              value: 60
              unit: Minutes
            dimensions:
              location: Seattle
              costCenterCode: 1234
              travelType: Business
          ingestionStatus:
            status: INGESTION_COMPLETED_EVENT_NOT_BILLED
            statusDescription: Event ingestion completed successfully but the event
              is not associated with any bill plan.
        - eventPayload:
            timestamp: 2023-02-23T14:25:10Z
            schemaName: sendMessageEvent
            id: c0b1306d-f506-43a6-856b-69221efaee6c
            accountId: "1"
            attributes:
            - name: messageSentCount
              value: 50
              unit: None
            - name: sizeOfMessage
              value: 60
              unit: KiloBytes
            dimensions:
              location: Seattle
              costCenterCode: 1234
              messageProviderName: Twilio
          ingestionStatus:
            status: INGESTION_COMPLETED
            statusDescription: Ingestion completed successfully
    GetMetricsResponse:
      summary: example get metrics response
      value:
        results:
        - id: m1
          name: EVENTS
          data:
            timestamps:
            - 2017-07-21T00:00:00Z
            - 2017-07-22T00:00:00Z
            metricValues:
            - 53
            - 32
        - id: m2
          name: USAGE
          data:
            timestamps:
            - 2017-07-01T00:00:00Z
            metricValues:
            - 123.45
    Invoice:
      summary: A sample Invoice
      value:
        id: inv.hkgkgyh.ghg
        customerId: 7VcRw9xZDIqsC5E
        accountId: ACC001
        usageInfo:
        - description: rides - local
          type: USAGE_METER_USAGE
          value: 15
          units: USAGE_UNITS
        - description: rides - pro
          type: USAGE_METER_USAGE
          value: 5
          units: USAGE_UNITS
        revenueInfo:
          description: Total amount due
          type: NET_REVENUE
          units: USD
          value: 881.94
          lineItems:
          - description: Sum Total
            type: GROSS_REVENUE
            units: USD
            value: 981.94
            lineItems:
            - description: Payout_NEFT
              type: USAGE_RATE_CARD_REVENUE
              units: USD
              value: 392.1
              lineItems:
              - description: Slab 1
                type: USAGE_RATE_CARD_SLAB_REVENUE
                valuePerQuantity: 0.001
                quantity: 10000
                units: USD
                value: 10
              - description: Slab 2
                type: USAGE_RATE_CARD_SLAB_REVENUE
                valuePerQuantity: 0.001
                quantity: 10000
                units: USD
                value: 10
            - description: Payout IMPS
              type: USAGE_RATE_CARD_REVENUE
              valuePerQuantity: 0.001
              quantity: 32109
              units: USD
              value: 589.94
              lineItems:
              - description: Slab 1
                type: USAGE_RATE_CARD_SLAB_REVENUE
                valuePerQuantity: 0.001
                quantity: 10000
                units: USD
                value: 10
              - description: Slab 2
                type: USAGE_RATE_CARD_SLAB_REVENUE
                valuePerQuantity: 0.001
                quantity: 10000
                units: USD
                value: 10
        invoiceDetails:
          customer:
            name: John Doe
            primaryEmail: john@togai.com
            billingAddress: "123 Main Street, San Francisco, CA 94105"
          account:
            name: Togai
            invoiceCurrency: USD
          pricePlanName: Togai Basic
        status: GENERATED
        startDate: 2020-07-04T12:00:00.000Z
        endDate: 2020-07-04T12:00:00.000Z
        invoiceDate: 2020-07-04T12:00:00.000Z
        generatedAt: 2020-07-04T12:00:00.000Z
        updatedAt: 2020-07-04T12:00:00.000Z
    ListInvoicesResponse:
      summary: A sample ListInvoicesResponse
      value:
        data:
        - id: inv.hkgkgyh.ghg
          customerId: 7VcRw9xZDIqsC5E
          accountId: ACC001
          status: GENERATED
          startDate: 2020-07-04T12:00:00.000Z
          endDate: 2020-07-04T12:00:00.000Z
          invoiceDate: 2020-07-04T12:00:00.000Z
          generatedAt: 2020-07-04T12:00:00.000Z
          updatedAt: 2020-07-04T12:00:00.000Z
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
    Credit:
      summary: A sample Credit
      value:
        id: creds.1znQx9jiIXw.r44fc
        customerId: 7VcRw9xZDIqsC5E
        accountId: ACC001
        purpose: Prepaid Credit
        effectiveFrom: 2020-07-04
        effectiveUntil: 2021-07-04
        status: ACTIVE
        creditAmount: 1000
        creditUnit: USD
        holdAmount: 500
        consumedAmount: 400
        priority: 1
        createdAt: 2020-07-04T12:00:00.000Z
    ListCreditsResponse:
      summary: A sample Credits List
      value:
        data:
        - id: creds.1znQx9jiIXw.r44fc
          customerId: 7VcRw9xZDIqsC5E
          accountId: ACC001
          purpose: Prepaid Credit
          effectiveFrom: 2020-07-04
          effectiveUntil: 2021-07-04
          status: ACTIVE
          creditAmount: 1000
          creditUnit: USD
          holdAmount: 500
          consumedAmount: 400
          priority: 1
          createdAt: 2020-07-04T12:00:00.000Z
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
    MiscellaneousChargesResponse:
      summary: A sample MiscellaneousChargesResponse
      value:
        data:
        - name: charge 1
          value: "100"
        - name: charge 2
          value: "200"
    CreateCreditRequest:
      summary: A sample for CreateCreditRequest
      value:
        accountId: ACC001
        purpose: Prepaid Credit
        effectiveFrom: 2023-02-04
        effectiveUntil: 2024-02-04
        creditAmount: 1000
        priority: 1
    ManageMiscellaneousChargesRequest:
      summary: A sample for ManageMiscellaneousChargesRequest
      value:
        items:
        - name: charge 1
          value: "100"
        - name: charge 2
          value: "200"
    CreditBalanceResponse:
      summary: A sample for CreditBalanceResponse
      value:
        activeCredits: 1000
        availableBalance: 800
        runningBalance: 700
        inapplicableCredits: 100
        units: USD
  parameters:
    organization_id:
      content:
        application/json:
          schema:
            example: XlK5h64gND
            maxLength: 10
            pattern: "^[A-Z]{10}$"
            type: string
      in: path
      name: organization_id
      required: true
    customer_id:
      content:
        application/json:
          schema:
            example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
            maxLength: 50
            type: string
      in: path
      name: customer_id
      required: true
    event_schema_name:
      content:
        application/json:
          schema:
            example: rides
            maxLength: 50
            type: string
      in: path
      name: event_schema_name
      required: true
    usage_meter_id:
      content:
        application/json:
          schema:
            example: um.1zYnCiM9Bpg.1zYn
            maxLength: 50
            type: string
      in: path
      name: usage_meter_id
      required: true
    next_token:
      explode: true
      in: query
      name: nextToken
      required: false
      schema:
        example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEwMCwgInNvcnRPcmRlciI6ICJhc2MifQ==
        type: string
      style: form
    start_date:
      explode: true
      in: query
      name: start_date
      required: false
      schema:
        example: 2023-03-30T10:41:10.088499
        type: string
      style: form
    end_date:
      explode: true
      in: query
      name: end_date
      required: false
      schema:
        example: 2099-03-30T10:41:10.088499
        type: string
      style: form
    page_size:
      explode: true
      in: query
      name: pageSize
      required: false
      schema:
        example: 10
        type: number
      style: form
    sort_order:
      explode: true
      in: query
      name: sortOrder
      required: false
      schema:
        enum:
        - ASC
        - DESC
        type: string
      style: form
    price_plan_id:
      content:
        application/json:
          schema:
            example: um.1zYnCiM9Bpg.lv25y
            maxLength: 50
            type: string
      in: path
      name: price_plan_id
      required: true
    addon_id:
      content:
        application/json:
          schema:
            example: addon.1zYnCiM9Bpg.lv25y
            maxLength: 50
            type: string
      in: path
      name: addon_id
      required: true
    currency_id:
      content:
        application/json:
          schema:
            example: USD
            maxLength: 50
            type: string
      in: path
      name: currency_id
      required: true
    version_query:
      content:
        application/json:
          schema:
            example: 2
            format: int32
            type: integer
      description: Optional version to get a specific version. Gets latest version
        if it is not provided.
      in: query
      name: version
      required: false
    settings_entity_type:
      explode: true
      in: query
      name: entity_type
      required: false
      schema:
        example: ACCOUNT
        type: string
      style: form
    settings_entity_id:
      explode: true
      in: query
      name: entity_id
      required: false
      schema:
        example: acc_X1Df3sRf3
        type: string
      style: form
    settings_setting_id:
      explode: true
      in: query
      name: setting_id
      required: false
      schema:
        type: string
      style: form
    settings_namespace:
      explode: true
      in: query
      name: namespace
      required: false
      schema:
        example: USER
        type: string
      style: form
    settings_full_setting_id:
      explode: false
      in: path
      name: setting_id_str
      required: true
      schema:
        example: setting.USER.success_threshold.ACCOUNT.G234DZZKBKACATFFGVGEMERFI
        type: string
      style: simple
    account_id:
      content:
        application/json:
          schema:
            example: ACC00001
            maxLength: 50
            type: string
      description: account_id corresponding to an account
      in: path
      name: account_id
      required: true
    event_id:
      content:
        application/json:
          schema:
            example: f4a52f2d-b798-4e08-8b24-db0a5a468ba3
            maxLength: 50
            type: string
      in: path
      name: event_id
      required: true
    filter_next_page_token:
      description: Pagination token used as a marker to get records from next page.
      explode: true
      in: query
      name: nextToken
      required: false
      schema:
        example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        type: string
      style: form
    filter_schema_name:
      description: Filter option to filter the events based on schema name.
      explode: true
      in: query
      name: schema_name
      required: false
      schema:
        example: Rides
        type: string
      style: form
    filter_page_size:
      description: "Maximum page size expected by client to return the record list.\
        \ \n\n NOTE: Max page size cannot be more than 50. Also 50 is the default\
        \ page size if no value is provided."
      explode: true
      in: query
      name: pageSize
      required: false
      schema:
        example: 10
        type: integer
      style: form
    filter_account_id:
      description: Filter option to filter based on account id.
      explode: true
      in: query
      name: account_id
      required: false
      schema:
        example: "1234"
        type: string
      style: form
    filter_status:
      description: Filter option to filter by status.
      examples:
        processed:
          value: PROCESSED
        in_progress:
          value: IN_PROGRESS
      explode: true
      in: query
      name: status
      required: false
      schema:
        type: string
      style: form
    invoice_id:
      content:
        application/json:
          schema:
            example: ACC001
            type: string
      in: path
      name: invoice_id
      required: true
    credit_id:
      content:
        application/json:
          schema:
            example: creds.1znQx9jiIXw.r44fc
            type: string
      in: path
      name: credit_id
      required: true
    filter_credit_id:
      description: Filter option to filter based on credit id.
      explode: true
      in: query
      name: id
      required: false
      schema:
        example: cred.1znpoFlsI3U.zmg85
        type: string
      style: form
    filter_customer_id:
      description: Filter option to filter based on customer id.
      explode: true
      in: query
      name: customer_id
      required: false
      schema:
        example: "1234"
        type: string
      style: form
    filter_start_time:
      description: Start time filter in epoch milli seconds
      explode: true
      in: query
      name: start_time
      required: false
      schema:
        example: 1650110402000
        format: int64
        type: integer
      style: form
    filter_end_time:
      description: End time filter in epoch milli seconds
      explode: true
      in: query
      name: end_time
      required: false
      schema:
        example: 1650110402000
        format: int64
        type: integer
      style: form
  requestBodies:
    SignupRequest:
      content:
        application/json:
          examples:
            SignupRequest:
              $ref: '#/components/examples/SignupRequest'
              value: null
          schema:
            $ref: '#/components/schemas/SignupRequest'
      description: Payload to create organization
      required: false
    CreateCustomerRequest:
      content:
        application/json:
          examples:
            CreateCustomerRequest:
              $ref: '#/components/examples/CreateCustomerRequest'
              value: null
          schema:
            $ref: '#/components/schemas/CreateCustomerRequest'
      description: Payload to create customer
      required: true
    UpdateCustomerRequest:
      content:
        application/json:
          examples:
            UpdateCustomerRequest:
              $ref: '#/components/examples/UpdateCustomerRequest'
              value: null
          schema:
            $ref: '#/components/schemas/UpdateCustomerRequest'
      description: Payload to update customer
      required: true
    CreateAccountRequestWithoutCustomerId:
      content:
        application/json:
          examples:
            CreateAccountRequestWithoutCustomerId:
              $ref: '#/components/examples/CreateAccountRequestWithoutCustomerId'
              value: null
          schema:
            $ref: '#/components/schemas/CreateAccountRequestWithoutCustomerId'
      description: Payload to create account
      required: true
    CreateAccountRequest:
      content:
        application/json:
          examples:
            CreateAccountRequest:
              $ref: '#/components/examples/CreateAccountRequest'
              value: null
          schema:
            $ref: '#/components/schemas/CreateAccountRequest'
      description: Payload to create account
      required: true
    UpdateAccountRequest:
      content:
        application/json:
          examples:
            UpdateAccountRequest:
              $ref: '#/components/examples/UpdateAccountRequest'
              value: null
          schema:
            $ref: '#/components/schemas/UpdateAccountRequest'
      description: Payload to update account
      required: true
    AddAccountAliasesRequest:
      content:
        application/json:
          examples:
            AddAccountAliasesRequest:
              $ref: '#/components/examples/AddAccountAliasesRequest'
              value: null
          schema:
            $ref: '#/components/schemas/AddAccountAliasesRequest'
      description: Payload to add aliases to account
      required: true
    RemoveAccountAliasesRequest:
      content:
        application/json:
          examples:
            RemoveAccountAliasesRequest:
              $ref: '#/components/examples/RemoveAccountAliasesRequest'
              value: null
          schema:
            $ref: '#/components/schemas/RemoveAccountAliasesRequest'
      description: Payload to remove aliases from account
      required: true
    CreateEventSchemaRequest:
      content:
        application/json:
          examples:
            EventSchema:
              $ref: '#/components/examples/CreateEventSchemaRequest'
              value: null
          schema:
            $ref: '#/components/schemas/CreateEventSchemaRequest'
      description: Payload to create event schema
      required: true
    UpdateEventSchemaRequest:
      content:
        application/json:
          examples:
            EventSchema:
              $ref: '#/components/examples/UpdateEventSchemaRequest'
              value: null
          schema:
            $ref: '#/components/schemas/UpdateEventSchemaRequest'
      description: Payload to update event schema
      required: true
    CreateUsageMeterRequest:
      content:
        application/json:
          examples:
            UsageMeter:
              $ref: '#/components/examples/CreateUsageMeterRequest'
              value: null
          schema:
            $ref: '#/components/schemas/CreateUsageMeterRequest'
      description: Payload to create usage meter
      required: true
    UpdateUsageMeterRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateUsageMeterRequest'
      description: Payload to create usage meter
      required: true
    UpdatePricingScheduleRequest:
      content:
        application/json:
          examples:
            UpdatePricingScheduleAssociateRequest:
              $ref: '#/components/examples/UpdatePricingScheduleAssociateRequest'
              value: null
            UpdatePricingScheduleDisassociateRequest:
              $ref: '#/components/examples/UpdatePricingScheduleDisassociateRequest'
              value: null
          schema:
            $ref: '#/components/schemas/UpdatePricingScheduleRequest'
      description: Payload to dis/associate a price plan to an account
      required: true
    EditPricingScheduleRequest:
      content:
        application/json:
          examples:
            EditPricingScheduleRequest:
              $ref: '#/components/examples/EditPricingScheduleRequest'
              value: null
          schema:
            $ref: '#/components/schemas/EditPricingScheduleRequest'
      description: Payload to dis/associate one or more price plans to an account
      required: true
    CreatePricePlanRequest:
      content:
        application/json:
          examples:
            CreatePricePlanRequest:
              $ref: '#/components/examples/CreatePricePlanRequest'
              value: null
          schema:
            $ref: '#/components/schemas/CreatePricePlanRequest'
      description: Payload to create price plan
      required: true
    UpdatePricePlanRequest:
      content:
        application/json:
          examples:
            UpdatePricePlanRequest:
              $ref: '#/components/examples/UpdatePricePlanRequest'
              value: null
          schema:
            $ref: '#/components/schemas/UpdatePricePlanRequest'
      description: Payload to update price plan
      required: true
    UpdateSettingRequest:
      content:
        application/json:
          examples:
            UpdateSettingRequest:
              $ref: '#/components/examples/UpdateSettingRequest'
              value: null
          schema:
            $ref: '#/components/schemas/UpdateSettingRequest'
      description: Payload to update setting
      required: true
    CreateSettingRequest:
      content:
        application/json:
          examples:
            Setting:
              $ref: '#/components/examples/Setting'
              value: null
          schema:
            $ref: '#/components/schemas/Setting'
      description: Payload to insert setting
      required: true
    CalculateRevenueRequest:
      content:
        application/json:
          examples:
            FirstCalculateRevenueRequestExample:
              $ref: '#/components/examples/FirstCalculateRevenueRequestExample'
              value: null
            SecondCalculateRevenueRequestExample:
              $ref: '#/components/examples/SecondCalculateRevenueRequestExample'
              value: null
            ThirdCalculateRevenueRequestExample:
              $ref: '#/components/examples/ThirdCalculateRevenueRequestExample'
              value: null
          schema:
            $ref: '#/components/schemas/CalculateRevenueRequest'
      description: Request payload for calculateRevenueAPI
      required: true
    ActivatePricePlanRequest:
      content:
        application/json:
          examples:
            ActivatePricePlanRequest:
              $ref: '#/components/examples/ActivatePricePlanRequest'
              value: null
          schema:
            $ref: '#/components/schemas/ActivatePricePlanRequest'
      description: Payload to activate price plan
      required: true
    AddCurrencyToPricePlanRequest:
      content:
        application/json:
          examples:
            AddCurrencyToPricePlanRequest:
              $ref: '#/components/examples/AddCurrencyToPricePlanRequest'
              value: null
          schema:
            $ref: '#/components/schemas/AddCurrencyToPricePlanRequest'
      description: Payload to add currency to price plan
      required: true
    UpdateOrganizationSettingRequest:
      content:
        application/json:
          examples:
            UpdateOrganizationSettingRequest:
              $ref: '#/components/examples/UpdateOrganizationSettingRequest'
              value: null
          schema:
            $ref: '#/components/schemas/UpdateOrganizationSettingRequest'
      description: Payload to update organization setting
      required: true
    CreateAddOnRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateAddOnRequest'
      description: Payload to create addon
      required: true
    UpdateAddOnRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/UpdateAddOnRequest'
      description: Payload to update addon
      required: true
    GetMetricsRequest:
      content:
        application/json:
          examples:
            GetMetricsRequest:
              value:
                startTime: 2017-07-21T00:00:00Z
                endTime: 2017-07-22T00:00:00Z
                metricQueries:
                - id: m1
                  name: EVENTS
                  aggregationPeriod: DAY
                  filters:
                  - fieldName: ACCOUNT_ID
                    fieldValues:
                    - account#1
                  - fieldName: CUSTOMER_ID
                    fieldValues:
                    - customer#1
                  - fieldName: EVENT_STATUS
                    fieldValues:
                    - PROCESSED
                - id: m2
                  name: USAGE
                  aggregationPeriod: MONTH
                  filters:
                  - fieldName: CUSTOMER_ID
                    fieldValues:
                    - customer#1
          schema:
            $ref: '#/components/schemas/GetMetricsRequest'
    ComputeRevenueSummaryRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ComputeRevenueSummaryRequest'
    CreateCreditRequest:
      content:
        application/json:
          examples:
            CreateCreditRequest:
              $ref: '#/components/examples/CreateCreditRequest'
              value: null
          schema:
            $ref: '#/components/schemas/CreateCreditRequest'
      description: Payload to grant credits
    ManageMiscellaneousChargesRequest:
      content:
        application/json:
          examples:
            ManageMiscellaneousChargesRequest:
              $ref: '#/components/examples/ManageMiscellaneousChargesRequest'
              value: null
          schema:
            $ref: '#/components/schemas/ManageMiscellaneousChargesRequest'
      description: Payload to update custom line items
  responses:
    BaseSuccessResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BaseSuccessResponse'
      description: OK
    ErrorResponse:
      content:
        application/json:
          examples:
            ErrorResponse:
              summary: Error message
              value:
                message: <Reason message>
          schema:
            $ref: '#/components/schemas/ErrorResponse'
      description: Error response
    SignupResponse:
      content:
        application/json:
          examples:
            SignupResponse:
              summary: Signup response
              value:
                organizationId: XlK5h64gND
                jwtToken: <big huge token>
          schema:
            $ref: '#/components/schemas/SignupResponse'
      description: Signup API response
    CreateCustomerResponse:
      content:
        application/json:
          examples:
            CreateCustomerResponse:
              $ref: '#/components/examples/CreateCustomerResponse'
              value: null
          schema:
            $ref: '#/components/schemas/CreateCustomerResponse'
      description: Response for Create customer request
    CustomerResponse:
      content:
        application/json:
          examples:
            Customer:
              $ref: '#/components/examples/Customer'
              value: null
          schema:
            $ref: '#/components/schemas/Customer'
      description: Response for Get customer requests
    CustomerPaginatedResponse:
      content:
        application/json:
          examples:
            CustomerPaginatedResponse:
              $ref: '#/components/examples/CustomerPaginatedResponse'
              value: null
          schema:
            $ref: '#/components/schemas/CustomerPaginatedResponse'
      description: Response for list customers request
    AccountPaginatedResponse:
      content:
        application/json:
          examples:
            AccountPaginatedResponse:
              $ref: '#/components/examples/AccountPaginatedResponse'
              value: null
          schema:
            $ref: '#/components/schemas/AccountPaginatedResponse'
      description: Response for list customers request
    AccountResponse:
      content:
        application/json:
          examples:
            Customer:
              $ref: '#/components/examples/Account'
              value: null
          schema:
            $ref: '#/components/schemas/Account'
      description: Response for Create and Get account requests
    EventSchemaResponse:
      content:
        application/json:
          examples:
            EventSchema:
              $ref: '#/components/examples/EventSchema'
              value: null
          schema:
            $ref: '#/components/schemas/EventSchema'
      description: Response for Create and Get event schema requests
    EventSchemaListPaginatedResponse:
      content:
        application/json:
          examples:
            EventSchemaPaginatedResponse:
              $ref: '#/components/examples/EventSchemaListPaginatedResponse'
              value: null
          schema:
            $ref: '#/components/schemas/EventSchemaListPaginatedResponse'
      description: Response for list events request
    EventSchemaVersionsResponse:
      content:
        application/json:
          examples:
            EventSchemaVersionsResponse:
              $ref: '#/components/examples/EventSchemaVersionsResponse'
              value: null
          schema:
            $ref: '#/components/schemas/EventSchemaVersionsResponse'
      description: Response for list event schema versions request
    UsageMeterResponse:
      content:
        application/json:
          examples:
            Customer:
              $ref: '#/components/examples/UsageMeter'
              value: null
          schema:
            $ref: '#/components/schemas/UsageMeter'
      description: Response for Create and Get usage event requests
    UsageMeterPaginatedResponse:
      content:
        application/json:
          examples:
            UsageMeterPaginatedResponse:
              $ref: '#/components/examples/UsageMeterPaginatedResponse'
              value: null
          schema:
            $ref: '#/components/schemas/UsageMeterPaginatedResponse'
      description: Response for list usage_meters request
    PricePlanResponse:
      content:
        application/json:
          examples:
            PricePlanResponse:
              $ref: '#/components/examples/PricePlan'
              value: null
          schema:
            $ref: '#/components/schemas/PricePlan'
      description: Response for Create and Get price plan requests
    PricePlanPaginatedResponse:
      content:
        application/json:
          examples:
            PricePlanPaginatedResponse:
              $ref: '#/components/examples/PricePlanPaginatedResponse'
              value: null
          schema:
            $ref: '#/components/schemas/PricePlanPaginatedResponse'
      description: Response for list price plans request
    PricingSchedulePaginatedResponse:
      content:
        application/json:
          examples:
            PricingSchedulePaginatedResponse:
              $ref: '#/components/examples/PricingSchedulePaginatedResponse'
              value: null
          schema:
            $ref: '#/components/schemas/PricingSchedulePaginatedResponse'
      description: Response for list pricing schedules request
    UpdatePricingScheduleResponse:
      content:
        application/json:
          examples:
            UpdatePricingScheduleResponse:
              $ref: '#/components/examples/UpdatePricingScheduleResponse'
              value: null
          schema:
            $ref: '#/components/schemas/UpdatePricingScheduleResponse'
      description: Response for dis/associate price plan request
    EditPricingScheduleResponse:
      content:
        application/json:
          examples:
            UpdatePricingScheduleResponse:
              $ref: '#/components/examples/UpdatePricingScheduleResponse'
              value: null
          schema:
            $ref: '#/components/schemas/UpdatePricingScheduleResponse'
      description: Response for edit pricing schedule request
    CalculateRevenueResponse:
      content:
        application/json:
          examples:
            CalculateRevenueResponse:
              $ref: '#/components/examples/CalculateRevenueResponse'
              value: null
          schema:
            $ref: '#/components/schemas/CalculateRevenueResponse'
      description: Response payload for calculateRevenueAPI
    SettingResponse:
      content:
        application/json:
          examples:
            Setting:
              $ref: '#/components/examples/Setting'
              value: null
          schema:
            $ref: '#/components/schemas/Setting'
      description: Response for insert and update settings request
    SettingPaginatedResponse:
      content:
        application/json:
          examples:
            SettingPaginatedResponse:
              $ref: '#/components/examples/SettingPaginatedResponse'
              value: null
          schema:
            $ref: '#/components/schemas/SettingPaginatedResponse'
      description: Response for list setting request
    OrganizationSettingResponse:
      content:
        application/json:
          examples:
            OrganizationSetting:
              $ref: '#/components/examples/OrganizationSetting'
              value: null
          schema:
            $ref: '#/components/schemas/OrganizationSetting'
      description: Response for update organization settings request
    AddOnResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddOn'
      description: Response for Create and Get addons requests
    AddOnPaginatedResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddOnPaginatedResponse'
      description: Response for List addons requests
    GetMetricsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/GetMetricsResponse'
      description: Get Metrics response
    ComputeRevenueSummaryResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ComputeRevenueSummaryResponse'
      description: Compute revenue summary response
    InvoiceResponse:
      content:
        application/json:
          examples:
            Invoice:
              $ref: '#/components/examples/Invoice'
              value: null
          schema:
            $ref: '#/components/schemas/Invoice'
      description: Response for Get invoice requests
    ListInvoicesResponse:
      content:
        application/json:
          examples:
            ListInvoicesResponse:
              $ref: '#/components/examples/ListInvoicesResponse'
              value: null
          schema:
            $ref: '#/components/schemas/ListInvoicesResponse'
      description: Response for Get invoice requests
    ListCreditsResponse:
      content:
        application/json:
          examples:
            ListCreditsResponse:
              $ref: '#/components/examples/ListCreditsResponse'
              value: null
          schema:
            $ref: '#/components/schemas/ListCreditsResponse'
      description: Response for Get invoice requests
    CreditResponse:
      content:
        application/json:
          examples:
            Credit:
              $ref: '#/components/examples/Credit'
              value: null
          schema:
            $ref: '#/components/schemas/Credit'
      description: Response for List credits request
    CreditDetailsResponse:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreditDetailsResponse'
      description: Response for Fetch Credit Details request. This contains Credit
        Transactions
    CreditBalanceResponse:
      content:
        application/json:
          examples:
            CreditBalanceResponse:
              $ref: '#/components/examples/CreditBalanceResponse'
              value: null
          schema:
            $ref: '#/components/schemas/CreditBalanceResponse'
      description: Response for Credit Balance Request
    MiscellaneousChargesResponse:
      content:
        application/json:
          examples:
            MiscellaneousChargesResponse:
              $ref: '#/components/examples/MiscellaneousChargesResponse'
              value: null
          schema:
            $ref: '#/components/schemas/MiscellaneousChargesResponse'
      description: Response for Miscellaneous Charges Request
  schemas:
    SignupRequest:
      additionalProperties: false
      description: Payload to signup
      properties:
        name:
          maxLength: 50
          type: string
        description:
          maxLength: 500
          type: string
        userDetails:
          $ref: '#/components/schemas/UserDetails'
      required:
      - name
      - userDetails
      type: object
    UserDetails:
      additionalProperties: false
      description: Root user details for the organization
      properties:
        preferredUsername:
          maxLength: 50
          pattern: "^[A-Za-z0-9]{3,50}$"
          type: string
        name:
          maxLength: 50
          type: string
        password:
          maxLength: 100
          type: string
        email:
          maxLength: 100
          type: string
        phone:
          maxLength: 30
          type: string
      required:
      - email
      - name
      - password
      type: object
    CreateCustomerRequest:
      additionalProperties: false
      description: Payload to create customer
      example:
        settings:
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        name: ACME Enterprise
        id: 01BX5ZZKBKACTAV9WEVGEMMVRZ
        billingAddress: "201 Boulevard, WA 53123"
        primaryEmail: admin@example.com
        account:
          settings:
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          aliases: acme_primary
          name: Primary Account
          id: ACC00001
          invoiceCurrency: invoiceCurrency
      properties:
        id:
          description: Customer identifier
          example: 01BX5ZZKBKACTAV9WEVGEMMVRZ
          maxLength: 50
          type: string
        name:
          description: Name of the Customer
          example: ACME Enterprise
          maxLength: 255
          minLength: 3
          type: string
        primaryEmail:
          description: Primary email of the customer
          example: admin@example.com
          maxLength: 255
          type: string
        billingAddress:
          description: billing address of the customer
          example: "201 Boulevard, WA 53123"
          maxLength: 1000
          type: string
        settings:
          items:
            $ref: '#/components/schemas/CreateEntitySetting'
          maxItems: 10
          minItems: 0
          type: array
        account:
          $ref: '#/components/schemas/CreateAccountRequestWithoutCustomerId'
      required:
      - billingAddress
      - id
      - name
      - primaryEmail
      type: object
    UpdateCustomerRequest:
      additionalProperties: false
      description: Payload to update customer
      example:
        name: ACME Enterprise
        billingAddress: 201 Bleeker Street
        primaryEmail: admin@example.com
      properties:
        name:
          description: Name of the Customer
          example: ACME Enterprise
          maxLength: 255
          minLength: 3
          type: string
        primaryEmail:
          description: Primary email of the customer
          example: admin@example.com
          maxLength: 255
          type: string
        billingAddress:
          description: billing address of the customer
          example: 201 Bleeker Street
          maxLength: 1000
          type: string
      type: object
    CreateAccountRequestWithoutCustomerId:
      additionalProperties: false
      description: Payload to create account
      example:
        settings:
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        aliases: acme_primary
        name: Primary Account
        id: ACC00001
        invoiceCurrency: invoiceCurrency
      properties:
        id:
          description: Identifier of the account
          example: ACC00001
          maxLength: 50
          type: string
        name:
          description: Name of the Account
          example: Primary Account
          maxLength: 255
          minLength: 3
          type: string
        invoiceCurrency:
          description: "Use [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency\
            \ code in which the account must be invoiced.  \nFor example: AED is the\
            \ currency code for United Arab Emirates dirham.\n"
          maxLength: 3
          minLength: 3
          type: string
        aliases:
          description: Aliases are tags that are associated with an account. Multiple
            aliases are allowed for a single account.
          example: acme_primary
          items:
            maxLength: 50
            minLength: 3
            type: string
          maxItems: 10
          minItems: 0
          type: array
        settings:
          items:
            $ref: '#/components/schemas/CreateEntitySetting'
          maxItems: 10
          minItems: 0
          type: array
      required:
      - id
      - name
      type: object
    CreateAccountRequest:
      additionalProperties: false
      description: Payload to create account
      example:
        settings:
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        aliases: acme_primary
        name: Primary Account
        customerId: C1234ewf
        id: ACC00001
        invoiceCurrency: invoiceCurrency
      properties:
        id:
          description: Identifier of the account
          example: ACC00001
          maxLength: 50
          type: string
        name:
          description: Name of the Account
          example: Primary Account
          maxLength: 255
          minLength: 3
          type: string
        invoiceCurrency:
          description: "Use [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency\
            \ code in which the account must be invoiced.  \nFor example: AED is the\
            \ currency code for United Arab Emirates dirham.\n"
          maxLength: 3
          minLength: 3
          type: string
        aliases:
          description: Aliases are tags that are associated with an account. Multiple
            aliases are allowed for a single account.
          example: acme_primary
          items:
            maxLength: 50
            minLength: 3
            type: string
          maxItems: 10
          minItems: 0
          type: array
        settings:
          items:
            $ref: '#/components/schemas/CreateEntitySetting'
          maxItems: 10
          minItems: 0
          type: array
        customerId:
          description: Customer Identifier for whom the account is being created
          example: C1234ewf
          maxLength: 255
          minLength: 1
          type: string
      required:
      - customerId
      - id
      - name
      type: object
    UpdateAccountRequest:
      additionalProperties: false
      description: Payload to update account
      example:
        name: name
      properties:
        name:
          description: Name of the Account
          maxLength: 255
          minLength: 3
          type: string
      type: object
    AddAccountAliasesRequest:
      additionalProperties: false
      description: Payload to add aliases from account
      example:
        aliases:
        - aliases
        - aliases
        - aliases
        - aliases
        - aliases
      properties:
        aliases:
          description: List of aliases to add
          items:
            maxLength: 50
            minLength: 3
            type: string
          maxItems: 10
          minItems: 1
          type: array
      type: object
    RemoveAccountAliasesRequest:
      additionalProperties: false
      description: Payload to remove aliases from account
      example:
        aliases:
        - aliases
        - aliases
        - aliases
        - aliases
        - aliases
      properties:
        aliases:
          description: List of aliases to remove
          items:
            maxLength: 50
            minLength: 3
            type: string
          maxItems: 10
          minItems: 1
          type: array
      type: object
    CreateEventSchemaRequest:
      additionalProperties: false
      description: Request to create event schema
      example:
        name: name
        description: description
        attributes:
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        enrichments:
          fields:
          - enrichmentType: VALUE
            name: name
            type: ATTRIBUTE
            value: value
            order: 0
          - enrichmentType: VALUE
            name: name
            type: ATTRIBUTE
            value: value
            order: 0
          dependencies:
          - name: name
            type: SETTING
            key: key
          - name: name
            type: SETTING
            key: key
        dimensions:
        - name: city
        - name: city
        - name: city
        - name: city
        - name: city
      properties:
        name:
          description: Name of the event. Must be unique for an organization.
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        description:
          description: Description of the event
          maxLength: 255
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/EventAttributeSchema'
          maxItems: 50
          type: array
        dimensions:
          items:
            $ref: '#/components/schemas/DimensionsSchema'
          maxItems: 50
          type: array
        enrichments:
          $ref: '#/components/schemas/Enrichments'
      required:
      - attributes
      - dimensions
      - name
      type: object
    UpdateEventSchemaRequest:
      additionalProperties: false
      description: Request to update event schema
      example:
        description: description
        attributes:
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        enrichments:
          fields:
          - enrichmentType: VALUE
            name: name
            type: ATTRIBUTE
            value: value
            order: 0
          - enrichmentType: VALUE
            name: name
            type: ATTRIBUTE
            value: value
            order: 0
          dependencies:
          - name: name
            type: SETTING
            key: key
          - name: name
            type: SETTING
            key: key
        dimensions:
        - name: city
        - name: city
        - name: city
        - name: city
        - name: city
      properties:
        description:
          description: Description of the event
          maxLength: 255
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/EventAttributeSchema'
          maxItems: 50
          type: array
        dimensions:
          items:
            $ref: '#/components/schemas/DimensionsSchema'
          maxItems: 50
          type: array
        enrichments:
          $ref: '#/components/schemas/Enrichments'
      type: object
    CreateUsageMeterRequest:
      additionalProperties: false
      description: Request to create usage meter
      example:
        eventSchemaName: eventSchemaName
        computations:
        - id: id
          matcher: |
            {
              "and": [
                {"in": [{"var": "dimension.city"}, "chennai", "mumbai"]},
                "or": [
                  {">": [{"var": "attribute.distance"}, 100]},
                  {"<": [{"var": "attribute.distance"}, 20]}
                ]
              ]
            }
          computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
          order: 0
        - id: id
          matcher: |
            {
              "and": [
                {"in": [{"var": "dimension.city"}, "chennai", "mumbai"]},
                "or": [
                  {">": [{"var": "attribute.distance"}, 100]},
                  {"<": [{"var": "attribute.distance"}, 20]}
                ]
              ]
            }
          computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
          order: 0
        name: name
        description: description
        aggregation: COUNT
        type: COUNTER
      properties:
        name:
          description: Name of the event. Must be unique for an organization.
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        description:
          description: Description of the event
          maxLength: 255
          type: string
        type:
          description: Type of usage meter
          enum:
          - COUNTER
          type: string
        aggregation:
          description: Aggregation to be applied on usage meter result
          enum:
          - COUNT
          - SUM
          type: string
        computations:
          items:
            $ref: '#/components/schemas/Computation'
          type: array
        eventSchemaName:
          description: Event Schema Identifier
          type: string
      required:
      - aggregation
      - eventSchemaName
      - name
      - type
      type: object
    UpdateUsageMeterRequest:
      additionalProperties: false
      description: Request to update usage meter
      example:
        computations:
        - id: id
          matcher: |
            {
              "and": [
                {"in": [{"var": "dimension.city"}, "chennai", "mumbai"]},
                "or": [
                  {">": [{"var": "attribute.distance"}, 100]},
                  {"<": [{"var": "attribute.distance"}, 20]}
                ]
              ]
            }
          computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
          order: 0
        - id: id
          matcher: |
            {
              "and": [
                {"in": [{"var": "dimension.city"}, "chennai", "mumbai"]},
                "or": [
                  {">": [{"var": "attribute.distance"}, 100]},
                  {"<": [{"var": "attribute.distance"}, 20]}
                ]
              ]
            }
          computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
          order: 0
        description: description
        aggregation: COUNT
        type: COUNTER
      properties:
        description:
          description: Description of the event
          maxLength: 255
          type: string
        type:
          description: |
            Type of usage meter
            * COUNTER - Count usage
          enum:
          - COUNTER
          example: COUNTER
          type: string
        aggregation:
          description: |
            Aggregation to be applied on usage meter result
            * COUNT - Counts number of events matching the usage meter
            * SUM - Sums up results of computation of all events matching usage meter
          enum:
          - COUNT
          - SUM
          type: string
        computations:
          items:
            $ref: '#/components/schemas/Computation'
          type: array
      type: object
    CreatePricePlanRequest:
      additionalProperties: false
      description: Request to create a price plan
      example:
        pricePlanDetails:
          supportedCurrencies:
          - supportedCurrencies
          - supportedCurrencies
          pricingCycleConfig:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            interval: MONTHLY
          fixedFeeRateCards:
          - invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          - invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          usageRateCards:
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          minimumCommitment:
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
        name: name
        description: description
      properties:
        name:
          description: Name of the price plan
          maxLength: 50
          type: string
        description:
          description: Description of price plan
          maxLength: 255
          type: string
        pricePlanDetails:
          $ref: '#/components/schemas/CreatePricePlanDetails'
      required:
      - name
      - pricePlanDetails
      type: object
    CreatePricePlanDetails:
      additionalProperties: false
      example:
        supportedCurrencies:
        - supportedCurrencies
        - supportedCurrencies
        pricingCycleConfig:
          gracePeriod: 3
          startOffset:
            dayOffset: dayOffset
            monthOffset: monthOffset
          interval: MONTHLY
        fixedFeeRateCards:
        - invoiceTiming: null
          displayName: displayName
          rateValues:
          - rate: 5.637376656633329
            currency: currency
          - rate: 5.637376656633329
            currency: currency
          id: id
          type: null
        - invoiceTiming: null
          displayName: displayName
          rateValues:
          - rate: 5.637376656633329
            currency: currency
          - rate: 5.637376656633329
            currency: currency
          id: id
          type: null
        usageRateCards:
        - ratePlan:
            pricingModel: null
            slabs:
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
          displayName: displayName
          usageMeterId: um.1zYnCiM9Bpg.1zYn
          rateValues:
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
        - ratePlan:
            pricingModel: null
            slabs:
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
          displayName: displayName
          usageMeterId: um.1zYnCiM9Bpg.1zYn
          rateValues:
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
        minimumCommitment:
          displayName: displayName
          rateValues:
          - rate: 5.637376656633329
            currency: currency
          - rate: 5.637376656633329
            currency: currency
      properties:
        pricingCycleConfig:
          $ref: '#/components/schemas/PricingCycleConfig'
        supportedCurrencies:
          description: List of currencies supported by the price plan
          items:
            type: string
          type: array
          uniqueItems: true
        usageRateCards:
          description: List of usage rate cards
          items:
            $ref: '#/components/schemas/UsageRateCard'
          type: array
        fixedFeeRateCards:
          items:
            $ref: '#/components/schemas/FixedFeeRateCard'
          minItems: 1
          type: array
        minimumCommitment:
          $ref: '#/components/schemas/MinimumCommitment'
      required:
      - pricingCycleConfig
      - supportedCurrencies
      type: object
    UpdatePricePlanRequest:
      additionalProperties: false
      description: Request to update a price plan
      example:
        migrationMode: IMMEDIATE
        pricePlanDetails:
          supportedCurrencies:
          - supportedCurrencies
          - supportedCurrencies
          pricingCycleConfig:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            interval: MONTHLY
          fixedFeeRateCards:
          - invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          - invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          usageRateCards:
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          minimumCommitment:
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
        description: description
        versionsToMigrate: LATEST_VERSION
      properties:
        description:
          description: Description of price plan
          maxLength: 255
          type: string
        pricePlanDetails:
          $ref: '#/components/schemas/CreatePricePlanDetailsOverride'
        migrationMode:
          enum:
          - IMMEDIATE
          - IMMEDIATE_IGNORE_OVERRIDE
          - NEXT_CYCLE
          - NEXT_CYCLE_IGNORE_OVERRIDE
          - NONE
          type: string
        versionsToMigrate:
          enum:
          - LATEST_VERSION
          - ALL_VERSION
          type: string
      type: object
    ActivatePricePlanRequest:
      additionalProperties: false
      description: Request to activate currencies of a price plan
      example:
        currencies:
        - currencies
        - currencies
      properties:
        currencies:
          description: List of currencies to activate
          items:
            minLength: 1
            type: string
          type: array
          uniqueItems: true
      required:
      - currencies
      type: object
    CalculateRevenueRequest:
      additionalProperties: false
      description: Request to get revenue details
      example:
        currencyConfig:
          mode: CUSTOM
          accountId: accountId
          currency: currency
        usageConfig:
          mode: CUSTOM
          lookupCycle:
            accountId: accountId
            cycleEffectiveOn: 2000-01-23T04:56:07.000+00:00
          lookupRange:
            accountId: accountId
            start: 2000-01-23T04:56:07.000+00:00
            end: 2000-01-23T04:56:07.000+00:00
          usageMap:
            key: 6.027456183070403
        pricePlanDetailsConfig:
          mode: CUSTOM
          accountId: accountId
          pricingCycleOrdinal: 0
          pricePlanDetails:
            supportedCurrencies:
            - supportedCurrencies
            - supportedCurrencies
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            fixedFeeRateCards:
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            minimumCommitment:
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
          effectiveOn: 2000-01-23T04:56:07.000+00:00
          pricePlanId: pricePlanId
      properties:
        currencyConfig:
          $ref: '#/components/schemas/CurrencyConfig'
        pricePlanDetailsConfig:
          $ref: '#/components/schemas/PricePlanDetailsConfig'
        usageConfig:
          $ref: '#/components/schemas/UsageConfig'
      required:
      - currencyConfig
      - pricePlanDetailsConfig
      - usageConfig
      type: object
    UpdatePricingScheduleRequest:
      additionalProperties: false
      description: Request to dis/associate a price plan to an account
      example:
        mode: ASSOCIATE
        effectiveUntil: 2000-01-23
        pricePlanId: pricePlanId
        effectiveFrom: 2000-01-23
        pricePlanDetailsOverride:
          supportedCurrencies:
          - supportedCurrencies
          - supportedCurrencies
          pricingCycleConfig:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            interval: MONTHLY
          fixedFeeRateCards:
          - invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          - invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          usageRateCards:
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          minimumCommitment:
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
      properties:
        mode:
          description: Mode of request to create dis/association
          enum:
          - ASSOCIATE
          - DISASSOCIATE
          type: string
        pricePlanId:
          description: Id of the price plan if association request
          type: string
        effectiveFrom:
          description: |
            Date of effectiveness of the association.
            - Expected only if the account already has a price plan associated with it.
          format: date
          type: string
        effectiveUntil:
          description: |
            Date until which the association must be effective.
            - Expected only if effectiveFrom is present.
          format: date
          type: string
        pricePlanDetailsOverride:
          $ref: '#/components/schemas/CreatePricePlanDetailsOverride'
      required:
      - effectiveFrom
      - effectiveUntil
      type: object
    EditPricingScheduleRequest:
      additionalProperties: false
      description: Request to dis/associate one or more schedules to an account
      example:
        edits:
        - mode: ASSOCIATE
          effectiveUntil: 2000-01-23
          pricePlanId: pricePlanId
          effectiveFrom: 2000-01-23
          pricePlanDetailsOverride:
            supportedCurrencies:
            - supportedCurrencies
            - supportedCurrencies
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            fixedFeeRateCards:
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            minimumCommitment:
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
        - mode: ASSOCIATE
          effectiveUntil: 2000-01-23
          pricePlanId: pricePlanId
          effectiveFrom: 2000-01-23
          pricePlanDetailsOverride:
            supportedCurrencies:
            - supportedCurrencies
            - supportedCurrencies
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            fixedFeeRateCards:
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            minimumCommitment:
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
        - mode: ASSOCIATE
          effectiveUntil: 2000-01-23
          pricePlanId: pricePlanId
          effectiveFrom: 2000-01-23
          pricePlanDetailsOverride:
            supportedCurrencies:
            - supportedCurrencies
            - supportedCurrencies
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            fixedFeeRateCards:
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            minimumCommitment:
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
        - mode: ASSOCIATE
          effectiveUntil: 2000-01-23
          pricePlanId: pricePlanId
          effectiveFrom: 2000-01-23
          pricePlanDetailsOverride:
            supportedCurrencies:
            - supportedCurrencies
            - supportedCurrencies
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            fixedFeeRateCards:
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            minimumCommitment:
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
        - mode: ASSOCIATE
          effectiveUntil: 2000-01-23
          pricePlanId: pricePlanId
          effectiveFrom: 2000-01-23
          pricePlanDetailsOverride:
            supportedCurrencies:
            - supportedCurrencies
            - supportedCurrencies
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            fixedFeeRateCards:
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            minimumCommitment:
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
      properties:
        edits:
          items:
            $ref: '#/components/schemas/UpdatePricingScheduleRequest'
          maxItems: 10
          minItems: 1
          type: array
      required:
      - edits
      type: object
    AddCurrencyToPricePlanRequest:
      additionalProperties: false
      description: Request to adding currency to a price plan
      example:
        currency: currency
        fixedFeeRates:
        - rate: 0.8008281904610115
          id: id
        - rate: 0.8008281904610115
          id: id
        usageRates:
        - usageMeterId: um.1zYnCiM9Bpg.1zYn
          slabRates:
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 1
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 1
        - usageMeterId: um.1zYnCiM9Bpg.1zYn
          slabRates:
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 1
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 1
        minimumCommitmentRate: 6.027456183070403
      properties:
        currency:
          description: Currency to be added
          type: string
        usageRates:
          description: List of usage rates
          items:
            $ref: '#/components/schemas/UsageRate'
          type: array
        fixedFeeRates:
          description: Rates for fixed fee rate cards
          items:
            $ref: '#/components/schemas/FixedFeeRate'
          type: array
        minimumCommitmentRate:
          description: Rates for minimum commitment.
          type: number
      required:
      - currency
      - usageRates
      type: object
    UpdateAddOnRequest:
      additionalProperties: false
      description: Request to update an addon
      example:
        name: name
      properties:
        name:
          description: Name of addon
          maxLength: 255
          type: string
      type: object
    UpdateSettingRequest:
      additionalProperties: false
      description: Update Settings
      example:
        dataType: null
        name: name
        value: value
      properties:
        name:
          type: string
        value:
          type: string
        dataType:
          $ref: '#/components/schemas/SettingDataType'
      type: object
    BaseSuccessResponse:
      additionalProperties: false
      example:
        success: true
      properties:
        success:
          example: true
          type: boolean
      required:
      - success
      type: object
    ErrorResponse:
      additionalProperties: false
      properties:
        message:
          description: error description
          maxLength: 500
          type: string
      required:
      - message
      type: object
    SignupResponse:
      additionalProperties: false
      description: Signup response
      properties:
        organizationId:
          description: Organization Identifier
          maxLength: 10
          type: string
        jwtToken:
          description: Token which can be used for authentication
          type: string
      required:
      - jwtToken
      - organizationId
      type: object
    CreateCustomerResponse:
      additionalProperties: false
      example:
        settings:
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        name: name
        id: id
        billingAddress: billingAddress
        primaryEmail: primaryEmail
        account:
          settings:
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          aliases:
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          name: name
          id: id
          invoiceCurrency: USD
          status: ACTIVE
      properties:
        id:
          description: Identifier of customer
          maxLength: 50
          type: string
        name:
          description: Name of the Customer
          maxLength: 255
          minLength: 3
          type: string
        primaryEmail:
          description: Primary email of the customer
          maxLength: 255
          type: string
        billingAddress:
          description: billing address of the customer
          maxLength: 1000
          type: string
        settings:
          items:
            $ref: '#/components/schemas/CreateEntitySetting'
          maxItems: 10
          minItems: 0
          type: array
        account:
          $ref: '#/components/schemas/Account'
      required:
      - billingAddress
      - id
      - name
      - primaryEmail
      type: object
    CustomerPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          billingAddress: billingAddress
          primaryEmail: primaryEmail
          status: ACTIVE
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          id: id
          billingAddress: billingAddress
          primaryEmail: primaryEmail
          status: ACTIVE
          updatedAt: 2000-01-23T04:56:07.000+00:00
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/Customer'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      type: object
    AccountPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - settings:
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          aliases:
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          name: name
          id: id
          invoiceCurrency: USD
          status: ACTIVE
        - settings:
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          - dataType: null
            namespace: namespace
            name: name
            id: id
            value: value
          aliases:
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          - alias: alias
            status: ACTIVE
          name: name
          id: id
          invoiceCurrency: USD
          status: ACTIVE
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/Account'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      type: object
    EventSchemaListPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - null
        - null
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/EventSchemaListData'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      type: object
    UsageMeterPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          computations:
          - id: id
            matcher: |
              {
                "and": [
                  {"in": [{"var": "dimension.city"}, "chennai", "mumbai"]},
                  "or": [
                    {">": [{"var": "attribute.distance"}, 100]},
                    {"<": [{"var": "attribute.distance"}, 20]}
                  ]
                ]
              }
            computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
            order: 0
          name: rides-usage
          description: Meter to track cab rides
          aggregation: COUNT
          id: id
          type: COUNTER
          lastActivatedAt: 2000-01-23T04:56:07.000+00:00
          status: DRAFT
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          computations:
          - id: id
            matcher: |
              {
                "and": [
                  {"in": [{"var": "dimension.city"}, "chennai", "mumbai"]},
                  "or": [
                    {">": [{"var": "attribute.distance"}, 100]},
                    {"<": [{"var": "attribute.distance"}, 20]}
                  ]
                ]
              }
            computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
            order: 0
          name: rides-usage
          description: Meter to track cab rides
          aggregation: COUNT
          id: id
          type: COUNTER
          lastActivatedAt: 2000-01-23T04:56:07.000+00:00
          status: DRAFT
          updatedAt: 2000-01-23T04:56:07.000+00:00
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/UsageMeter'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      type: object
    PricePlanListData:
      additionalProperties: false
      description: Data of price plan list
      example:
        usageMeters:
        - usageMeters
        - usageMeters
        createdAt: 2000-01-23T04:56:07.000+00:00
        pricePlanDetails:
          supportedCurrencies:
          - supportedCurrencies
          - supportedCurrencies
          pricingCycleConfig:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            interval: MONTHLY
          fixedFeeRateCards:
          - invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          - invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          usageRateCards:
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          minimumCommitment:
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
          activeCurrencies:
          - activeCurrencies
          - activeCurrencies
        name: name
        description: description
        id: id
        version: 0
        status: DRAFT
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Identifier of price plan
          maxLength: 50
          type: string
        name:
          description: Name of the price plan
          maxLength: 50
          type: string
        version:
          description: Version of the price plan
          format: int32
          type: integer
        description:
          description: Description of price plan
          maxLength: 255
          type: string
        status:
          description: Status of Price plan
          enum:
          - DRAFT
          - ACTIVE
          - ARCHIVED
          type: string
        usageMeters:
          description: Usage meters id linked to the price plan
          items:
            type: string
          type: array
        pricePlanDetails:
          $ref: '#/components/schemas/PricePlanDetails'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - id
      - name
      - pricePlanDetails
      - status
      - updatedAt
      - usageMeters
      - version
      type: object
    PricePlanPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - usageMeters:
          - usageMeters
          - usageMeters
          createdAt: 2000-01-23T04:56:07.000+00:00
          pricePlanDetails:
            supportedCurrencies:
            - supportedCurrencies
            - supportedCurrencies
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            fixedFeeRateCards:
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            minimumCommitment:
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
            activeCurrencies:
            - activeCurrencies
            - activeCurrencies
          name: name
          description: description
          id: id
          version: 0
          status: DRAFT
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - usageMeters:
          - usageMeters
          - usageMeters
          createdAt: 2000-01-23T04:56:07.000+00:00
          pricePlanDetails:
            supportedCurrencies:
            - supportedCurrencies
            - supportedCurrencies
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            fixedFeeRateCards:
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            minimumCommitment:
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
            activeCurrencies:
            - activeCurrencies
            - activeCurrencies
          name: name
          description: description
          id: id
          version: 0
          status: DRAFT
          updatedAt: 2000-01-23T04:56:07.000+00:00
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/PricePlanListData'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      required:
      - data
      type: object
    PricingScheduleWithPricePlanId:
      allOf:
      - $ref: '#/components/schemas/PricingSchedule'
      - $ref: '#/components/schemas/PricingScheduleWithPricePlanId_allOf'
    PricingSchedulePaginatedResponse:
      additionalProperties: false
      example:
        previousToken: previousToken
        data:
        - null
        - null
        nextToken: nextToken
      properties:
        data:
          items:
            $ref: '#/components/schemas/PricingScheduleWithPricePlanId'
          type: array
        nextToken:
          type: string
        previousToken:
          type: string
      type: object
    UpdatePricingScheduleResponse:
      additionalProperties: false
      example:
        accountId: accountId
        pricingSchedules:
        - endDate: 2000-01-23T04:56:07.000+00:00
          pricePlanName: pricePlanName
          id: id
          pricePlanId: pricePlanId
          pricePlanDetailsOverride: null
          startDate: 2000-01-23T04:56:07.000+00:00
        - endDate: 2000-01-23T04:56:07.000+00:00
          pricePlanName: pricePlanName
          id: id
          pricePlanId: pricePlanId
          pricePlanDetailsOverride: null
          startDate: 2000-01-23T04:56:07.000+00:00
        accountName: accountName
      properties:
        accountId:
          description: Identifier of the account
          maxLength: 50
          type: string
        accountName:
          description: Name of the Account
          type: string
        pricingSchedules:
          items:
            $ref: '#/components/schemas/PlanOverride'
          type: array
      required:
      - accountId
      - accountName
      - pricingSchedules
      type: object
    CalculateRevenueResponse:
      additionalProperties: false
      example:
        usageLookupRange:
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        revenueInfo:
        - usageRateCard:
            ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          fixedFeeRevenueSummary:
            revenue: 6.027456183070403
          fixedFeeRateCard:
            invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          slabRevenueSummaries:
          - revenue: 5.637376656633329
            metadata:
              maximumRateApplied: true
              minimumRateApplied: true
              packageQuantity: 2
            usage: 5.962133916683182
            order: 1
          - revenue: 5.637376656633329
            metadata:
              maximumRateApplied: true
              minimumRateApplied: true
              packageQuantity: 2
            usage: 5.962133916683182
            order: 1
          usages:
            key: 0.8008281904610115
        - usageRateCard:
            ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          fixedFeeRevenueSummary:
            revenue: 6.027456183070403
          fixedFeeRateCard:
            invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          slabRevenueSummaries:
          - revenue: 5.637376656633329
            metadata:
              maximumRateApplied: true
              minimumRateApplied: true
              packageQuantity: 2
            usage: 5.962133916683182
            order: 1
          - revenue: 5.637376656633329
            metadata:
              maximumRateApplied: true
              minimumRateApplied: true
              packageQuantity: 2
            usage: 5.962133916683182
            order: 1
          usages:
            key: 0.8008281904610115
        pricePlanDetails:
          supportedCurrencies:
          - supportedCurrencies
          - supportedCurrencies
          pricingCycleConfig:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            interval: MONTHLY
          fixedFeeRateCards:
          - invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          - invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          usageRateCards:
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          minimumCommitment:
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
          activeCurrencies:
          - activeCurrencies
          - activeCurrencies
        currency: currency
      properties:
        currency:
          type: string
        usageLookupRange:
          $ref: '#/components/schemas/UsageLookupRange'
        pricePlanDetails:
          $ref: '#/components/schemas/PricePlanDetails'
        revenueInfo:
          items:
            $ref: '#/components/schemas/RevenueInfo'
          type: array
      required:
      - currency
      - pricePlanDetails
      - revenueInfo
      type: object
    SlabRevenueSummary:
      additionalProperties: false
      example:
        revenue: 5.637376656633329
        metadata:
          maximumRateApplied: true
          minimumRateApplied: true
          packageQuantity: 2
        usage: 5.962133916683182
        order: 1
      properties:
        order:
          type: integer
        usage:
          type: number
        revenue:
          type: number
        metadata:
          $ref: '#/components/schemas/SlabRevenueMetadata'
      required:
      - order
      - revenue
      - usage
      type: object
    UpdateOrganizationSettingRequest:
      additionalProperties: false
      properties:
        baseCurrency:
          description: Base currency of the organization
          type: string
      required:
      - baseCurrency
      type: object
    OrganizationSetting:
      additionalProperties: false
      properties:
        baseCurrency:
          description: Base currency of the organization
          type: string
      type: object
    SettingPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - entityType: entityType
          dataType: null
          namespace: namespace
          name: name
          entityId: entityId
          id: id
          value: value
        - entityType: entityType
          dataType: null
          namespace: namespace
          name: name
          entityId: entityId
          id: id
          value: value
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/Setting'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      type: object
    AddOnPaginatedResponse:
      additionalProperties: false
      example:
        data:
        - null
        - null
        nextToken: nextToken
        context:
          sortOrder: ASC
          pageSize: 0
      properties:
        data:
          items:
            $ref: '#/components/schemas/AddOn'
          type: array
        nextToken:
          type: string
        context:
          $ref: '#/components/schemas/PaginationOptions'
      required:
      - data
      type: object
    Customer:
      additionalProperties: false
      description: Structure of customer
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        id: id
        billingAddress: billingAddress
        primaryEmail: primaryEmail
        status: ACTIVE
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Identifier of customer
          maxLength: 50
          type: string
        name:
          description: Name of the Customer
          maxLength: 255
          minLength: 3
          type: string
        primaryEmail:
          description: Primary email of the customer
          maxLength: 255
          type: string
        billingAddress:
          description: billing address of the customer
          maxLength: 1000
          type: string
        status:
          description: Status of the customer
          enum:
          - ACTIVE
          - ARCHIVED
          example: ACTIVE
          type: string
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - billingAddress
      - createdAt
      - id
      - name
      - primaryEmail
      - status
      - updatedAt
      type: object
    Account:
      additionalProperties: false
      description: Structure of an account
      example:
        settings:
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        - dataType: null
          namespace: namespace
          name: name
          id: id
          value: value
        aliases:
        - alias: alias
          status: ACTIVE
        - alias: alias
          status: ACTIVE
        - alias: alias
          status: ACTIVE
        - alias: alias
          status: ACTIVE
        - alias: alias
          status: ACTIVE
        name: name
        id: id
        invoiceCurrency: USD
        status: ACTIVE
      properties:
        id:
          description: Identifier of the account
          maxLength: 50
          type: string
        name:
          description: Name of the Account
          maxLength: 255
          minLength: 3
          type: string
        invoiceCurrency:
          description: |
            [ISO_4217](https://en.wikipedia.org/wiki/ISO_4217) code of the currency in which the account must be invoiced
            Defaults to Base currency.
          example: USD
          maxLength: 3
          minLength: 3
          type: string
        aliases:
          description: list of aliases of the account
          items:
            $ref: '#/components/schemas/AccountAliases'
          maxItems: 10
          minItems: 0
          type: array
        status:
          description: Status of the account
          enum:
          - ACTIVE
          - ARCHIVED
          example: ACTIVE
          type: string
        settings:
          items:
            $ref: '#/components/schemas/CreateEntitySetting'
          maxItems: 10
          minItems: 0
          type: array
      required:
      - id
      - invoiceCurrency
      - name
      - status
      type: object
    EventSchemaVersionsResponse:
      additionalProperties: false
      description: Response for event schema versions
      example:
        data:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          attributes:
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          version: 1
          enrichments:
            fields:
            - enrichmentType: VALUE
              name: name
              type: ATTRIBUTE
              value: value
              order: 0
            - enrichmentType: VALUE
              name: name
              type: ATTRIBUTE
              value: value
              order: 0
            dependencies:
            - name: name
              type: SETTING
              key: key
            - name: name
              type: SETTING
              key: key
          status: DRAFT
          dimensions:
          - name: city
          - name: city
          - name: city
          - name: city
          - name: city
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - createdAt: 2000-01-23T04:56:07.000+00:00
          name: name
          description: description
          attributes:
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          - defaultUnit: kms
            name: distance
          version: 1
          enrichments:
            fields:
            - enrichmentType: VALUE
              name: name
              type: ATTRIBUTE
              value: value
              order: 0
            - enrichmentType: VALUE
              name: name
              type: ATTRIBUTE
              value: value
              order: 0
            dependencies:
            - name: name
              type: SETTING
              key: key
            - name: name
              type: SETTING
              key: key
          status: DRAFT
          dimensions:
          - name: city
          - name: city
          - name: city
          - name: city
          - name: city
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        data:
          items:
            $ref: '#/components/schemas/EventSchema'
          type: array
      required:
      - data
      type: object
    EventSchemaListData:
      allOf:
      - $ref: '#/components/schemas/EventSchema'
      - $ref: '#/components/schemas/EventSchemaListData_allOf'
    EventSchema:
      additionalProperties: false
      description: Structure of an event schema
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        attributes:
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        - defaultUnit: kms
          name: distance
        version: 1
        enrichments:
          fields:
          - enrichmentType: VALUE
            name: name
            type: ATTRIBUTE
            value: value
            order: 0
          - enrichmentType: VALUE
            name: name
            type: ATTRIBUTE
            value: value
            order: 0
          dependencies:
          - name: name
            type: SETTING
            key: key
          - name: name
            type: SETTING
            key: key
        status: DRAFT
        dimensions:
        - name: city
        - name: city
        - name: city
        - name: city
        - name: city
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          description: Name of the event. Must be unique for an organization.
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        description:
          description: Description of the event
          maxLength: 255
          type: string
        version:
          description: Version of event schema
          example: 1
          format: int32
          minimum: 1
          type: integer
        status:
          description: "Status of event schema\n* DRAFT - Schema is in draft state\
            \ \n* ACTIVE - Schema is currently active \n* INACTIVE - Schema is currently\
            \ inactive\n* ARCHIVED - Older version of event schema\n"
          enum:
          - DRAFT
          - ACTIVE
          - INACTIVE
          - ARCHIVED
          example: DRAFT
          type: string
        attributes:
          items:
            $ref: '#/components/schemas/EventAttributeSchema'
          maxItems: 50
          type: array
          uniqueItems: true
        dimensions:
          items:
            $ref: '#/components/schemas/DimensionsSchema'
          maxItems: 50
          type: array
          uniqueItems: true
        enrichments:
          $ref: '#/components/schemas/Enrichments'
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - name
      - version
      type: object
    EventAttributeSchema:
      additionalProperties: false
      description: Structure of an event attribute
      example:
        defaultUnit: kms
        name: distance
      properties:
        name:
          description: Name of the event attribute.
          example: distance
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        defaultUnit:
          description: Unit for the attribute
          example: kms
          maxLength: 10
          type: string
      required:
      - name
      type: object
    DimensionsSchema:
      additionalProperties: false
      description: Structure of dimensions
      example:
        name: city
      properties:
        name:
          description: Name of the event dimension
          example: city
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
      required:
      - name
      type: object
    Enrichments:
      additionalProperties: false
      example:
        fields:
        - enrichmentType: VALUE
          name: name
          type: ATTRIBUTE
          value: value
          order: 0
        - enrichmentType: VALUE
          name: name
          type: ATTRIBUTE
          value: value
          order: 0
        dependencies:
        - name: name
          type: SETTING
          key: key
        - name: name
          type: SETTING
          key: key
      properties:
        dependencies:
          items:
            $ref: '#/components/schemas/Dependency'
          type: array
        fields:
          items:
            $ref: '#/components/schemas/Field'
          type: array
      required:
      - fields
      type: object
    Dependency:
      additionalProperties: false
      example:
        name: name
        type: SETTING
        key: key
      properties:
        type:
          enum:
          - SETTING
          type: string
        key:
          type: string
        name:
          type: string
      required:
      - key
      - name
      - type
      type: object
    Field:
      additionalProperties: false
      example:
        enrichmentType: VALUE
        name: name
        type: ATTRIBUTE
        value: value
        order: 0
      properties:
        name:
          type: string
        type:
          enum:
          - ATTRIBUTE
          - DIMENSION
          type: string
        enrichmentType:
          enum:
          - VALUE
          - JSON_LOGIC
          - JSON_LOGIC_FROM_DEPENDENCY
          type: string
        value:
          type: string
        order:
          format: int32
          type: integer
      required:
      - enrichmentType
      - name
      - order
      - type
      - value
      type: object
    UsageMeter:
      additionalProperties: false
      description: Structure of usage meter
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        computations:
        - id: id
          matcher: |
            {
              "and": [
                {"in": [{"var": "dimension.city"}, "chennai", "mumbai"]},
                "or": [
                  {">": [{"var": "attribute.distance"}, 100]},
                  {"<": [{"var": "attribute.distance"}, 20]}
                ]
              ]
            }
          computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
          order: 0
        name: rides-usage
        description: Meter to track cab rides
        aggregation: COUNT
        id: id
        type: COUNTER
        lastActivatedAt: 2000-01-23T04:56:07.000+00:00
        status: DRAFT
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Identifier of the usage meter
          maxLength: 20
          type: string
        name:
          description: Name of the usage meter
          example: rides-usage
          maxLength: 50
          pattern: "^[\\sa-zA-Z0-9_-]*$"
          type: string
        description:
          example: Meter to track cab rides
          maxLength: 255
          type: string
        type:
          description: Type of usage meter
          enum:
          - COUNTER
          example: COUNTER
          type: string
        status:
          description: Status of usage meter
          enum:
          - DRAFT
          - ACTIVE
          - INACTIVE
          - ARCHIVED
          example: DRAFT
          type: string
        aggregation:
          description: Aggregation to be applied on usage meter result
          enum:
          - COUNT
          - SUM
          type: string
        computations:
          items:
            $ref: '#/components/schemas/Computation'
          maxItems: 1
          minItems: 0
          type: array
        createdAt:
          format: date-time
          type: string
        lastActivatedAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - aggregation
      - id
      - name
      - type
      type: object
    Computation:
      example:
        id: id
        matcher: |
          {
            "and": [
              {"in": [{"var": "dimension.city"}, "chennai", "mumbai"]},
              "or": [
                {">": [{"var": "attribute.distance"}, 100]},
                {"<": [{"var": "attribute.distance"}, 20]}
              ]
            ]
          }
        computation: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
        order: 0
      properties:
        id:
          description: Optional identifier describing the matcher and computation
            pair
          maxLength: 50
          type: string
        matcher:
          description: |
            Condition to be applied on event. Upon matching it the corresponding computation will be considered for usage_meter unit calculation. The result of the matcher needs to be [truthy](https://jsonlogic.com/truthy.html) in order to be considered as a match.
          example: |
            {
              "and": [
                {"in": [{"var": "dimension.city"}, "chennai", "mumbai"]},
                "or": [
                  {">": [{"var": "attribute.distance"}, 100]},
                  {"<": [{"var": "attribute.distance"}, 20]}
                ]
              ]
            }
          maxLength: 1500
          type: string
        computation:
          description: |
            Computation to be applied on an event if it matches the matcher. In case of a COUNT aggregation type, computation should be passed as '1'
          example: "{\"*\":[{\"var\":\"attributes.distance\"},0.4]}"
          maxLength: 500
          type: string
        order:
          description: The order in which multiple matched computations will get evaluated
          type: integer
      required:
      - computation
      - order
      type: object
    PaginationOptions:
      additionalProperties: false
      example:
        sortOrder: ASC
        pageSize: 0
      properties:
        pageSize:
          type: integer
        sortOrder:
          enum:
          - ASC
          - DESC
          type: string
      type: object
    PlanOverride:
      additionalProperties: false
      description: "Represents effectiveness period and config of a price plan. i.e,\
        \ price plan bound by time."
      example:
        endDate: 2000-01-23T04:56:07.000+00:00
        pricePlanName: pricePlanName
        id: id
        pricePlanId: pricePlanId
        pricePlanDetailsOverride: null
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        pricePlanId:
          type: string
        pricePlanName:
          type: string
        pricePlanDetailsOverride:
          $ref: '#/components/schemas/PricePlanDetailsOverride'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
      required:
      - endDate
      - id
      - pricePlanId
      - pricePlanName
      - startDate
      type: object
    Setting:
      additionalProperties: false
      description: Represents a setting
      example:
        entityType: entityType
        dataType: null
        namespace: namespace
        name: name
        entityId: entityId
        id: id
        value: value
      properties:
        id:
          type: string
        value:
          type: string
        entityType:
          type: string
        entityId:
          type: string
        namespace:
          type: string
        name:
          type: string
        dataType:
          $ref: '#/components/schemas/SettingDataType'
      required:
      - dataType
      - entityId
      - entityType
      - id
      - name
      - namespace
      - value
      type: object
    SettingDataType:
      enum:
      - STRING
      - NUMERIC
      - JSON
      - JSON_LOGIC
      type: string
    CreateEntitySetting:
      additionalProperties: false
      description: Represents a setting
      example:
        dataType: null
        namespace: namespace
        name: name
        id: id
        value: value
      properties:
        id:
          type: string
        value:
          type: string
        namespace:
          type: string
        name:
          type: string
        dataType:
          $ref: '#/components/schemas/SettingDataType'
      required:
      - dataType
      - id
      - name
      - namespace
      - value
      type: object
    AddOn:
      allOf:
      - $ref: '#/components/schemas/CreateAddOnRequest'
      - $ref: '#/components/schemas/AddOn_allOf'
    CreateAddOnRequest:
      additionalProperties: false
      description: Request to create an addon
      example:
        name: name
      properties:
        name:
          description: Name of addon
          maxLength: 255
          type: string
      required:
      - name
      type: object
    CreatePricePlanDetailsOverride:
      example:
        supportedCurrencies:
        - supportedCurrencies
        - supportedCurrencies
        pricingCycleConfig:
          gracePeriod: 3
          startOffset:
            dayOffset: dayOffset
            monthOffset: monthOffset
          interval: MONTHLY
        fixedFeeRateCards:
        - invoiceTiming: null
          displayName: displayName
          rateValues:
          - rate: 5.637376656633329
            currency: currency
          - rate: 5.637376656633329
            currency: currency
          id: id
          type: null
        - invoiceTiming: null
          displayName: displayName
          rateValues:
          - rate: 5.637376656633329
            currency: currency
          - rate: 5.637376656633329
            currency: currency
          id: id
          type: null
        usageRateCards:
        - ratePlan:
            pricingModel: null
            slabs:
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
          displayName: displayName
          usageMeterId: um.1zYnCiM9Bpg.1zYn
          rateValues:
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
        - ratePlan:
            pricingModel: null
            slabs:
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
          displayName: displayName
          usageMeterId: um.1zYnCiM9Bpg.1zYn
          rateValues:
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
        minimumCommitment:
          displayName: displayName
          rateValues:
          - rate: 5.637376656633329
            currency: currency
          - rate: 5.637376656633329
            currency: currency
      properties:
        pricingCycleConfig:
          $ref: '#/components/schemas/PricingCycleConfig'
        supportedCurrencies:
          items:
            type: string
          minItems: 1
          type: array
          uniqueItems: true
        usageRateCards:
          items:
            $ref: '#/components/schemas/UsageRateCard'
          minItems: 1
          type: array
        fixedFeeRateCards:
          items:
            $ref: '#/components/schemas/FixedFeeRateCard'
          minItems: 1
          type: array
        minimumCommitment:
          $ref: '#/components/schemas/MinimumCommitment'
      type: object
    CurrencyRateValue:
      example:
        rate: 5.637376656633329
        currency: currency
      properties:
        currency:
          type: string
        rate:
          type: number
      required:
      - currency
      - rate
      type: object
    FixedFeeRateCard:
      example:
        invoiceTiming: null
        displayName: displayName
        rateValues:
        - rate: 5.637376656633329
          currency: currency
        - rate: 5.637376656633329
          currency: currency
        id: id
        type: null
      properties:
        id:
          description: Unique Identifier of the attached AddOn
          maxLength: 50
          type: string
        displayName:
          description: Name of the attached AddOn
          type: string
        invoiceTiming:
          $ref: '#/components/schemas/InvoiceTiming'
        type:
          $ref: '#/components/schemas/FixedFeeType'
        rateValues:
          items:
            $ref: '#/components/schemas/CurrencyRateValue'
          type: array
      required:
      - id
      - rateValues
      title: FixedFeeRateCard
      type: object
    FixedFeeType:
      default: RECURRING
      description: Fixed fee applies either for a one-time occurrence or for each
        cycle.
      enum:
      - ONE_TIME
      - RECURRING
      type: string
    InvoiceTiming:
      description: |
        If IN_ADVANCE, the fixed fee will be invoiced in the previous billing cycle.
        If IN_ARREARS, the fixed fee will be invoiced in the current billing cycle.
      enum:
      - IN_ADVANCE
      - IN_ARREARS
      type: string
      x-enum-varnames:
      - IN_ADVANCE
      - IN_ARREARS
    MinimumCommitment:
      example:
        displayName: displayName
        rateValues:
        - rate: 5.637376656633329
          currency: currency
        - rate: 5.637376656633329
          currency: currency
      properties:
        displayName:
          type: string
        rateValues:
          items:
            $ref: '#/components/schemas/CurrencyRateValue'
          minItems: 1
          type: array
      required:
      - displayName
      - rateValues
      title: MinimumCommitment
      type: object
    PricePlan:
      additionalProperties: false
      description: Price plan entity
      example:
        pricingSchedule:
        - pricePlanDetails:
            supportedCurrencies:
            - supportedCurrencies
            - supportedCurrencies
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            fixedFeeRateCards:
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            minimumCommitment:
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
            activeCurrencies:
            - activeCurrencies
            - activeCurrencies
          endDate: 2000-01-23T04:56:07.000+00:00
          id: id
          version: 1
          startDate: 2000-01-23T04:56:07.000+00:00
        - pricePlanDetails:
            supportedCurrencies:
            - supportedCurrencies
            - supportedCurrencies
            pricingCycleConfig:
              gracePeriod: 3
              startOffset:
                dayOffset: dayOffset
                monthOffset: monthOffset
              interval: MONTHLY
            fixedFeeRateCards:
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            - invoiceTiming: null
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
              id: id
              type: null
            usageRateCards:
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            - ratePlan:
                pricingModel: null
                slabs:
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
                - startAfter: 6.027456183070403
                  priceType: null
                  slabConfig:
                    key: slabConfig
                  order: 1
              displayName: displayName
              usageMeterId: um.1zYnCiM9Bpg.1zYn
              rateValues:
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
              - currency: currency
                slabRates:
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
                - rate: 5.962133916683182
                  slabRateConfig:
                    key: slabRateConfig
                  order: 1
            minimumCommitment:
              displayName: displayName
              rateValues:
              - rate: 5.637376656633329
                currency: currency
              - rate: 5.637376656633329
                currency: currency
            activeCurrencies:
            - activeCurrencies
            - activeCurrencies
          endDate: 2000-01-23T04:56:07.000+00:00
          id: id
          version: 1
          startDate: 2000-01-23T04:56:07.000+00:00
        name: name
        description: description
        id: id
        status: DRAFT
      properties:
        id:
          description: Price plan id
          type: string
        name:
          description: Name of the price plan
          maxLength: 50
          type: string
        description:
          description: Description of price plan
          maxLength: 255
          type: string
        status:
          description: Status of Price plan
          enum:
          - DRAFT
          - ACTIVE
          - ARCHIVED
          type: string
        pricingSchedule:
          items:
            $ref: '#/components/schemas/PricingSchedule'
          type: array
      required:
      - id
      - name
      - pricingSchedule
      - status
      type: object
    PricePlanDetails:
      example:
        supportedCurrencies:
        - supportedCurrencies
        - supportedCurrencies
        pricingCycleConfig:
          gracePeriod: 3
          startOffset:
            dayOffset: dayOffset
            monthOffset: monthOffset
          interval: MONTHLY
        fixedFeeRateCards:
        - invoiceTiming: null
          displayName: displayName
          rateValues:
          - rate: 5.637376656633329
            currency: currency
          - rate: 5.637376656633329
            currency: currency
          id: id
          type: null
        - invoiceTiming: null
          displayName: displayName
          rateValues:
          - rate: 5.637376656633329
            currency: currency
          - rate: 5.637376656633329
            currency: currency
          id: id
          type: null
        usageRateCards:
        - ratePlan:
            pricingModel: null
            slabs:
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
          displayName: displayName
          usageMeterId: um.1zYnCiM9Bpg.1zYn
          rateValues:
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
        - ratePlan:
            pricingModel: null
            slabs:
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
          displayName: displayName
          usageMeterId: um.1zYnCiM9Bpg.1zYn
          rateValues:
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
        minimumCommitment:
          displayName: displayName
          rateValues:
          - rate: 5.637376656633329
            currency: currency
          - rate: 5.637376656633329
            currency: currency
        activeCurrencies:
        - activeCurrencies
        - activeCurrencies
      properties:
        supportedCurrencies:
          items:
            type: string
          type: array
          uniqueItems: true
        activeCurrencies:
          items:
            type: string
          readOnly: true
          type: array
          uniqueItems: true
        pricingCycleConfig:
          $ref: '#/components/schemas/PricingCycleConfig'
        usageRateCards:
          items:
            $ref: '#/components/schemas/UsageRateCard'
          minItems: 1
          type: array
        fixedFeeRateCards:
          items:
            $ref: '#/components/schemas/FixedFeeRateCard'
          minItems: 1
          type: array
        minimumCommitment:
          $ref: '#/components/schemas/MinimumCommitment'
      required:
      - activeCurrencies
      - pricingCycleConfig
      - supportedCurrencies
      type: object
    PricePlanDetailsOverride:
      allOf:
      - $ref: '#/components/schemas/CreatePricePlanDetailsOverride'
      - $ref: '#/components/schemas/PricePlanDetailsOverride_allOf'
    PriceType:
      enum:
      - FLAT
      - PER_UNIT
      - PACKAGE
      type: string
    PricingCycleConfig:
      description: Represents configurations related to pricing cycle
      example:
        gracePeriod: 3
        startOffset:
          dayOffset: dayOffset
          monthOffset: monthOffset
        interval: MONTHLY
      properties:
        interval:
          description: Interval field allow you to define the billing interval you
            would like to set
          enum:
          - MONTHLY
          - QUARTERLY
          - HALF_YEARLY
          - ANNUALLY
          type: string
        startOffset:
          $ref: '#/components/schemas/PricingCycleConfig_startOffset'
        gracePeriod:
          description: "Togai allows you to ingest past dated events that will be\
            \ processed by a pricing cycle till the end grace period. \nFor example:\
            \ Pricing cycle is Monthly from 1st to 30th and gracePeriod is 5 days\
            \ which next month 1 to 5th date, you can ingest past dated events during\
            \ this grace period.\n"
          example: 3
          format: int32
          type: integer
      required:
      - gracePeriod
      - interval
      - startOffset
      type: object
    PricingModel:
      description: "Togai supports two type of pricing model Tiered and Volume. Tiered\
        \ pricing model applies respective slab and its rate to the usage value while\
        \ volume pricing model applies the latest matching slab of the usage value\
        \ and applies respective rate. \nFor more understanding read [Rate Cards](https://docs.togai.com/docs/priceplan#setting-up-multiple-rate-cards)\n"
      enum:
      - TIERED
      - VOLUME
      type: string
    PricingSchedule:
      additionalProperties: false
      description: "Represents effectiveness period and config of a price plan. i.e,\
        \ price plan bound by time."
      example:
        pricePlanDetails:
          supportedCurrencies:
          - supportedCurrencies
          - supportedCurrencies
          pricingCycleConfig:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            interval: MONTHLY
          fixedFeeRateCards:
          - invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          - invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          usageRateCards:
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          minimumCommitment:
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
          activeCurrencies:
          - activeCurrencies
          - activeCurrencies
        endDate: 2000-01-23T04:56:07.000+00:00
        id: id
        version: 1
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          type: string
        pricePlanDetails:
          $ref: '#/components/schemas/PricePlanDetails'
        startDate:
          format: date-time
          type: string
        endDate:
          format: date-time
          type: string
        version:
          format: int32
          minimum: 1
          type: integer
      required:
      - endDate
      - id
      - startDate
      - version
      type: object
    RatePlan:
      description: Contains all rate related configurations
      example:
        pricingModel: null
        slabs:
        - startAfter: 6.027456183070403
          priceType: null
          slabConfig:
            key: slabConfig
          order: 1
        - startAfter: 6.027456183070403
          priceType: null
          slabConfig:
            key: slabConfig
          order: 1
      properties:
        pricingModel:
          $ref: '#/components/schemas/PricingModel'
        slabs:
          description: Rate cards can have single or multiple slab up to 100.
          items:
            $ref: '#/components/schemas/Slab'
          minItems: 1
          type: array
      required:
      - pricingModel
      - slabs
      type: object
    RateValue:
      description: Represents a rate
      example:
        currency: currency
        slabRates:
        - rate: 5.962133916683182
          slabRateConfig:
            key: slabRateConfig
          order: 1
        - rate: 5.962133916683182
          slabRateConfig:
            key: slabRateConfig
          order: 1
      properties:
        currency:
          type: string
        slabRates:
          items:
            $ref: '#/components/schemas/SlabRate'
          minItems: 1
          type: array
      required:
      - currency
      - slabRates
      type: object
    Slab:
      description: Represents a pricing priceType (rates + slabs) for usage price
        plan
      example:
        startAfter: 6.027456183070403
        priceType: null
        slabConfig:
          key: slabConfig
        order: 1
      properties:
        order:
          format: int32
          maximum: 10
          minimum: 1
          type: integer
        startAfter:
          type: number
        priceType:
          $ref: '#/components/schemas/PriceType'
        slabConfig:
          additionalProperties:
            type: string
          type: object
      required:
      - order
      - priceType
      - startAfter
      type: object
    SlabRate:
      description: Represents a rate for a slab
      example:
        rate: 5.962133916683182
        slabRateConfig:
          key: slabRateConfig
        order: 1
      properties:
        order:
          format: int32
          type: integer
        rate:
          type: number
        slabRateConfig:
          additionalProperties:
            type: string
          type: object
      required:
      - order
      - rate
      type: object
    UsageRateCard:
      example:
        ratePlan:
          pricingModel: null
          slabs:
          - startAfter: 6.027456183070403
            priceType: null
            slabConfig:
              key: slabConfig
            order: 1
          - startAfter: 6.027456183070403
            priceType: null
            slabConfig:
              key: slabConfig
            order: 1
        displayName: displayName
        usageMeterId: um.1zYnCiM9Bpg.1zYn
        rateValues:
        - currency: currency
          slabRates:
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 1
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 1
        - currency: currency
          slabRates:
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 1
          - rate: 5.962133916683182
            slabRateConfig:
              key: slabRateConfig
            order: 1
      properties:
        displayName:
          description: "Name your rate card, this will be displayed in the Togai App"
          type: string
        usageMeterId:
          example: um.1zYnCiM9Bpg.1zYn
          type: string
        ratePlan:
          $ref: '#/components/schemas/RatePlan'
        rateValues:
          items:
            $ref: '#/components/schemas/RateValue'
          type: array
      required:
      - displayName
      - ratePlan
      - rateValues
      - usageMeterId
      type: object
    IngestEventRequest:
      additionalProperties: false
      description: Payload for ingesting events
      example:
        event:
          accountId: "1"
          createdAt: 2000-01-23T04:56:07.000+00:00
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
      properties:
        event:
          $ref: '#/components/schemas/Event'
      type: object
    IngestBatchEventRequest:
      additionalProperties: false
      description: Payload for ingesting batch events
      example:
        events:
        - accountId: "1"
          createdAt: 2000-01-23T04:56:07.000+00:00
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
        - accountId: "1"
          createdAt: 2000-01-23T04:56:07.000+00:00
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
        - accountId: "1"
          createdAt: 2000-01-23T04:56:07.000+00:00
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
        - accountId: "1"
          createdAt: 2000-01-23T04:56:07.000+00:00
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
        - accountId: "1"
          createdAt: 2000-01-23T04:56:07.000+00:00
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
      properties:
        events:
          items:
            $ref: '#/components/schemas/Event'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - events
      type: object
    IngestEventResponse:
      additionalProperties: false
      example:
        code: code
        success: true
        name: name
        details: "{}"
        message: message
        statusCode: 0
      properties:
        success:
          example: true
          type: boolean
        statusCode:
          format: int32
          type: integer
        name:
          type: string
        message:
          maxLength: 500
          type: string
        code:
          type: string
        details:
          type: object
      type: object
    StatusResponse:
      properties:
        greeting:
          maxLength: 500
          type: string
        date:
          format: date-time
          type: string
        url:
          maxLength: 100
          type: string
        headers:
          $ref: '#/components/schemas/StatusResponse_headers'
      title: StatusResponse
      type: object
    Attribute:
      additionalProperties: false
      description: Metric to be recorded
      example:
        unit: characters
        name: message
        value: "100"
      properties:
        name:
          description: Name of the event attribute
          example: message
          maxLength: 50
          minLength: 1
          type: string
        value:
          description: Value of the event attribute
          example: "100"
          pattern: "^-?\\d{1,512}(\\.\\d+)?$"
          type: string
        unit:
          description: "Unit with which the attribute value was measured. Natively\
            \ supported units - \"Meters, Miles, Kilometers, Grams, Kilograms, ounces,\
            \ Pounds, Minutes, Hours, Seconds, Milliseconds, Microseconds, None\"\
            . Clients are free to add any other custom units."
          example: characters
          maxLength: 50
          minLength: 1
          type: string
      required:
      - name
      - value
      type: object
    Dimensions:
      additionalProperties:
        example: "{\"Country\":\"India\"}"
        maxLength: 50
        minLength: 1
        type: string
      description: Dimensions are tags/labels associated with the events.
      type: object
    Event:
      additionalProperties: false
      description: Contents of the event
      example:
        accountId: "1"
        createdAt: 2000-01-23T04:56:07.000+00:00
        attributes:
        - unit: characters
          name: message
          value: "100"
        - unit: characters
          name: message
          value: "100"
        - unit: characters
          name: message
          value: "100"
        - unit: characters
          name: message
          value: "100"
        - unit: characters
          name: message
          value: "100"
        id: c0b1306d-f506-43a6-856b-69221efaee6b
        schemaName: schemaName
        timestamp: 2000-01-23T04:56:07.000+00:00
        dimensions:
          key: "{\"Country\":\"India\"}"
      properties:
        schemaName:
          description: "Name of the Event Schema. \nKnow more about [event schema](https://docs.togai.com/docs/event-schemas)\n"
          maxLength: 50
          minLength: 1
          type: string
        id:
          description: "A unique value to identify the event instance. This unique\
            \ value should be generated by the client and it acts as the **idempotency\
            \ key**. Togai server will use this key to recognize subsequent retries\
            \ of the same request and avoid metering multiple times for that same\
            \ request. This id can be created in any format but we recommend using\
            \ UUIDv4 to reduce collision occurance. \n\n NOTE1: Expiry time for idempotency\
            \ validation will be until the end of the billing cycle. Any request which\
            \ comes after the billing cycle with the same id will be treated as new\
            \ request and ingested for metering.\n\n NOTE2: If the billing cycle is\
            \ not configured for the idempotency validation will be until **10 days**\
            \ of the event ingestion."
          example: c0b1306d-f506-43a6-856b-69221efaee6b
          maxLength: 512
          type: string
        timestamp:
          description: Source time stamp of the event. This timestamp must be in ISO
            8601 format.
          format: date-time
          type: string
        accountId:
          description: The event will be associated with the provided account
          example: "1"
          maxLength: 512
          type: string
        attributes:
          description: Attributes are numeric values. It can be usage metric which
            you push to Togai
          items:
            $ref: '#/components/schemas/Attribute'
          maxItems: 10
          type: array
        dimensions:
          additionalProperties:
            example: "{\"Country\":\"India\"}"
            maxLength: 50
            minLength: 1
            type: string
          description: Dimensions are tags/labels associated with the events.
          type: object
        createdAt:
          description: Created time stamp of the event. This timestamp must be in
            ISO 8601 format.
          format: date-time
          type: string
      required:
      - accountId
      - attributes
      - createdAt
      - dimensions
      - id
      - schemaName
      - timestamp
      type: object
    GetEventResponse:
      additionalProperties: false
      description: Get single event response
      example:
        events:
        - null
        - null
      properties:
        events:
          items:
            $ref: '#/components/schemas/EventWithStatusAndEventPipelineInfo'
          type: array
      required:
      - events
      type: object
    GetEventsResponse:
      additionalProperties: false
      description: Get batch events response
      example:
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
        events:
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          customerId: "1"
          eventPayload:
            accountId: "1"
            createdAt: 2000-01-23T04:56:07.000+00:00
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
          source:
            id: id
            type: type
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          customerId: "1"
          eventPayload:
            accountId: "1"
            createdAt: 2000-01-23T04:56:07.000+00:00
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
          source:
            id: id
            type: type
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          customerId: "1"
          eventPayload:
            accountId: "1"
            createdAt: 2000-01-23T04:56:07.000+00:00
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
          source:
            id: id
            type: type
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          customerId: "1"
          eventPayload:
            accountId: "1"
            createdAt: 2000-01-23T04:56:07.000+00:00
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
          source:
            id: id
            type: type
        - ingestionStatus:
            statusDescription: Ingestion Completed successfully
            status: INGESTION_COMPLETED
          customerId: "1"
          eventPayload:
            accountId: "1"
            createdAt: 2000-01-23T04:56:07.000+00:00
            attributes:
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            - unit: characters
              name: message
              value: "100"
            id: c0b1306d-f506-43a6-856b-69221efaee6b
            schemaName: schemaName
            timestamp: 2000-01-23T04:56:07.000+00:00
            dimensions:
              key: "{\"Country\":\"India\"}"
          source:
            id: id
            type: type
      properties:
        events:
          items:
            $ref: '#/components/schemas/EventWithStatus'
          maxItems: 50
          minItems: 1
          type: array
        nextToken:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          maxLength: 500
          type: string
      required:
      - events
      type: object
    EventWithStatus:
      additionalProperties: false
      description: Raw usage event ingested by the business team and the status of
        the event ingestion.
      example:
        ingestionStatus:
          statusDescription: Ingestion Completed successfully
          status: INGESTION_COMPLETED
        customerId: "1"
        eventPayload:
          accountId: "1"
          createdAt: 2000-01-23T04:56:07.000+00:00
          attributes:
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          - unit: characters
            name: message
            value: "100"
          id: c0b1306d-f506-43a6-856b-69221efaee6b
          schemaName: schemaName
          timestamp: 2000-01-23T04:56:07.000+00:00
          dimensions:
            key: "{\"Country\":\"India\"}"
        source:
          id: id
          type: type
      properties:
        eventPayload:
          $ref: '#/components/schemas/Event'
        ingestionStatus:
          $ref: '#/components/schemas/IngestionStatus'
        customerId:
          description: The associated account belongs to this customer
          example: "1"
          maxLength: 50
          type: string
        source:
          $ref: '#/components/schemas/EventSource'
      required:
      - eventPayload
      - ingestionStatus
      type: object
    EventWithStatusAndEventPipelineInfo:
      allOf:
      - $ref: '#/components/schemas/EventWithStatus'
      - $ref: '#/components/schemas/EventWithStatusAndEventPipelineInfo_allOf'
    IngestionStatus:
      additionalProperties: false
      description: Status about the event ingestion.
      example:
        statusDescription: Ingestion Completed successfully
        status: INGESTION_COMPLETED
      properties:
        status:
          description: Ingestion status
          enum:
          - INGESTION_IN_PROGRESS
          - INGESTION_FAILED
          - INGESTION_FAILED_SCHEMA_NOT_DEFINED
          - INGESTION_FAILED_ENRICHMENT_FAILED
          - INGESTION_FAILED_UNITS_INVALID
          - INGESTION_COMPLETED_NO_MATCHING_METERS
          - INGESTION_COMPLETED_EVENT_METERED
          - INGESTION_COMPLETED_EVENT_NOT_METERED
          - UNKNOWN
          example: INGESTION_COMPLETED
          type: string
        statusDescription:
          example: Ingestion Completed successfully
          maxLength: 250
          type: string
      required:
      - status
      type: object
    EventSource:
      additionalProperties: false
      description: Source of ingestion of event
      example:
        id: id
        type: type
      properties:
        id:
          description: Unique identifier representing the source
          maxLength: 100
          type: string
        type:
          description: Type of source
          maxLength: 100
          type: string
      required:
      - id
      - type
      type: object
    EventPipelineInfo:
      additionalProperties: false
      description: Information related to ingestion of an event
      properties:
        eventSchema:
          $ref: '#/components/schemas/EventPipelineInfoEventSchema'
        usageMeters:
          items:
            $ref: '#/components/schemas/EventPipelineInfoUsageMeters'
          type: array
        pricePlans:
          items:
            $ref: '#/components/schemas/EventPipelineInfoPricePlans'
          type: array
        account:
          $ref: '#/components/schemas/EventPipelineInfoAccount'
        customer:
          $ref: '#/components/schemas/EventPipelineInfoCustomer'
        enrichments:
          $ref: '#/components/schemas/EventPipelineInfoEnrichments'
      type: object
    EnrichedField:
      additionalProperties: false
      description: enriched field
      properties:
        name:
          type: string
        type:
          enum:
          - ATTRIBUTE
          - DIMENSION
          type: string
        value:
          type: string
      readOnly: true
      required:
      - name
      - type
      - value
      type: object
    EnrichmentDependency:
      additionalProperties: false
      description: enrichment dependency
      properties:
        key:
          type: string
        type:
          enum:
          - SETTING
          type: string
        name:
          type: string
        value:
          type: string
      readOnly: true
      required:
      - key
      - type
      - value
      type: object
    GetMetricsRequest:
      additionalProperties: false
      description: Request to get metrics from togai
      example:
        metricQueries:
        - configs:
            key: configs
          name: null
          id: id
          groupBy: groupBy
          filters:
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          aggregationPeriod: DAY
        - configs:
            key: configs
          name: null
          id: id
          groupBy: groupBy
          filters:
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          - fieldName: ACCOUNT_ID
            fieldValues:
            - account#1
            - account#1
          aggregationPeriod: DAY
        startTime: 2017-07-21T00:00:00Z
        endTime: 2017-07-21T00:00:00Z
      properties:
        startTime:
          example: 2017-07-21T00:00:00Z
          format: date-time
          type: string
        endTime:
          example: 2017-07-21T00:00:00Z
          format: date-time
          type: string
        metricQueries:
          items:
            $ref: '#/components/schemas/MetricQuery'
          type: array
          uniqueItems: true
      required:
      - endTime
      - metricQueries
      - startTime
      type: object
    MetricName:
      default: EVENTS
      description: |
        Define the metric you would like to get - allowed options are
        EVENTS - Aggregation of raw events,
        USAGE - Aggregated usage value from Usage meters,
        REVENUE - Aggregated revenue value from Pricing Plans
        USAGE_FOR_CYCLE - Usage in pricing cycle
        REVENUE_FOR_CYCLE - Revenue in pricing cycle
      enum:
      - EVENTS
      - USAGE
      - REVENUE
      - USAGE_FOR_CYCLE
      - REVENUE_FOR_CYCLE
      type: string
    MetricQuery:
      additionalProperties: false
      description: Object representing a single metrics query
      example:
        configs:
          key: configs
        name: null
        id: id
        groupBy: groupBy
        filters:
        - fieldName: ACCOUNT_ID
          fieldValues:
          - account#1
          - account#1
        - fieldName: ACCOUNT_ID
          fieldValues:
          - account#1
          - account#1
        - fieldName: ACCOUNT_ID
          fieldValues:
          - account#1
          - account#1
        - fieldName: ACCOUNT_ID
          fieldValues:
          - account#1
          - account#1
        - fieldName: ACCOUNT_ID
          fieldValues:
          - account#1
          - account#1
        aggregationPeriod: DAY
      properties:
        id:
          description: "Mandatory  for all request. \nUser defined ID for identifying\
            \ the request for your internal reference\n"
          type: string
        name:
          $ref: '#/components/schemas/MetricName'
        aggregationPeriod:
          default: DAY
          description: "Set the aggregation period. Allowed periods are DAY, WEEK,\
            \ MONTH"
          enum:
          - DAY
          - WEEK
          - MONTH
          type: string
        groupBy:
          description: "Group your metric with a groupBy field. \nAllowed fields are\
            \ \nACCOUNT_ID\nEVENT_STATUS \nSCHEMA_NAME \nUSAGE_METER_ID \nPlease refer\
            \ the table above for the list of combinations allowed in the groupBy\n"
          type: string
        configs:
          additionalProperties:
            type: string
          description: |
            Configurations.
            | Metric Name       | Config Key | Allowed Values  | Default value |              Description          |
            |-------------------|------------|-----------------|---------------|-----------------------------------|
            | REVENUE           | CURRENCY   | BASE or INVOICE | BASE          | currency to return the revenue in |
            | REVENUE_FOR_CYCLE | CURRENCY   | BASE or INVOICE | BASE          | currency to return the revenue in |
          type: object
        filters:
          description: "Filter on specific fields. \nRefer possible fieldNames and\
            \ fieldValues from the table above.\n"
          items:
            $ref: '#/components/schemas/MetricQueryFilterEntry'
          maxItems: 5
          minItems: 1
          type: array
      required:
      - aggregationPeriod
      - id
      - name
      type: object
    ComputeRevenueSummaryRequest:
      properties:
        revenueSummaryQueries:
          items:
            $ref: '#/components/schemas/revenueSummaryQuery'
          minItems: 1
          type: array
      required:
      - revenueSummaryQueries
      type: object
    GetMetricsResponse:
      additionalProperties: false
      description: Response to GetMetrics Request
      example:
        results:
        - data:
          - groupedBy:
              fieldName: fieldName
              fieldValue: fieldValue
            timestamps:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            metricValues:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
          - groupedBy:
              fieldName: fieldName
              fieldValue: fieldValue
            timestamps:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            metricValues:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
          name: null
          id: id
        - data:
          - groupedBy:
              fieldName: fieldName
              fieldValue: fieldValue
            timestamps:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            metricValues:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
          - groupedBy:
              fieldName: fieldName
              fieldValue: fieldValue
            timestamps:
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            - 2000-01-23T04:56:07.000+00:00
            metricValues:
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
            - 0.8008281904610115
          name: null
          id: id
      properties:
        results:
          items:
            $ref: '#/components/schemas/MetricQueryResponse'
          type: array
      required:
      - results
      type: object
    MetricQueryResponse:
      additionalProperties: false
      description: Response to GetMetrics Request
      example:
        data:
        - groupedBy:
            fieldName: fieldName
            fieldValue: fieldValue
          timestamps:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          metricValues:
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
        - groupedBy:
            fieldName: fieldName
            fieldValue: fieldValue
          timestamps:
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          - 2000-01-23T04:56:07.000+00:00
          metricValues:
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
          - 0.8008281904610115
        name: null
        id: id
      properties:
        id:
          type: string
        name:
          $ref: '#/components/schemas/MetricName'
        data:
          items:
            $ref: '#/components/schemas/MetricDataPoints'
          type: array
      required:
      - data
      - id
      - name
      type: object
    MetricDataPoints:
      additionalProperties: false
      example:
        groupedBy:
          fieldName: fieldName
          fieldValue: fieldValue
        timestamps:
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        - 2000-01-23T04:56:07.000+00:00
        metricValues:
        - 0.8008281904610115
        - 0.8008281904610115
        - 0.8008281904610115
        - 0.8008281904610115
        - 0.8008281904610115
      properties:
        groupedBy:
          $ref: '#/components/schemas/MetricDataPointsGroupedBy'
        timestamps:
          items:
            format: date-time
            type: string
          maxItems: 100
          type: array
        metricValues:
          items:
            type: number
          maxItems: 100
          type: array
      required:
      - metricValues
      - timestamps
      type: object
    SlabRevenue:
      properties:
        order:
          format: int32
          maximum: 10
          minimum: 1
          type: integer
        usage:
          type: number
        revenue:
          type: number
        metadata:
          additionalProperties:
            type: string
          type: object
      required:
      - order
      - revenue
      - usage
      type: object
    ComputeRevenueSummaryResponse:
      additionalProperties: false
      properties:
        revenueSummaryResponses:
          items:
            $ref: '#/components/schemas/revenueSummaryResponse'
          minItems: 1
          type: array
      required:
      - revenueSummaryResponses
      type: object
    InternalFixedFeeRateCard:
      properties:
        id:
          type: string
        displayName:
          type: string
        currency:
          type: string
        rate:
          type: number
        invoiceTiming:
          $ref: '#/components/schemas/InvoiceTiming'
        type:
          $ref: '#/components/schemas/FixedFeeType'
      required:
      - currency
      - displayName
      - id
      - invoiceTiming
      - rate
      type: object
    InternalSlab:
      allOf:
      - $ref: '#/components/schemas/Slab'
      - $ref: '#/components/schemas/SlabRate'
      - $ref: '#/components/schemas/InternalSlab_allOf'
    InternalUsageRateCard:
      properties:
        id:
          type: string
        displayName:
          type: string
        usageMeterId:
          example: um.1zYnCiM9Bpg.1zYn
          type: string
        pricingModel:
          $ref: '#/components/schemas/PricingModel'
        currency:
          type: string
        internalSlabs:
          items:
            $ref: '#/components/schemas/InternalSlab'
          type: array
      required:
      - currency
      - displayName
      - id
      - internalSlabs
      - pricingModel
      - usageMeterId
      type: object
    CreateCreditRequest:
      additionalProperties: false
      description: Payload to grant Credits
      example:
        accountId: ACC001
        effectiveUntil: 2021-07-04T00:00:00.000+00:00
        purpose: PREPAID_CREDIT
        creditAmount: 1000
        priority: 1
        effectiveFrom: 2020-07-04T00:00:00.000+00:00
        applicableEntityIds:
        - "[\"umg.1znQx9jiIXw.r44fc\",\"ALL_USAGE_METER_RATE_CARDS\",\"ALL_FIXED_FEE_RATE_CARDS\"\
          ]"
        - "[\"umg.1znQx9jiIXw.r44fc\",\"ALL_USAGE_METER_RATE_CARDS\",\"ALL_FIXED_FEE_RATE_CARDS\"\
          ]"
      properties:
        accountId:
          example: ACC001
          type: string
        purpose:
          example: PREPAID_CREDIT
          type: string
        applicableEntityIds:
          description: |
            List of entity ids for which the credit is applicable. If null or empty, the credit is applicable to all ids. This list can accept special values like: - ALL_USAGE_METER_RATE_CARDS: To apply the credit to all usage meter rate cards - ALL_FIXED_FEE_RATE_CARDS: To apply the credit to all fixed fee rate cards
          items:
            example: "[\"umg.1znQx9jiIXw.r44fc\",\"ALL_USAGE_METER_RATE_CARDS\",\"\
              ALL_FIXED_FEE_RATE_CARDS\"]"
            type: string
          type: array
          uniqueItems: true
        effectiveFrom:
          example: 2020-07-04
          format: date
          type: string
        effectiveUntil:
          example: 2021-07-04
          format: date
          type: string
        creditAmount:
          example: 1000
          type: number
        priority:
          example: 1
          type: integer
      required:
      - accountId
      - creditAmount
      - effectiveFrom
      - priority
      - purpose
      type: object
    ManageMiscellaneousChargesRequest:
      additionalProperties: false
      description: Payload to update custom line items
      example:
        items:
        - name: Charge 1
          value: "100"
        - name: Charge 1
          value: "100"
      properties:
        items:
          items:
            $ref: '#/components/schemas/MiscellaneousCharge'
          type: array
      required:
      - items
      type: object
    MiscellaneousChargesResponse:
      additionalProperties: false
      description: Miscellaneous charges response
      example:
        data:
        - name: Charge 1
          value: "100"
        - name: Charge 1
          value: "100"
      properties:
        data:
          items:
            $ref: '#/components/schemas/MiscellaneousCharge'
          type: array
      required:
      - data
      type: object
    ListInvoicesResponse:
      additionalProperties: false
      description: List invoices response
      example:
        data:
        - endDate: 2020-07-04T12:00:00Z
          pricePlanId: pricePlanId
          invoiceDate: 2020-07-04T12:00:00Z
          usageInfo:
          - lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          - lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          accountId: accountId
          revenueInfo:
            lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          customerId: customerId
          generatedAt: 2000-01-23T04:56:07.000+00:00
          id: id
          invoiceDetails:
            pricePlanName: pricePlanName
            account:
              name: name
              invoiceCurrency: invoiceCurrency
            customer:
              name: name
              billingAddress: billingAddress
              primaryEmail: primaryEmail
          startDate: 2020-07-04T12:00:00Z
          status: GENERATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - endDate: 2020-07-04T12:00:00Z
          pricePlanId: pricePlanId
          invoiceDate: 2020-07-04T12:00:00Z
          usageInfo:
          - lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          - lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          accountId: accountId
          revenueInfo:
            lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          customerId: customerId
          generatedAt: 2000-01-23T04:56:07.000+00:00
          id: id
          invoiceDetails:
            pricePlanName: pricePlanName
            account:
              name: name
              invoiceCurrency: invoiceCurrency
            customer:
              name: name
              billingAddress: billingAddress
              primaryEmail: primaryEmail
          startDate: 2020-07-04T12:00:00Z
          status: GENERATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - endDate: 2020-07-04T12:00:00Z
          pricePlanId: pricePlanId
          invoiceDate: 2020-07-04T12:00:00Z
          usageInfo:
          - lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          - lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          accountId: accountId
          revenueInfo:
            lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          customerId: customerId
          generatedAt: 2000-01-23T04:56:07.000+00:00
          id: id
          invoiceDetails:
            pricePlanName: pricePlanName
            account:
              name: name
              invoiceCurrency: invoiceCurrency
            customer:
              name: name
              billingAddress: billingAddress
              primaryEmail: primaryEmail
          startDate: 2020-07-04T12:00:00Z
          status: GENERATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - endDate: 2020-07-04T12:00:00Z
          pricePlanId: pricePlanId
          invoiceDate: 2020-07-04T12:00:00Z
          usageInfo:
          - lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          - lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          accountId: accountId
          revenueInfo:
            lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          customerId: customerId
          generatedAt: 2000-01-23T04:56:07.000+00:00
          id: id
          invoiceDetails:
            pricePlanName: pricePlanName
            account:
              name: name
              invoiceCurrency: invoiceCurrency
            customer:
              name: name
              billingAddress: billingAddress
              primaryEmail: primaryEmail
          startDate: 2020-07-04T12:00:00Z
          status: GENERATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - endDate: 2020-07-04T12:00:00Z
          pricePlanId: pricePlanId
          invoiceDate: 2020-07-04T12:00:00Z
          usageInfo:
          - lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          - lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          accountId: accountId
          revenueInfo:
            lineItems:
            - null
            - null
            - null
            - null
            - null
            valuePerQuantity: 0.8008281904610115
            metadata:
              key: ""
            quantity: 6.027456183070403
            description: description
            id: id
            units: units
            type: type
            value: 1.4658129805029452
          customerId: customerId
          generatedAt: 2000-01-23T04:56:07.000+00:00
          id: id
          invoiceDetails:
            pricePlanName: pricePlanName
            account:
              name: name
              invoiceCurrency: invoiceCurrency
            customer:
              name: name
              billingAddress: billingAddress
              primaryEmail: primaryEmail
          startDate: 2020-07-04T12:00:00Z
          status: GENERATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
      properties:
        data:
          items:
            $ref: '#/components/schemas/Invoice'
          maxItems: 50
          minItems: 0
          type: array
        nextToken:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          maxLength: 500
          type: string
      required:
      - data
      type: object
    ListCreditsResponse:
      additionalProperties: false
      description: List credits response
      example:
        data:
        - null
        - null
        - null
        - null
        - null
        nextToken: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
      properties:
        data:
          items:
            $ref: '#/components/schemas/Credit'
          maxItems: 50
          minItems: 0
          type: array
        nextToken:
          example: eyJsYXN0SXRlbUlkIjogInN0cmluZyIsICJwYWdlU2l6ZSI6IDEyMywgInNvcnRPcmRlciI6ICJhc2MifQ==
          maxLength: 500
          type: string
      required:
      - data
      type: object
    CreditDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/Credit'
      - $ref: '#/components/schemas/CreditDetailsResponse_allOf'
    CreditBalanceResponse:
      additionalProperties: false
      description: Credit Balance response
      example:
        unit: USD
        inapplicableCredits: 500
        activeCredits: 1000
        runningBalance: 500
        availableBalance: 700
      properties:
        activeCredits:
          example: 1000
          type: number
        availableBalance:
          example: 700
          type: number
        runningBalance:
          example: 500
          type: number
        inapplicableCredits:
          example: 500
          type: number
        unit:
          example: USD
          type: string
      required:
      - activeCredits
      - availableBalance
      - inapplicableCredits
      - runningBalance
      - unit
      type: object
    Invoice:
      additionalProperties: false
      description: Structure of invoice
      example:
        endDate: 2020-07-04T12:00:00Z
        pricePlanId: pricePlanId
        invoiceDate: 2020-07-04T12:00:00Z
        usageInfo:
        - lineItems:
          - null
          - null
          - null
          - null
          - null
          valuePerQuantity: 0.8008281904610115
          metadata:
            key: ""
          quantity: 6.027456183070403
          description: description
          id: id
          units: units
          type: type
          value: 1.4658129805029452
        - lineItems:
          - null
          - null
          - null
          - null
          - null
          valuePerQuantity: 0.8008281904610115
          metadata:
            key: ""
          quantity: 6.027456183070403
          description: description
          id: id
          units: units
          type: type
          value: 1.4658129805029452
        accountId: accountId
        revenueInfo:
          lineItems:
          - null
          - null
          - null
          - null
          - null
          valuePerQuantity: 0.8008281904610115
          metadata:
            key: ""
          quantity: 6.027456183070403
          description: description
          id: id
          units: units
          type: type
          value: 1.4658129805029452
        customerId: customerId
        generatedAt: 2000-01-23T04:56:07.000+00:00
        id: id
        invoiceDetails:
          pricePlanName: pricePlanName
          account:
            name: name
            invoiceCurrency: invoiceCurrency
          customer:
            name: name
            billingAddress: billingAddress
            primaryEmail: primaryEmail
        startDate: 2020-07-04T12:00:00Z
        status: GENERATED
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Identifier of customer
          maxLength: 50
          type: string
        customerId:
          type: string
        accountId:
          type: string
        pricePlanId:
          type: string
        usageInfo:
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
          type: array
        revenueInfo:
          $ref: '#/components/schemas/InvoiceLineItem'
        invoiceDetails:
          $ref: '#/components/schemas/InvoiceDetails'
        status:
          description: Status of the invoice
          enum:
          - ONGOING
          - GRACE_PERIOD
          - GENERATED
          - PUBLISHED
          example: GENERATED
          type: string
        startDate:
          description: Start date of the invoice
          example: 2020-07-04T12:00:00Z
          format: date-time
          type: string
        endDate:
          description: End date of the invoice
          example: 2020-07-04T12:00:00Z
          format: date-time
          type: string
        invoiceDate:
          description: Invoice date of the invoice
          example: 2020-07-04T12:00:00Z
          format: date-time
          type: string
        generatedAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - accountId
      - customerId
      - endDate
      - id
      - invoiceDate
      - pricePlanId
      - startDate
      - status
      - updatedAt
      type: object
    InvoiceLineItem:
      additionalProperties: false
      example:
        lineItems:
        - null
        - null
        - null
        - null
        - null
        valuePerQuantity: 0.8008281904610115
        metadata:
          key: ""
        quantity: 6.027456183070403
        description: description
        id: id
        units: units
        type: type
        value: 1.4658129805029452
      properties:
        id:
          type: string
        description:
          type: string
        type:
          description: "Type of the line item\n- TOTAL_USAGE: List of all the usage\
            \ meter usages\n- USAGE_METER_USAGE: A single usage meter usage\n- NET_REVENUE:\
            \ Net revenue of the invoice ( Gross revenue - Discounts )\n- GROSS_REVENUE:\
            \ Gross revenue of the invoice \n- USAGE_RATE_CARD_REVENUE: Revenue generated\
            \ from usage rate card\n- USAGE_RATE_CARD_SLAB_REVENUE: Revenue generated\
            \ from usage rate card slab\n"
          type: string
        valuePerQuantity:
          type: number
        quantity:
          type: number
        units:
          type: string
        value:
          type: number
        metadata:
          additionalProperties: true
          type: object
        lineItems:
          items:
            $ref: '#/components/schemas/InvoiceLineItem'
          maxItems: 50
          minItems: 1
          type: array
      required:
      - description
      - lineItems
      - type
      type: object
    InvoiceDetails:
      additionalProperties: false
      example:
        pricePlanName: pricePlanName
        account:
          name: name
          invoiceCurrency: invoiceCurrency
        customer:
          name: name
          billingAddress: billingAddress
          primaryEmail: primaryEmail
      properties:
        customer:
          $ref: '#/components/schemas/InvoiceDetails_customer'
        account:
          $ref: '#/components/schemas/InvoiceDetails_account'
        pricePlanName:
          type: string
      required:
      - account
      - customer
      - pricePlanName
      type: object
    Credit:
      allOf:
      - $ref: '#/components/schemas/CreateCreditRequest'
      - $ref: '#/components/schemas/Credit_allOf'
    CreditTransaction:
      additionalProperties: false
      properties:
        id:
          description: Identifier of credit transactions
          maxLength: 50
          type: string
        creditId:
          type: string
        transactionType:
          enum:
          - CREDITED
          - DEBITED
          - EXPIRED
          - VOIDED
          example: CREDITED
          type: string
        invoiceId:
          type: string
        amount:
          example: 200
          type: number
        createdAt:
          format: date-time
          type: string
      required:
      - amount
      - createdAt
      - creditId
      - id
      - transactionType
      type: object
    MiscellaneousCharges:
      items:
        $ref: '#/components/schemas/MiscellaneousCharge'
      type: array
    CurrencyConfig:
      description: Configuration for getting the currency
      example:
        mode: CUSTOM
        accountId: accountId
        currency: currency
      properties:
        mode:
          description: |
            Mode to get the currency
            - CUSTOM: Use the currency provided in the request
            - ACCOUNT_INVOICE: Use the invoice currency of the given account
          enum:
          - CUSTOM
          - ACCOUNT_INVOICE
          type: string
        currency:
          description: "Currency to be used, this will be considered if mode is CUSTOM"
          minLength: 1
          type: string
        accountId:
          description: "Id of the account of which invoice currency will be used,\
            \ this will be considered if mode is ACCOUNT_INVOICE"
          type: string
      required:
      - mode
      title: CurrencyConfig
      type: object
    PricePlanDetailsConfig:
      description: Configuration for getting the usage rate card
      example:
        mode: CUSTOM
        accountId: accountId
        pricingCycleOrdinal: 0
        pricePlanDetails:
          supportedCurrencies:
          - supportedCurrencies
          - supportedCurrencies
          pricingCycleConfig:
            gracePeriod: 3
            startOffset:
              dayOffset: dayOffset
              monthOffset: monthOffset
            interval: MONTHLY
          fixedFeeRateCards:
          - invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          - invoiceTiming: null
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
            id: id
            type: null
          usageRateCards:
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          - ratePlan:
              pricingModel: null
              slabs:
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
              - startAfter: 6.027456183070403
                priceType: null
                slabConfig:
                  key: slabConfig
                order: 1
            displayName: displayName
            usageMeterId: um.1zYnCiM9Bpg.1zYn
            rateValues:
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
            - currency: currency
              slabRates:
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
              - rate: 5.962133916683182
                slabRateConfig:
                  key: slabRateConfig
                order: 1
          minimumCommitment:
            displayName: displayName
            rateValues:
            - rate: 5.637376656633329
              currency: currency
            - rate: 5.637376656633329
              currency: currency
        effectiveOn: 2000-01-23T04:56:07.000+00:00
        pricePlanId: pricePlanId
      properties:
        mode:
          description: |
            Mode to get the usage rate card
            - CUSTOM: Use the price plan details provided in the request
            - PRICE_PLAN: Use the usage rate cards of the given price plan
            - ACCOUNT: Use the usage rate cards of a associated price plan of the given account
          enum:
          - CUSTOM
          - PRICE_PLAN
          - ACCOUNT
          type: string
        pricePlanDetails:
          $ref: '#/components/schemas/CreatePricePlanDetails'
        pricePlanId:
          description: "Id of the price plan, this will be considered if mode is PRICE_PLAN"
          minLength: 1
          type: string
        accountId:
          description: "Id of the account, this will be considered if mode is ACCOUNT"
          minLength: 1
          type: string
        effectiveOn:
          description: "Will be used for getting the usage rate card, only used if\
            \ mode is ACCOUNT or PRICE_PLAN"
          format: date-time
          type: string
        pricingCycleOrdinal:
          description: "nth cycle, will be used to calculate revenue for the particular\
            \ cycle, only used if mode is CUSTOM or PRICE_PLAN"
          type: integer
      required:
      - mode
      title: PricePlanDetailsConfig
      type: object
    UsageConfig_lookupRange:
      description: "Range of usage to be looked up, this will be considered if mode\
        \ is LOOKUP_RANGE"
      example:
        accountId: accountId
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
      properties:
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        accountId:
          minLength: 1
          type: string
      required:
      - accountId
      - end
      - start
      type: object
    UsageConfig_lookupCycle:
      description: "Cycle of usage to be looked up, this will be considered if mode\
        \ is LOOKUP_CYCLE"
      example:
        accountId: accountId
        cycleEffectiveOn: 2000-01-23T04:56:07.000+00:00
      properties:
        cycleEffectiveOn:
          format: date-time
          type: string
        accountId:
          minLength: 1
          type: string
      required:
      - accountId
      type: object
    UsageConfig:
      description: Configuration for getting the usage
      example:
        mode: CUSTOM
        lookupCycle:
          accountId: accountId
          cycleEffectiveOn: 2000-01-23T04:56:07.000+00:00
        lookupRange:
          accountId: accountId
          start: 2000-01-23T04:56:07.000+00:00
          end: 2000-01-23T04:56:07.000+00:00
        usageMap:
          key: 6.027456183070403
      properties:
        mode:
          description: |
            Mode to get the usage for the usage meters
            - CUSTOM: Use the usages provided in the request
            - LOOKUP_RANGE: Use the usage of a given account for the specified range
            - LOOKUP_CYCLE: Use the usage of a given account for the specified cycle
          enum:
          - CUSTOM
          - LOOKUP_RANGE
          - LOOKUP_CYCLE
          type: string
        usageMap:
          additionalProperties:
            type: number
          description: "Map of usage meter id and usage, this will be considered if\
            \ mode is CUSTOM"
          type: object
        lookupRange:
          $ref: '#/components/schemas/UsageConfig_lookupRange'
        lookupCycle:
          $ref: '#/components/schemas/UsageConfig_lookupCycle'
      required:
      - mode
      title: UsageConfig
      type: object
    UsageRate:
      example:
        usageMeterId: um.1zYnCiM9Bpg.1zYn
        slabRates:
        - rate: 5.962133916683182
          slabRateConfig:
            key: slabRateConfig
          order: 1
        - rate: 5.962133916683182
          slabRateConfig:
            key: slabRateConfig
          order: 1
      properties:
        usageMeterId:
          description: The usage meter will be associated with the rate card to transform
            the usage value to billable value
          example: um.1zYnCiM9Bpg.1zYn
          type: string
        slabRates:
          description: List of slab rates
          items:
            $ref: '#/components/schemas/SlabRate'
          type: array
      required:
      - slabRates
      - usageMeterId
      title: UsageRate
      type: object
    FixedFeeRate:
      example:
        rate: 0.8008281904610115
        id: id
      properties:
        id:
          type: string
        rate:
          type: number
      required:
      - id
      - rate
      title: FixedFeeRate
      type: object
    PricingScheduleWithPricePlanId_allOf:
      properties:
        pricePlanId:
          type: string
      required:
      - pricePlanId
      type: object
      example: null
    UsageLookupRange:
      additionalProperties: false
      description: Start and end dates of usage lookup if usage mode is LOOKUP
      example:
        start: 2000-01-23T04:56:07.000+00:00
        end: 2000-01-23T04:56:07.000+00:00
      properties:
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
      required:
      - end
      - start
      title: UsageLookupRange
      type: object
    RevenueInfo_fixedFeeRevenueSummary:
      additionalProperties: false
      example:
        revenue: 6.027456183070403
      properties:
        revenue:
          type: number
      required:
      - revenue
      type: object
    RevenueInfo:
      additionalProperties: false
      example:
        usageRateCard:
          ratePlan:
            pricingModel: null
            slabs:
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
            - startAfter: 6.027456183070403
              priceType: null
              slabConfig:
                key: slabConfig
              order: 1
          displayName: displayName
          usageMeterId: um.1zYnCiM9Bpg.1zYn
          rateValues:
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
          - currency: currency
            slabRates:
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
            - rate: 5.962133916683182
              slabRateConfig:
                key: slabRateConfig
              order: 1
        fixedFeeRevenueSummary:
          revenue: 6.027456183070403
        fixedFeeRateCard:
          invoiceTiming: null
          displayName: displayName
          rateValues:
          - rate: 5.637376656633329
            currency: currency
          - rate: 5.637376656633329
            currency: currency
          id: id
          type: null
        slabRevenueSummaries:
        - revenue: 5.637376656633329
          metadata:
            maximumRateApplied: true
            minimumRateApplied: true
            packageQuantity: 2
          usage: 5.962133916683182
          order: 1
        - revenue: 5.637376656633329
          metadata:
            maximumRateApplied: true
            minimumRateApplied: true
            packageQuantity: 2
          usage: 5.962133916683182
          order: 1
        usages:
          key: 0.8008281904610115
      properties:
        usageRateCard:
          $ref: '#/components/schemas/UsageRateCard'
        fixedFeeRateCard:
          $ref: '#/components/schemas/FixedFeeRateCard'
        usages:
          additionalProperties:
            type: number
          type: object
        fixedFeeRevenueSummary:
          $ref: '#/components/schemas/RevenueInfo_fixedFeeRevenueSummary'
        slabRevenueSummaries:
          items:
            $ref: '#/components/schemas/SlabRevenueSummary'
          type: array
      required:
      - usages
      title: RevenueInfo
      type: object
    SlabRevenueMetadata:
      additionalProperties: false
      example:
        maximumRateApplied: true
        minimumRateApplied: true
        packageQuantity: 2
      properties:
        minimumRateApplied:
          type: boolean
        maximumRateApplied:
          type: boolean
        packageQuantity:
          type: integer
      title: SlabRevenueMetadata
      type: object
    AccountAliases:
      example:
        alias: alias
        status: ACTIVE
      properties:
        alias:
          maxLength: 50
          type: string
        status:
          enum:
          - ACTIVE
          - ARCHIVED
          type: string
      title: AccountAliases
      type: object
    EventSchemaListData_allOf:
      properties:
        usageMetersCount:
          type: integer
      type: object
      example: null
    AddOn_allOf:
      properties:
        id:
          description: Id of addon
          example: addon.1zYnCiM9Bpg.1zYn
          type: string
        createdAt:
          description: Created Time of addon
          format: date-time
          type: string
        status:
          description: status of addon
          enum:
          - ACTIVE
          - ARCHIVED
          example: ACTIVE
          type: string
      required:
      - createdAt
      - id
      - status
      type: object
      example: null
    PricePlanDetailsOverride_allOf:
      properties:
        fixedFeeRateCards:
          items:
            $ref: '#/components/schemas/FixedFeeRateCard'
          minItems: 1
          type: array
      type: object
      example: null
    PricingCycleConfig_startOffset:
      description: "Represents the start of pricing cycle in terms of\n - dayOffset\
        \ - number of days from beginning of month and\n - monthOffset - number of\
        \ months from beginning of interval (quarter, half-year or year)\nNote: If\
        \ a day with offset doesn't exist for a month, closest previous day is considered\n\
        Examples:\nMONTHLY -\n  - {dayOffset: 1, monthOffset: NIL} - First day of\
        \ every month\n  - {dayOffset: 12, monthOffset: NIL} - 12th of every month\n\
        \  - {dayOffset: 28, monthOffset: NIL} - 28th of every month. i.e, 28th of\
        \ Jan, 28th of Feb, ...\n  - {dayOffset: 30, monthOffset: NIL} - 30th of every\
        \ month. i.e, 28th of Jan, 28th of Feb, ...\n  - {dayOffset: LAST, monthOffset:\
        \ NIL} - Last day of every month. i.e, 31st of Jan, 28th of Feb, ...\nQUARTERLY\n\
        \  - {dayOffset: 15, monthOffset: FIRST} - 15th Jan, 15th Apr, 15th Jul and\
        \ 15th Oct\n  - {dayOffset: 15, monthOffset: 2} - 15th Feb, 15th May, 15th\
        \ Aug and 15th Nov\n  - {dayOffset: 15, monthOffset: LAST} - 15th Mar, 15th\
        \ Jun, 15th Sep and 15th Dec\n  - {dayOffset: LAST, monthOffset: FIRST} -\
        \ 31st Jan, 30th Apr, 30th Jul and 31th Oct\nHALF_YEARLY\n  - {dayOffset:\
        \ 15, monthOffset: FIRST} - 15th Jan and 15th Jul\n  - {dayOffset: 15, monthOffset:\
        \ 4} - 15th Apr and 15th Oct\n  - {dayOffset: 15, monthOffset: LAST} - 15th\
        \ Jun and 15th Dec\nANNUALLY\n  - {dayOffset: 15, monthOffset: FIRST} - 15th\
        \ Jan\n  - {dayOffset: 15, monthOffset: 1} - 15th Jan\n  - {dayOffset: LAST,\
        \ monthOffset: 2} - 29th Feb on Leap year, 28th otherwise \n  - {dayOffset:\
        \ 15, monthOffset: 8} - 15th Aug\n  - {dayOffset: 15, monthOffset: LAST} -\
        \ 15th Dec\n"
      example:
        dayOffset: dayOffset
        monthOffset: monthOffset
      properties:
        dayOffset:
          description: |
            min: "1" and max: "31" as strings. Spl. string allowed: LAST
          type: string
        monthOffset:
          description: |
            min: "1" and max: "12". Spl. string allowed: FIRST / LAST.
            For QUARTERLY only 1 - 3 is allowed and for HALF_YEARLY 1 - 6. This being an optional field, shouldn't be passed for MONTHLY.
          type: string
      required:
      - dayOffset
      - monthOffset
      type: object
    StatusResponse_headers:
      additionalProperties: true
      properties:
        Content-Type:
          maxLength: 100
          type: string
      type: object
    EventWithStatusAndEventPipelineInfo_allOf:
      properties:
        EventPipelineInfo:
          $ref: '#/components/schemas/EventPipelineInfo'
      required:
      - eventPipelineInfo
      type: object
      example: null
    EventPipelineInfoEventSchema:
      additionalProperties: false
      properties:
        name:
          type: string
        version:
          format: int32
          type: integer
      required:
      - name
      - version
      title: EventPipelineInfoEventSchema
      type: object
    EventPipelineInfoUsageMeters:
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
        version:
          format: int32
          type: integer
        status:
          enum:
          - PROCESSED_FILTERED_OUT
          - PROCESSED_UNITS_COMPUTED
          type: string
        units:
          type: number
      required:
      - id
      - name
      - status
      - version
      title: EventPipelineInfoUsageMeters
      type: object
    EventPipelineInfoPricePlans:
      additionalProperties: false
      properties:
        name:
          type: string
        id:
          type: string
        scheduleId:
          type: string
        cycleStart:
          format: date
          type: string
        cycleEnd:
          format: date
          type: string
        usageMeters:
          items:
            type: string
          type: array
          uniqueItems: true
      required:
      - cycleEnd
      - cycleStart
      - id
      - name
      - scheduleId
      title: EventPipelineInfoPricePlans
      type: object
    EventPipelineInfoAccount:
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      title: EventPipelineInfoAccount
      type: object
    EventPipelineInfoCustomer:
      additionalProperties: false
      properties:
        id:
          type: string
        name:
          type: string
      required:
      - id
      - name
      title: EventPipelineInfoCustomer
      type: object
    EventPipelineInfoEnrichments:
      additionalProperties: false
      properties:
        attributes:
          items:
            $ref: '#/components/schemas/EnrichedField'
          type: array
        dimensions:
          items:
            $ref: '#/components/schemas/EnrichedField'
          type: array
        dependencies:
          items:
            $ref: '#/components/schemas/EnrichmentDependency'
          type: array
      title: EventPipelineInfoEnrichments
      type: object
    MetricQueryFilterEntry:
      additionalProperties: false
      description: |2

        | Metric Name       | FilterEntry Name |    Allowed groupBy fields                 |      Default Values      |                 Allowed Values                  |
        |-------------------|------------------|-------------------------------------------|--------------------------|-------------------------------------------------|
        | EVENTS            | ACCOUNT_ID       | ACCOUNT_ID, EVENT_STATUS, SCHEMA_NAME,    | None                     | *\<one or more valid account IDs>               |
        | EVENTS            | CUSTOMER_ID      | ACCOUNT_ID, EVENT_STATUS, SCHEMA_NAME,    | None                     | *\<one or more valid customer IDs>              |
        | EVENTS            | SCHEMA_NAME      | ACCOUNT_ID, EVENT_STATUS, SCHEMA_NAME,    | None                     | *\<at most one valid schema names>              |
        | EVENTS            | EVENT_STATUS     | ACCOUNT_ID, EVENT_STATUS, SCHEMA_NAME,    | [PROCESSED, UNPROCESSED] | oneOrMoreOf PROCESSED, UNPROCESSED, IN_PROGRESS |
        | USAGE             | ACCOUNT_ID       | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | None                     | *\<one or more valid account IDs>               |
        | USAGE             | CUSTOMER_ID      | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | None                     | *\<one or more valid customer IDs>              |
        | USAGE             | USAGE_METER_ID   | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | None                     | *\<one or more valid usage meter name>          |
        | REVENUE           | ACCOUNT_ID       | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | None                     | *\<one or more valid account IDs>               |
        | REVENUE           | CUSTOMER_ID      | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | None                     | *\<one or more valid customer IDs>              |
        | REVENUE           | USAGE_METER_ID   | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | None                     | *\<one or more valid usage meter name>          |
        | EVENTS            | ORGANIZATION_ID  | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | <From auth token>        |                                                 |
        | USAGE             | ORGANIZATION_ID  | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | <From auth token>        |                                                 |
        | REVENUE           | ORGANIZATION_ID  | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | <From auth token>        |                                                 |
        | USAGE_FOR_CYCLE   | ACCOUNT_ID       | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | None                     | *\<one or more valid account IDs>               |
        | USAGE_FOR_CYCLE   | CUSTOMER_ID      | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | None                     | *\<one or more valid customer IDs>              |
        | USAGE_FOR_CYCLE   | USAGE_METER_ID   | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | None                     | *\<one or more valid usage meter name>          |
        | REVENUE_FOR_CYCLE | ACCOUNT_ID       | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | None                     | *\<one or more valid account IDs>               |
        | REVENUE_FOR_CYCLE | CUSTOMER_ID      | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | None                     | *\<one or more valid customer IDs>              |
        | REVENUE_FOR_CYCLE | USAGE_METER_ID   | ACCOUNT_ID, USAGE_METER_ID, CUSTOMER_ID   | None                     | *\<one or more valid usage meter name>          |
      example:
        fieldName: ACCOUNT_ID
        fieldValues:
        - account#1
        - account#1
      properties:
        fieldName:
          example: ACCOUNT_ID
          type: string
        fieldValues:
          items:
            example: account#1
            type: string
          type: array
      required:
      - fieldName
      - fieldValues
      title: MetricQueryFilterEntry
      type: object
    revenueSummaryQuery_usages_customConfig:
      description: Usages map with usageMeterId as key and usage units as value. This
        will be considered if mode is CUSTOM
      properties:
        usageMap:
          additionalProperties:
            type: number
          type: object
      required:
      - usageMap
      type: object
    revenueSummaryQuery_usages_lookupConfig:
      description: Holder for data required to lookup usages. This will be considered
        if mode is LOOKUP
      properties:
        start:
          format: date-time
          type: string
        end:
          format: date-time
          type: string
        accountId:
          type: string
      required:
      - accountId
      - end
      - start
      type: object
    revenueSummaryQuery_usages:
      properties:
        mode:
          enum:
          - LOOKUP
          - CUSTOM
          type: string
        customConfig:
          $ref: '#/components/schemas/revenueSummaryQuery_usages_customConfig'
        lookupConfig:
          $ref: '#/components/schemas/revenueSummaryQuery_usages_lookupConfig'
      required:
      - mode
      type: object
    revenueSummaryQuery:
      properties:
        id:
          type: string
        fixedFeeRateCard:
          $ref: '#/components/schemas/InternalFixedFeeRateCard'
        usageRateCard:
          $ref: '#/components/schemas/InternalUsageRateCard'
        usages:
          $ref: '#/components/schemas/revenueSummaryQuery_usages'
      required:
      - id
      - usages
      title: revenueSummaryQuery
      type: object
    MetricDataPointsGroupedBy:
      example:
        fieldName: fieldName
        fieldValue: fieldValue
      properties:
        fieldName:
          type: string
        fieldValue:
          type: string
      required:
      - fieldName
      - fieldValue
      title: MetricDataPointsGroupedBy
      type: object
    revenueSummaryResponse_revenueSummary:
      properties:
        slabRevenues:
          items:
            $ref: '#/components/schemas/SlabRevenue'
          type: array
        fixedFeeRevenue:
          type: number
      type: object
    revenueSummaryResponse:
      properties:
        id:
          type: string
        currency:
          type: string
        usages:
          additionalProperties:
            type: number
          type: object
        revenueSummary:
          $ref: '#/components/schemas/revenueSummaryResponse_revenueSummary'
      required:
      - currency
      - id
      - revenueSummary
      - usages
      title: revenueSummaryResponse
    InternalSlab_allOf:
      properties:
        endAt:
          type: number
      type: object
      example: null
    CreditDetailsResponse_allOf:
      properties:
        transactions:
          items:
            $ref: '#/components/schemas/CreditTransaction'
          type: array
      required:
      - transactions
      type: object
      example: null
    InvoiceDetails_customer:
      additionalProperties: false
      example:
        name: name
        billingAddress: billingAddress
        primaryEmail: primaryEmail
      properties:
        name:
          type: string
        primaryEmail:
          type: string
        billingAddress:
          type: string
      required:
      - billingAddress
      - name
      - primaryEmail
      type: object
    InvoiceDetails_account:
      additionalProperties: false
      example:
        name: name
        invoiceCurrency: invoiceCurrency
      properties:
        name:
          type: string
        invoiceCurrency:
          type: string
      required:
      - invoiceCurrency
      - name
      type: object
    Credit_allOf:
      properties:
        id:
          description: Identifier of credits
          example: cred.1znqBOVcai0.0tBFz
          maxLength: 50
          type: string
        customerId:
          example: 7VcRw9xZDIqsC5E
          type: string
        status:
          enum:
          - ACTIVE
          - CONSUMED
          - EXPIRED
          - VOIDED
          example: ACTIVE
          type: string
        creditUnit:
          example: USD
          type: string
        holdAmount:
          example: 500
          type: number
        consumedAmount:
          example: 400
          type: number
        createdAt:
          format: date-time
          type: string
        updatedAt:
          format: date-time
          type: string
      required:
      - createdAt
      - customerId
      - id
      - status
      type: object
      example: null
    MiscellaneousCharge:
      additionalProperties: false
      description: Miscellaneous charges are the charges that can be added to the
        invoice
      example:
        name: Charge 1
        value: "100"
      properties:
        name:
          description: Name of the miscellaneous charge
          example: Charge 1
          type: string
        value:
          description: Value of the charge
          example: "100"
          type: string
      required:
      - name
      - value
      title: MiscellaneousCharge
      type: object
  securitySchemes:
    bearerAuth:
      bearerFormat: Bearer <credential>
      scheme: bearer
      type: http
    apiKeyAuth:
      in: header
      name: X-API-Key
      type: apiKey

