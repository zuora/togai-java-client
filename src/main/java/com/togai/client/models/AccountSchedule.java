/*
 * Togai Apis
 * APIs for Togai App
 *
 * The version of the OpenAPI document: 1.0
 * Contact: engg@togai.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.togai.client.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.togai.client.models.PricePlanInfo;
import com.togai.client.models.ScheduleInfo;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.togai.client.JSON;

/**
 * AccountSchedule
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class AccountSchedule implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  @javax.annotation.Nonnull
  private String id;

  public static final String SERIALIZED_NAME_ACCOUNT_ID = "accountId";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_ID)
  @javax.annotation.Nonnull
  private String accountId;

  public static final String SERIALIZED_NAME_PRICE_PLAN_ID = "pricePlanId";
  @SerializedName(SERIALIZED_NAME_PRICE_PLAN_ID)
  @javax.annotation.Nonnull
  private String pricePlanId;

  public static final String SERIALIZED_NAME_VERSION = "version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  @javax.annotation.Nonnull
  private Integer version;

  public static final String SERIALIZED_NAME_DEFERRED_REVENUE = "deferredRevenue";
  @SerializedName(SERIALIZED_NAME_DEFERRED_REVENUE)
  @javax.annotation.Nonnull
  private Boolean deferredRevenue;

  public static final String SERIALIZED_NAME_PRICE_PLAN_INFO = "pricePlanInfo";
  @SerializedName(SERIALIZED_NAME_PRICE_PLAN_INFO)
  @javax.annotation.Nonnull
  private PricePlanInfo pricePlanInfo;

  public static final String SERIALIZED_NAME_ACCOUNT_SCHEDULE_INFO = "accountScheduleInfo";
  @SerializedName(SERIALIZED_NAME_ACCOUNT_SCHEDULE_INFO)
  @javax.annotation.Nonnull
  private ScheduleInfo accountScheduleInfo;

  public static final String SERIALIZED_NAME_IS_OVERRIDDEN = "isOverridden";
  @SerializedName(SERIALIZED_NAME_IS_OVERRIDDEN)
  @javax.annotation.Nullable
  private Boolean isOverridden;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  @javax.annotation.Nonnull
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  @javax.annotation.Nonnull
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_ALLOW_ONGOING_CYCLE_UPDATES = "allowOngoingCycleUpdates";
  @SerializedName(SERIALIZED_NAME_ALLOW_ONGOING_CYCLE_UPDATES)
  @javax.annotation.Nonnull
  private Boolean allowOngoingCycleUpdates;

  public AccountSchedule() {
  }

  public AccountSchedule id(@javax.annotation.Nonnull String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nonnull
  public String getId() {
    return id;
  }

  public void setId(@javax.annotation.Nonnull String id) {
    this.id = id;
  }


  public AccountSchedule accountId(@javax.annotation.Nonnull String accountId) {
    this.accountId = accountId;
    return this;
  }

  /**
   * Get accountId
   * @return accountId
   */
  @javax.annotation.Nonnull
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(@javax.annotation.Nonnull String accountId) {
    this.accountId = accountId;
  }


  public AccountSchedule pricePlanId(@javax.annotation.Nonnull String pricePlanId) {
    this.pricePlanId = pricePlanId;
    return this;
  }

  /**
   * Get pricePlanId
   * @return pricePlanId
   */
  @javax.annotation.Nonnull
  public String getPricePlanId() {
    return pricePlanId;
  }

  public void setPricePlanId(@javax.annotation.Nonnull String pricePlanId) {
    this.pricePlanId = pricePlanId;
  }


  public AccountSchedule version(@javax.annotation.Nonnull Integer version) {
    this.version = version;
    return this;
  }

  /**
   * Get version
   * @return version
   */
  @javax.annotation.Nonnull
  public Integer getVersion() {
    return version;
  }

  public void setVersion(@javax.annotation.Nonnull Integer version) {
    this.version = version;
  }


  public AccountSchedule deferredRevenue(@javax.annotation.Nonnull Boolean deferredRevenue) {
    this.deferredRevenue = deferredRevenue;
    return this;
  }

  /**
   * Get deferredRevenue
   * @return deferredRevenue
   */
  @javax.annotation.Nonnull
  public Boolean getDeferredRevenue() {
    return deferredRevenue;
  }

  public void setDeferredRevenue(@javax.annotation.Nonnull Boolean deferredRevenue) {
    this.deferredRevenue = deferredRevenue;
  }


  public AccountSchedule pricePlanInfo(@javax.annotation.Nonnull PricePlanInfo pricePlanInfo) {
    this.pricePlanInfo = pricePlanInfo;
    return this;
  }

  /**
   * Get pricePlanInfo
   * @return pricePlanInfo
   */
  @javax.annotation.Nonnull
  public PricePlanInfo getPricePlanInfo() {
    return pricePlanInfo;
  }

  public void setPricePlanInfo(@javax.annotation.Nonnull PricePlanInfo pricePlanInfo) {
    this.pricePlanInfo = pricePlanInfo;
  }


  public AccountSchedule accountScheduleInfo(@javax.annotation.Nonnull ScheduleInfo accountScheduleInfo) {
    this.accountScheduleInfo = accountScheduleInfo;
    return this;
  }

  /**
   * Get accountScheduleInfo
   * @return accountScheduleInfo
   */
  @javax.annotation.Nonnull
  public ScheduleInfo getAccountScheduleInfo() {
    return accountScheduleInfo;
  }

  public void setAccountScheduleInfo(@javax.annotation.Nonnull ScheduleInfo accountScheduleInfo) {
    this.accountScheduleInfo = accountScheduleInfo;
  }


  public AccountSchedule isOverridden(@javax.annotation.Nullable Boolean isOverridden) {
    this.isOverridden = isOverridden;
    return this;
  }

  /**
   * Indicates whether the schedule is overridden. Note: A null value for this field does not imply that the schedule is not overridden. 
   * @return isOverridden
   */
  @javax.annotation.Nullable
  public Boolean getIsOverridden() {
    return isOverridden;
  }

  public void setIsOverridden(@javax.annotation.Nullable Boolean isOverridden) {
    this.isOverridden = isOverridden;
  }


  public AccountSchedule startDate(@javax.annotation.Nonnull OffsetDateTime startDate) {
    this.startDate = startDate;
    return this;
  }

  /**
   * Get startDate
   * @return startDate
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getStartDate() {
    return startDate;
  }

  public void setStartDate(@javax.annotation.Nonnull OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public AccountSchedule endDate(@javax.annotation.Nonnull OffsetDateTime endDate) {
    this.endDate = endDate;
    return this;
  }

  /**
   * Get endDate
   * @return endDate
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getEndDate() {
    return endDate;
  }

  public void setEndDate(@javax.annotation.Nonnull OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public AccountSchedule allowOngoingCycleUpdates(@javax.annotation.Nonnull Boolean allowOngoingCycleUpdates) {
    this.allowOngoingCycleUpdates = allowOngoingCycleUpdates;
    return this;
  }

  /**
   * Get allowOngoingCycleUpdates
   * @return allowOngoingCycleUpdates
   */
  @javax.annotation.Nonnull
  public Boolean getAllowOngoingCycleUpdates() {
    return allowOngoingCycleUpdates;
  }

  public void setAllowOngoingCycleUpdates(@javax.annotation.Nonnull Boolean allowOngoingCycleUpdates) {
    this.allowOngoingCycleUpdates = allowOngoingCycleUpdates;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountSchedule accountSchedule = (AccountSchedule) o;
    return Objects.equals(this.id, accountSchedule.id) &&
        Objects.equals(this.accountId, accountSchedule.accountId) &&
        Objects.equals(this.pricePlanId, accountSchedule.pricePlanId) &&
        Objects.equals(this.version, accountSchedule.version) &&
        Objects.equals(this.deferredRevenue, accountSchedule.deferredRevenue) &&
        Objects.equals(this.pricePlanInfo, accountSchedule.pricePlanInfo) &&
        Objects.equals(this.accountScheduleInfo, accountSchedule.accountScheduleInfo) &&
        Objects.equals(this.isOverridden, accountSchedule.isOverridden) &&
        Objects.equals(this.startDate, accountSchedule.startDate) &&
        Objects.equals(this.endDate, accountSchedule.endDate) &&
        Objects.equals(this.allowOngoingCycleUpdates, accountSchedule.allowOngoingCycleUpdates);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, accountId, pricePlanId, version, deferredRevenue, pricePlanInfo, accountScheduleInfo, isOverridden, startDate, endDate, allowOngoingCycleUpdates);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountSchedule {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    pricePlanId: ").append(toIndentedString(pricePlanId)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    deferredRevenue: ").append(toIndentedString(deferredRevenue)).append("\n");
    sb.append("    pricePlanInfo: ").append(toIndentedString(pricePlanInfo)).append("\n");
    sb.append("    accountScheduleInfo: ").append(toIndentedString(accountScheduleInfo)).append("\n");
    sb.append("    isOverridden: ").append(toIndentedString(isOverridden)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    allowOngoingCycleUpdates: ").append(toIndentedString(allowOngoingCycleUpdates)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("accountId");
    openapiFields.add("pricePlanId");
    openapiFields.add("version");
    openapiFields.add("deferredRevenue");
    openapiFields.add("pricePlanInfo");
    openapiFields.add("accountScheduleInfo");
    openapiFields.add("isOverridden");
    openapiFields.add("startDate");
    openapiFields.add("endDate");
    openapiFields.add("allowOngoingCycleUpdates");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("id");
    openapiRequiredFields.add("accountId");
    openapiRequiredFields.add("pricePlanId");
    openapiRequiredFields.add("version");
    openapiRequiredFields.add("deferredRevenue");
    openapiRequiredFields.add("pricePlanInfo");
    openapiRequiredFields.add("accountScheduleInfo");
    openapiRequiredFields.add("startDate");
    openapiRequiredFields.add("endDate");
    openapiRequiredFields.add("allowOngoingCycleUpdates");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountSchedule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountSchedule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountSchedule is not found in the empty JSON string", AccountSchedule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountSchedule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountSchedule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AccountSchedule.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if (!jsonObj.get("accountId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `accountId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("accountId").toString()));
      }
      if (!jsonObj.get("pricePlanId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `pricePlanId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("pricePlanId").toString()));
      }
      // validate the required field `pricePlanInfo`
      PricePlanInfo.validateJsonElement(jsonObj.get("pricePlanInfo"));
      // validate the required field `accountScheduleInfo`
      ScheduleInfo.validateJsonElement(jsonObj.get("accountScheduleInfo"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountSchedule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountSchedule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountSchedule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountSchedule.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountSchedule>() {
           @Override
           public void write(JsonWriter out, AccountSchedule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountSchedule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountSchedule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountSchedule
   * @throws IOException if the JSON string is invalid with respect to AccountSchedule
   */
  public static AccountSchedule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountSchedule.class);
  }

  /**
   * Convert an instance of AccountSchedule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

