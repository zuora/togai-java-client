/*
 * Togai Apis
 * APIs for Togai App
 *
 * The version of the OpenAPI document: 1.0
 * Contact: engg@togai.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.togai.client.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.togai.client.models.BillingEntitlementRevenueSummary;
import com.togai.client.models.CreditGrantRevenueSummary;
import com.togai.client.models.EntitlementOverageRevenueSummary;
import com.togai.client.models.FixedFeeRevenueSummary;
import com.togai.client.models.RateCard;
import com.togai.client.models.SlabRevenueSummary;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.togai.client.JSON;

/**
 * RevenueInfoV2
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class RevenueInfoV2 implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_RATE_CARD = "rateCard";
  @SerializedName(SERIALIZED_NAME_RATE_CARD)
  @javax.annotation.Nonnull
  private RateCard rateCard;

  public static final String SERIALIZED_NAME_USAGES = "usages";
  @SerializedName(SERIALIZED_NAME_USAGES)
  @javax.annotation.Nonnull
  private Map<String, BigDecimal> usages = new HashMap<>();

  public static final String SERIALIZED_NAME_FIXED_FEE_REVENUE_SUMMARY = "fixedFeeRevenueSummary";
  @SerializedName(SERIALIZED_NAME_FIXED_FEE_REVENUE_SUMMARY)
  @javax.annotation.Nullable
  private FixedFeeRevenueSummary fixedFeeRevenueSummary;

  public static final String SERIALIZED_NAME_LICENSE_REVENUE_SUMMARY = "licenseRevenueSummary";
  @SerializedName(SERIALIZED_NAME_LICENSE_REVENUE_SUMMARY)
  @javax.annotation.Nullable
  private List<SlabRevenueSummary> licenseRevenueSummary = new ArrayList<>();

  public static final String SERIALIZED_NAME_BILLING_ENTITLEMENT_REVENUE_SUMMARY = "billingEntitlementRevenueSummary";
  @SerializedName(SERIALIZED_NAME_BILLING_ENTITLEMENT_REVENUE_SUMMARY)
  @javax.annotation.Nullable
  private BillingEntitlementRevenueSummary billingEntitlementRevenueSummary;

  public static final String SERIALIZED_NAME_CREDIT_GRANT_REVENUE_SUMMARY = "creditGrantRevenueSummary";
  @SerializedName(SERIALIZED_NAME_CREDIT_GRANT_REVENUE_SUMMARY)
  @javax.annotation.Nullable
  private CreditGrantRevenueSummary creditGrantRevenueSummary;

  public static final String SERIALIZED_NAME_ENTITLEMENT_OVERAGE_REVENUE_SUMMARY = "entitlementOverageRevenueSummary";
  @SerializedName(SERIALIZED_NAME_ENTITLEMENT_OVERAGE_REVENUE_SUMMARY)
  @javax.annotation.Nullable
  private EntitlementOverageRevenueSummary entitlementOverageRevenueSummary;

  public static final String SERIALIZED_NAME_SLAB_REVENUE_SUMMARIES = "slabRevenueSummaries";
  @SerializedName(SERIALIZED_NAME_SLAB_REVENUE_SUMMARIES)
  @javax.annotation.Nullable
  private List<SlabRevenueSummary> slabRevenueSummaries = new ArrayList<>();

  public RevenueInfoV2() {
  }

  public RevenueInfoV2 rateCard(@javax.annotation.Nonnull RateCard rateCard) {
    this.rateCard = rateCard;
    return this;
  }

  /**
   * Get rateCard
   * @return rateCard
   */
  @javax.annotation.Nonnull
  public RateCard getRateCard() {
    return rateCard;
  }

  public void setRateCard(@javax.annotation.Nonnull RateCard rateCard) {
    this.rateCard = rateCard;
  }


  public RevenueInfoV2 usages(@javax.annotation.Nonnull Map<String, BigDecimal> usages) {
    this.usages = usages;
    return this;
  }

  public RevenueInfoV2 putUsagesItem(String key, BigDecimal usagesItem) {
    if (this.usages == null) {
      this.usages = new HashMap<>();
    }
    this.usages.put(key, usagesItem);
    return this;
  }

  /**
   * Get usages
   * @return usages
   */
  @javax.annotation.Nonnull
  public Map<String, BigDecimal> getUsages() {
    return usages;
  }

  public void setUsages(@javax.annotation.Nonnull Map<String, BigDecimal> usages) {
    this.usages = usages;
  }


  public RevenueInfoV2 fixedFeeRevenueSummary(@javax.annotation.Nullable FixedFeeRevenueSummary fixedFeeRevenueSummary) {
    this.fixedFeeRevenueSummary = fixedFeeRevenueSummary;
    return this;
  }

  /**
   * Get fixedFeeRevenueSummary
   * @return fixedFeeRevenueSummary
   */
  @javax.annotation.Nullable
  public FixedFeeRevenueSummary getFixedFeeRevenueSummary() {
    return fixedFeeRevenueSummary;
  }

  public void setFixedFeeRevenueSummary(@javax.annotation.Nullable FixedFeeRevenueSummary fixedFeeRevenueSummary) {
    this.fixedFeeRevenueSummary = fixedFeeRevenueSummary;
  }


  public RevenueInfoV2 licenseRevenueSummary(@javax.annotation.Nullable List<SlabRevenueSummary> licenseRevenueSummary) {
    this.licenseRevenueSummary = licenseRevenueSummary;
    return this;
  }

  public RevenueInfoV2 addLicenseRevenueSummaryItem(SlabRevenueSummary licenseRevenueSummaryItem) {
    if (this.licenseRevenueSummary == null) {
      this.licenseRevenueSummary = new ArrayList<>();
    }
    this.licenseRevenueSummary.add(licenseRevenueSummaryItem);
    return this;
  }

  /**
   * Get licenseRevenueSummary
   * @return licenseRevenueSummary
   */
  @javax.annotation.Nullable
  public List<SlabRevenueSummary> getLicenseRevenueSummary() {
    return licenseRevenueSummary;
  }

  public void setLicenseRevenueSummary(@javax.annotation.Nullable List<SlabRevenueSummary> licenseRevenueSummary) {
    this.licenseRevenueSummary = licenseRevenueSummary;
  }


  public RevenueInfoV2 billingEntitlementRevenueSummary(@javax.annotation.Nullable BillingEntitlementRevenueSummary billingEntitlementRevenueSummary) {
    this.billingEntitlementRevenueSummary = billingEntitlementRevenueSummary;
    return this;
  }

  /**
   * Get billingEntitlementRevenueSummary
   * @return billingEntitlementRevenueSummary
   */
  @javax.annotation.Nullable
  public BillingEntitlementRevenueSummary getBillingEntitlementRevenueSummary() {
    return billingEntitlementRevenueSummary;
  }

  public void setBillingEntitlementRevenueSummary(@javax.annotation.Nullable BillingEntitlementRevenueSummary billingEntitlementRevenueSummary) {
    this.billingEntitlementRevenueSummary = billingEntitlementRevenueSummary;
  }


  public RevenueInfoV2 creditGrantRevenueSummary(@javax.annotation.Nullable CreditGrantRevenueSummary creditGrantRevenueSummary) {
    this.creditGrantRevenueSummary = creditGrantRevenueSummary;
    return this;
  }

  /**
   * Get creditGrantRevenueSummary
   * @return creditGrantRevenueSummary
   */
  @javax.annotation.Nullable
  public CreditGrantRevenueSummary getCreditGrantRevenueSummary() {
    return creditGrantRevenueSummary;
  }

  public void setCreditGrantRevenueSummary(@javax.annotation.Nullable CreditGrantRevenueSummary creditGrantRevenueSummary) {
    this.creditGrantRevenueSummary = creditGrantRevenueSummary;
  }


  public RevenueInfoV2 entitlementOverageRevenueSummary(@javax.annotation.Nullable EntitlementOverageRevenueSummary entitlementOverageRevenueSummary) {
    this.entitlementOverageRevenueSummary = entitlementOverageRevenueSummary;
    return this;
  }

  /**
   * Get entitlementOverageRevenueSummary
   * @return entitlementOverageRevenueSummary
   */
  @javax.annotation.Nullable
  public EntitlementOverageRevenueSummary getEntitlementOverageRevenueSummary() {
    return entitlementOverageRevenueSummary;
  }

  public void setEntitlementOverageRevenueSummary(@javax.annotation.Nullable EntitlementOverageRevenueSummary entitlementOverageRevenueSummary) {
    this.entitlementOverageRevenueSummary = entitlementOverageRevenueSummary;
  }


  public RevenueInfoV2 slabRevenueSummaries(@javax.annotation.Nullable List<SlabRevenueSummary> slabRevenueSummaries) {
    this.slabRevenueSummaries = slabRevenueSummaries;
    return this;
  }

  public RevenueInfoV2 addSlabRevenueSummariesItem(SlabRevenueSummary slabRevenueSummariesItem) {
    if (this.slabRevenueSummaries == null) {
      this.slabRevenueSummaries = new ArrayList<>();
    }
    this.slabRevenueSummaries.add(slabRevenueSummariesItem);
    return this;
  }

  /**
   * Get slabRevenueSummaries
   * @return slabRevenueSummaries
   */
  @javax.annotation.Nullable
  public List<SlabRevenueSummary> getSlabRevenueSummaries() {
    return slabRevenueSummaries;
  }

  public void setSlabRevenueSummaries(@javax.annotation.Nullable List<SlabRevenueSummary> slabRevenueSummaries) {
    this.slabRevenueSummaries = slabRevenueSummaries;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RevenueInfoV2 revenueInfoV2 = (RevenueInfoV2) o;
    return Objects.equals(this.rateCard, revenueInfoV2.rateCard) &&
        Objects.equals(this.usages, revenueInfoV2.usages) &&
        Objects.equals(this.fixedFeeRevenueSummary, revenueInfoV2.fixedFeeRevenueSummary) &&
        Objects.equals(this.licenseRevenueSummary, revenueInfoV2.licenseRevenueSummary) &&
        Objects.equals(this.billingEntitlementRevenueSummary, revenueInfoV2.billingEntitlementRevenueSummary) &&
        Objects.equals(this.creditGrantRevenueSummary, revenueInfoV2.creditGrantRevenueSummary) &&
        Objects.equals(this.entitlementOverageRevenueSummary, revenueInfoV2.entitlementOverageRevenueSummary) &&
        Objects.equals(this.slabRevenueSummaries, revenueInfoV2.slabRevenueSummaries);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rateCard, usages, fixedFeeRevenueSummary, licenseRevenueSummary, billingEntitlementRevenueSummary, creditGrantRevenueSummary, entitlementOverageRevenueSummary, slabRevenueSummaries);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RevenueInfoV2 {\n");
    sb.append("    rateCard: ").append(toIndentedString(rateCard)).append("\n");
    sb.append("    usages: ").append(toIndentedString(usages)).append("\n");
    sb.append("    fixedFeeRevenueSummary: ").append(toIndentedString(fixedFeeRevenueSummary)).append("\n");
    sb.append("    licenseRevenueSummary: ").append(toIndentedString(licenseRevenueSummary)).append("\n");
    sb.append("    billingEntitlementRevenueSummary: ").append(toIndentedString(billingEntitlementRevenueSummary)).append("\n");
    sb.append("    creditGrantRevenueSummary: ").append(toIndentedString(creditGrantRevenueSummary)).append("\n");
    sb.append("    entitlementOverageRevenueSummary: ").append(toIndentedString(entitlementOverageRevenueSummary)).append("\n");
    sb.append("    slabRevenueSummaries: ").append(toIndentedString(slabRevenueSummaries)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("rateCard");
    openapiFields.add("usages");
    openapiFields.add("fixedFeeRevenueSummary");
    openapiFields.add("licenseRevenueSummary");
    openapiFields.add("billingEntitlementRevenueSummary");
    openapiFields.add("creditGrantRevenueSummary");
    openapiFields.add("entitlementOverageRevenueSummary");
    openapiFields.add("slabRevenueSummaries");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("rateCard");
    openapiRequiredFields.add("usages");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RevenueInfoV2
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RevenueInfoV2.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RevenueInfoV2 is not found in the empty JSON string", RevenueInfoV2.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RevenueInfoV2.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RevenueInfoV2` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RevenueInfoV2.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `rateCard`
      RateCard.validateJsonElement(jsonObj.get("rateCard"));
      // validate the optional field `fixedFeeRevenueSummary`
      if (jsonObj.get("fixedFeeRevenueSummary") != null && !jsonObj.get("fixedFeeRevenueSummary").isJsonNull()) {
        FixedFeeRevenueSummary.validateJsonElement(jsonObj.get("fixedFeeRevenueSummary"));
      }
      if (jsonObj.get("licenseRevenueSummary") != null && !jsonObj.get("licenseRevenueSummary").isJsonNull()) {
        JsonArray jsonArraylicenseRevenueSummary = jsonObj.getAsJsonArray("licenseRevenueSummary");
        if (jsonArraylicenseRevenueSummary != null) {
          // ensure the json data is an array
          if (!jsonObj.get("licenseRevenueSummary").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `licenseRevenueSummary` to be an array in the JSON string but got `%s`", jsonObj.get("licenseRevenueSummary").toString()));
          }

          // validate the optional field `licenseRevenueSummary` (array)
          for (int i = 0; i < jsonArraylicenseRevenueSummary.size(); i++) {
            SlabRevenueSummary.validateJsonElement(jsonArraylicenseRevenueSummary.get(i));
          };
        }
      }
      // validate the optional field `billingEntitlementRevenueSummary`
      if (jsonObj.get("billingEntitlementRevenueSummary") != null && !jsonObj.get("billingEntitlementRevenueSummary").isJsonNull()) {
        BillingEntitlementRevenueSummary.validateJsonElement(jsonObj.get("billingEntitlementRevenueSummary"));
      }
      // validate the optional field `creditGrantRevenueSummary`
      if (jsonObj.get("creditGrantRevenueSummary") != null && !jsonObj.get("creditGrantRevenueSummary").isJsonNull()) {
        CreditGrantRevenueSummary.validateJsonElement(jsonObj.get("creditGrantRevenueSummary"));
      }
      // validate the optional field `entitlementOverageRevenueSummary`
      if (jsonObj.get("entitlementOverageRevenueSummary") != null && !jsonObj.get("entitlementOverageRevenueSummary").isJsonNull()) {
        EntitlementOverageRevenueSummary.validateJsonElement(jsonObj.get("entitlementOverageRevenueSummary"));
      }
      if (jsonObj.get("slabRevenueSummaries") != null && !jsonObj.get("slabRevenueSummaries").isJsonNull()) {
        JsonArray jsonArrayslabRevenueSummaries = jsonObj.getAsJsonArray("slabRevenueSummaries");
        if (jsonArrayslabRevenueSummaries != null) {
          // ensure the json data is an array
          if (!jsonObj.get("slabRevenueSummaries").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `slabRevenueSummaries` to be an array in the JSON string but got `%s`", jsonObj.get("slabRevenueSummaries").toString()));
          }

          // validate the optional field `slabRevenueSummaries` (array)
          for (int i = 0; i < jsonArrayslabRevenueSummaries.size(); i++) {
            SlabRevenueSummary.validateJsonElement(jsonArrayslabRevenueSummaries.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RevenueInfoV2.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RevenueInfoV2' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RevenueInfoV2> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RevenueInfoV2.class));

       return (TypeAdapter<T>) new TypeAdapter<RevenueInfoV2>() {
           @Override
           public void write(JsonWriter out, RevenueInfoV2 value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RevenueInfoV2 read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RevenueInfoV2 given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RevenueInfoV2
   * @throws IOException if the JSON string is invalid with respect to RevenueInfoV2
   */
  public static RevenueInfoV2 fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RevenueInfoV2.class);
  }

  /**
   * Convert an instance of RevenueInfoV2 to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

