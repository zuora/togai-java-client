/*
 * Togai Apis
 * APIs for Togai App
 *
 * The version of the OpenAPI document: 1.0
 * Contact: engg@togai.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.togai.client;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapter;
import com.google.gson.internal.bind.util.ISO8601Utils;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.google.gson.JsonElement;
import io.gsonfire.GsonFireBuilder;
import io.gsonfire.TypeSelector;

import okio.ByteString;

import java.io.IOException;
import java.io.StringReader;
import java.lang.reflect.Type;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.ParsePosition;
import java.time.LocalDate;
import java.time.OffsetDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;
import java.util.Locale;
import java.util.Map;
import java.util.HashMap;

/*
 * A JSON utility class
 *
 * NOTE: in the future, this class may be converted to static, which may break
 *       backward-compatibility
 */
public class JSON {
    private static Gson gson;
    private static boolean isLenientOnJson = false;
    private static DateTypeAdapter dateTypeAdapter = new DateTypeAdapter();
    private static SqlDateTypeAdapter sqlDateTypeAdapter = new SqlDateTypeAdapter();
    private static OffsetDateTimeTypeAdapter offsetDateTimeTypeAdapter = new OffsetDateTimeTypeAdapter();
    private static LocalDateTypeAdapter localDateTypeAdapter = new LocalDateTypeAdapter();
    private static ByteArrayAdapter byteArrayAdapter = new ByteArrayAdapter();

    @SuppressWarnings("unchecked")
    public static GsonBuilder createGson() {
        GsonFireBuilder fireBuilder = new GsonFireBuilder()
        ;
        GsonBuilder builder = fireBuilder.createGsonBuilder();
        return builder;
    }

    private static String getDiscriminatorValue(JsonElement readElement, String discriminatorField) {
        JsonElement element = readElement.getAsJsonObject().get(discriminatorField);
        if (null == element) {
            throw new IllegalArgumentException("missing discriminator field: <" + discriminatorField + ">");
        }
        return element.getAsString();
    }

    /**
     * Returns the Java class that implements the OpenAPI schema for the specified discriminator value.
     *
     * @param classByDiscriminatorValue The map of discriminator values to Java classes.
     * @param discriminatorValue The value of the OpenAPI discriminator in the input data.
     * @return The Java class that implements the OpenAPI schema
     */
    private static Class getClassByDiscriminator(Map classByDiscriminatorValue, String discriminatorValue) {
        Class clazz = (Class) classByDiscriminatorValue.get(discriminatorValue);
        if (null == clazz) {
            throw new IllegalArgumentException("cannot determine model class of name: <" + discriminatorValue + ">");
        }
        return clazz;
    }

    static {
        GsonBuilder gsonBuilder = createGson();
        gsonBuilder.registerTypeAdapter(Date.class, dateTypeAdapter);
        gsonBuilder.registerTypeAdapter(java.sql.Date.class, sqlDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(OffsetDateTime.class, offsetDateTimeTypeAdapter);
        gsonBuilder.registerTypeAdapter(LocalDate.class, localDateTypeAdapter);
        gsonBuilder.registerTypeAdapter(byte[].class, byteArrayAdapter);
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Account.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.AccountAlias.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.AccountAliases.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.AccountAliasesPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.AccountPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.AccountSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.AccountsBillingInformation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ActivatePricePlanRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.AddAccountAliasesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.AddOn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.AddOnPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Address.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Alert.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.AlertTemplate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.AlertTemplatesPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.AlertsPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Alias.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.AliasPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.AssociationConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Attribute.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.BaseSuccessResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.BillingConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.BillingEntitlementRateCard.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.BillingEntitlementRevenueSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.BulkRateCardOperationsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.BulkRateCardOperationsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CalculateRevenueRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CalculateRevenueResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CalculateRevenueResponseV2.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Computation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateAccountAliasRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateAccountRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateAccountRequestWithoutCustomerId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateAddOnRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateAlertRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateAliasRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateBulkAliasRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateCreditRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateCreditResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateCustomInvoiceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateCustomerContactRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateCustomerContactResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateCustomerRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateCustomerResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateEntitySetting.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateEventSchemaRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateFeatureRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateInvoiceGroupRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreatePaymentRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreatePricePlanDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreatePricePlanDetailsOverride.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreatePricePlanMigrationRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreatePricePlanRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreatePricePlanV2Request.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreatePricingRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateProposalRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreatePurchaseRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreateUsageMeterRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Credit.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreditBalanceResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreditDetailsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreditGrantRateCard.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreditGrantRevenueSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreditRateDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreditRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CreditTransaction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CurrencyConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CurrencyRateValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CurrencySlabRateDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CustomInvoiceLineItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Customer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.CustomerPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Dependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.DimensionsSchema.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EditAccountScheduleRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EditPricingScheduleRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EnrichedField.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EnrichmentDependency.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Enrichments.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EntitlementOverageConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EntitlementOverageConfigLookupCycle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EntitlementOverageEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EntitlementOverageRateCard.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EntitlementOverageRevenueSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ErrorResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Event.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventAttributeSchema.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventCorrectionInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventCorrectionRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventPipelineInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventPipelineInfoAccount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventPipelineInfoCustomer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventPipelineInfoEnrichments.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventPipelineInfoEventSchema.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventPipelineInfoFeatureDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventPipelineInfoPricePlans.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventPipelineInfoRevenueDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventPipelineInfoUsageMeters.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventSchema.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventSchemaListData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventSchemaListPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventSchemaVersionsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventSchemasForFeature.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventSource.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventWithStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventWithStatusAndEventPipelineInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.EventsCorrectionResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ExternalPaymentReference.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Feature.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.FeatureConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.FeatureCreditEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.FeatureDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.FeatureListResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.FeaturePaginatedListData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Field.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.FileDownloadUrlResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.FinalizeAccountSchedules.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.FinalizePricePlanRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.FixedFeeRateCard.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.FixedFeeRevenueSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.GetCustomerPortalDelegateTokenRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.GetEntitlementValuesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.GetEntitlementValuesResponseDataInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.GetEventResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.GetEventsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.GetFeatureCreditEntriesPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.GetFeatureCreditsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.GetJobResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.GetLicenseUpdatesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.GetMetricsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.GetMetricsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.GetProposalResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.GetPurchaseResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.GrantDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Incident.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.IncidentsPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.IngestBatchEventRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.IngestEventRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.IngestEventResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.IngestionStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Invoice.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.InvoiceDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.InvoiceDetailsAccount.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.InvoiceDetailsCustomer.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.InvoiceDetailsInvoiceGroup.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.InvoiceDetailsOrganization.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.InvoiceGroupAccountsPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.InvoiceGroupDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.InvoiceGroupPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.InvoiceGroups.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.InvoiceInfoInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.InvoiceLineItem.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.InvoiceSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.JobEntriesPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.JobEntriesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.JobsPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.JobsWithoutStatusInfoResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.LicenseEntriesConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.LicenseEntriesConfigLookupCycle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.LicenseEntriesConfigLookupRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.LicenseEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.LicenseEntryDetailsUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.LicenseRateCard.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.LicenseRateCardConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.LicenseUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.LicenseUpdateRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.LicenseUpdateResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ListCreditsResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ListInvoicesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ListPaymentResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ManageMiscellaneousChargesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.MetricDataPoints.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.MetricDataPointsGroupedBy.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.MetricQuery.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.MetricQueryFilterEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.MetricQueryResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.MinimumCommitment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.MiscellaneousCharge.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.MiscellaneousChargesResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.NamedLicenseEntriesConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.NamedLicenseEntriesConfigLookupCycle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.NamedLicenseEntriesConfigLookupRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.NamedLicenseEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.NamedLicenseUpdate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.NamedLicenseUpdatesPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PaginationOptions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Payment.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PaymentLineItemRecord.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PlanOverride.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PreAction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricePlan.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricePlanDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricePlanDetailsConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricePlanDetailsOverride.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricePlanInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricePlanListData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricePlanMigrationConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricePlanPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricePlanV2.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricePlanV2PaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricingCycleConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricingCycleConfigStartOffset.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricingRule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricingRuleAction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricingRuleChangesLog.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricingRuleInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricingRulesLog.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricingRulesLogsPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricingRulesPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricingRulesValues.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricingSchedule.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricingSchedulePaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PricingScheduleWithPricePlanId.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Proposal.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ProposalsListResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ProposalsPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ProrationConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ProrationConfigCustomConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ProrationConfigLookupCycleConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Purchase.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PurchaseFeatureDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PurchaseListResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PurchasePaginatedListData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.PurchasePlanOverride.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.QueryColumn.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.QueryFilter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.QueryFunction.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.QueryInput.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.QueryInputSortInner.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.RateCard.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.RateCardData.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.RateCardDetails.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.RateCardOperation.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.RateCardPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.RatePlan.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.RateValue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.RecurrenceConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.RemoveAccountAliasRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.RemoveAccountAliasesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Report.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ReportsPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.RevenueInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.RevenueInfoV2.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.RevenueSummaryWithMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ScheduleInfo.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.SchedulesPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Setting.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.SettingPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.Slab.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.SlabDetail.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.SlabRate.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.SlabRevenue.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.SlabRevenueMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.SlabRevenueSummary.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.SlabRevenueWithMetadata.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.TokenResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.TopupWalletRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateAccountRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateAccountScheduleV2Request.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateAddOnRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateAlertRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateCustomerRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateEventSchemaRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateFeatureCreditsRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateFeatureRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateIncidentStatusRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateInvoiceGroupAccounts.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateInvoiceRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdatePricePlanRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdatePricePlanV2Request.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdatePricingRulesRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdatePricingScheduleRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdatePricingScheduleRequestWithActions.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdatePricingScheduleResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateProposalStatus.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateSettingRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateUsageMeterRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UpdateWalletRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UsageConfig.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UsageConfigLookupCycle.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UsageConfigLookupRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UsageLookupRange.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UsageMeter.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UsageMeterFilterEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UsageMeterPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.UsageRateCard.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ValidateEntitlementValueRequest.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ValidatedEntityError.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.ValidatedEntityErrorsPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.WalletBalanceResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.WalletEntriesPaginatedResponse.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.WalletEntry.CustomTypeAdapterFactory());
        gsonBuilder.registerTypeAdapterFactory(new com.togai.client.models.WalletTopupDetails.CustomTypeAdapterFactory());
        gson = gsonBuilder.create();
    }

    /**
     * Get Gson.
     *
     * @return Gson
     */
    public static Gson getGson() {
        return gson;
    }

    /**
     * Set Gson.
     *
     * @param gson Gson
     */
    public static void setGson(Gson gson) {
        JSON.gson = gson;
    }

    public static void setLenientOnJson(boolean lenientOnJson) {
        isLenientOnJson = lenientOnJson;
    }

    /**
     * Serialize the given Java object into JSON string.
     *
     * @param obj Object
     * @return String representation of the JSON
     */
    public static String serialize(Object obj) {
        return gson.toJson(obj);
    }

    /**
     * Deserialize the given JSON string to Java object.
     *
     * @param <T>        Type
     * @param body       The JSON string
     * @param returnType The type to deserialize into
     * @return The deserialized Java object
     */
    @SuppressWarnings("unchecked")
    public static <T> T deserialize(String body, Type returnType) {
        try {
            if (isLenientOnJson) {
                JsonReader jsonReader = new JsonReader(new StringReader(body));
                // see https://google-gson.googlecode.com/svn/trunk/gson/docs/javadocs/com/google/gson/stream/JsonReader.html#setLenient(boolean)
                jsonReader.setLenient(true);
                return gson.fromJson(jsonReader, returnType);
            } else {
                return gson.fromJson(body, returnType);
            }
        } catch (JsonParseException e) {
            // Fallback processing when failed to parse JSON form response body:
            // return the response body string directly for the String return type;
            if (returnType.equals(String.class)) {
                return (T) body;
            } else {
                throw (e);
            }
        }
    }

    /**
     * Gson TypeAdapter for Byte Array type
     */
    public static class ByteArrayAdapter extends TypeAdapter<byte[]> {

        @Override
        public void write(JsonWriter out, byte[] value) throws IOException {
            if (value == null) {
                out.nullValue();
            } else {
                out.value(ByteString.of(value).base64());
            }
        }

        @Override
        public byte[] read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String bytesAsBase64 = in.nextString();
                    ByteString byteString = ByteString.decodeBase64(bytesAsBase64);
                    return byteString.toByteArray();
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 OffsetDateTime type
     */
    public static class OffsetDateTimeTypeAdapter extends TypeAdapter<OffsetDateTime> {

        private DateTimeFormatter formatter;

        public OffsetDateTimeTypeAdapter() {
            this(DateTimeFormatter.ISO_OFFSET_DATE_TIME);
        }

        public OffsetDateTimeTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, OffsetDateTime date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public OffsetDateTime read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    if (date.endsWith("+0000")) {
                        date = date.substring(0, date.length()-5) + "Z";
                    }
                    return OffsetDateTime.parse(date, formatter);
            }
        }
    }

    /**
     * Gson TypeAdapter for JSR310 LocalDate type
     */
    public static class LocalDateTypeAdapter extends TypeAdapter<LocalDate> {

        private DateTimeFormatter formatter;

        public LocalDateTypeAdapter() {
            this(DateTimeFormatter.ISO_LOCAL_DATE);
        }

        public LocalDateTypeAdapter(DateTimeFormatter formatter) {
            this.formatter = formatter;
        }

        public void setFormat(DateTimeFormatter dateFormat) {
            this.formatter = dateFormat;
        }

        @Override
        public void write(JsonWriter out, LocalDate date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                out.value(formatter.format(date));
            }
        }

        @Override
        public LocalDate read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    return LocalDate.parse(date, formatter);
            }
        }
    }

    public static void setOffsetDateTimeFormat(DateTimeFormatter dateFormat) {
        offsetDateTimeTypeAdapter.setFormat(dateFormat);
    }

    public static void setLocalDateFormat(DateTimeFormatter dateFormat) {
        localDateTypeAdapter.setFormat(dateFormat);
    }

    /**
     * Gson TypeAdapter for java.sql.Date type
     * If the dateFormat is null, a simple "yyyy-MM-dd" format will be used
     * (more efficient than SimpleDateFormat).
     */
    public static class SqlDateTypeAdapter extends TypeAdapter<java.sql.Date> {

        private DateFormat dateFormat;

        public SqlDateTypeAdapter() {}

        public SqlDateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, java.sql.Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = date.toString();
                }
                out.value(value);
            }
        }

        @Override
        public java.sql.Date read(JsonReader in) throws IOException {
            switch (in.peek()) {
                case NULL:
                    in.nextNull();
                    return null;
                default:
                    String date = in.nextString();
                    try {
                        if (dateFormat != null) {
                            return new java.sql.Date(dateFormat.parse(date).getTime());
                        }
                        return new java.sql.Date(ISO8601Utils.parse(date, new ParsePosition(0)).getTime());
                    } catch (ParseException e) {
                        throw new JsonParseException(e);
                    }
            }
        }
    }

    /**
     * Gson TypeAdapter for java.util.Date type
     * If the dateFormat is null, ISO8601Utils will be used.
     */
    public static class DateTypeAdapter extends TypeAdapter<Date> {

        private DateFormat dateFormat;

        public DateTypeAdapter() {}

        public DateTypeAdapter(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        public void setFormat(DateFormat dateFormat) {
            this.dateFormat = dateFormat;
        }

        @Override
        public void write(JsonWriter out, Date date) throws IOException {
            if (date == null) {
                out.nullValue();
            } else {
                String value;
                if (dateFormat != null) {
                    value = dateFormat.format(date);
                } else {
                    value = ISO8601Utils.format(date, true);
                }
                out.value(value);
            }
        }

        @Override
        public Date read(JsonReader in) throws IOException {
            try {
                switch (in.peek()) {
                    case NULL:
                        in.nextNull();
                        return null;
                    default:
                        String date = in.nextString();
                        try {
                            if (dateFormat != null) {
                                return dateFormat.parse(date);
                            }
                            return ISO8601Utils.parse(date, new ParsePosition(0));
                        } catch (ParseException e) {
                            throw new JsonParseException(e);
                        }
                }
            } catch (IllegalArgumentException e) {
                throw new JsonParseException(e);
            }
        }
    }

    public static void setDateFormat(DateFormat dateFormat) {
        dateTypeAdapter.setFormat(dateFormat);
    }

    public static void setSqlDateFormat(DateFormat dateFormat) {
        sqlDateTypeAdapter.setFormat(dateFormat);
    }
}
