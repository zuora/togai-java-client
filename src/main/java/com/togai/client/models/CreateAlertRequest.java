/*
 * Togai Apis
 * APIs for Togai App
 *
 * The version of the OpenAPI document: 1.0
 * Contact: engg@togai.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.togai.client.models;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.togai.client.models.AlertStatus;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import com.togai.client.JSON;

/**
 * CreateAlertRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.10.0")
public class CreateAlertRequest implements Serializable {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_ALERT_TEMPLATE_ID = "alertTemplateId";
  @SerializedName(SERIALIZED_NAME_ALERT_TEMPLATE_ID)
  @javax.annotation.Nonnull
  private String alertTemplateId;

  public static final String SERIALIZED_NAME_INTERVAL = "interval";
  @SerializedName(SERIALIZED_NAME_INTERVAL)
  @javax.annotation.Nonnull
  private Integer interval;

  public static final String SERIALIZED_NAME_VALIDITY = "validity";
  @SerializedName(SERIALIZED_NAME_VALIDITY)
  @javax.annotation.Nullable
  private Integer validity;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  @javax.annotation.Nullable
  private String description;

  public static final String SERIALIZED_NAME_ENTITY_DETAILS = "entityDetails";
  @SerializedName(SERIALIZED_NAME_ENTITY_DETAILS)
  @javax.annotation.Nullable
  private Map<String, Object> entityDetails = new HashMap<>();

  public static final String SERIALIZED_NAME_OWNER_DETAILS = "ownerDetails";
  @SerializedName(SERIALIZED_NAME_OWNER_DETAILS)
  @javax.annotation.Nullable
  private Map<String, Object> ownerDetails = new HashMap<>();

  public static final String SERIALIZED_NAME_PARAMETERS = "parameters";
  @SerializedName(SERIALIZED_NAME_PARAMETERS)
  @javax.annotation.Nullable
  private Map<String, Object> parameters = new HashMap<>();

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  @javax.annotation.Nonnull
  private AlertStatus status;

  public CreateAlertRequest() {
  }

  public CreateAlertRequest alertTemplateId(@javax.annotation.Nonnull String alertTemplateId) {
    this.alertTemplateId = alertTemplateId;
    return this;
  }

  /**
   * Get alertTemplateId
   * @return alertTemplateId
   */
  @javax.annotation.Nonnull
  public String getAlertTemplateId() {
    return alertTemplateId;
  }

  public void setAlertTemplateId(@javax.annotation.Nonnull String alertTemplateId) {
    this.alertTemplateId = alertTemplateId;
  }


  public CreateAlertRequest interval(@javax.annotation.Nonnull Integer interval) {
    this.interval = interval;
    return this;
  }

  /**
   * Get interval
   * @return interval
   */
  @javax.annotation.Nonnull
  public Integer getInterval() {
    return interval;
  }

  public void setInterval(@javax.annotation.Nonnull Integer interval) {
    this.interval = interval;
  }


  public CreateAlertRequest validity(@javax.annotation.Nullable Integer validity) {
    this.validity = validity;
    return this;
  }

  /**
   * Validity of the alert in minutes, if null then alert will be valid forever
   * @return validity
   */
  @javax.annotation.Nullable
  public Integer getValidity() {
    return validity;
  }

  public void setValidity(@javax.annotation.Nullable Integer validity) {
    this.validity = validity;
  }


  public CreateAlertRequest description(@javax.annotation.Nullable String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(@javax.annotation.Nullable String description) {
    this.description = description;
  }


  public CreateAlertRequest entityDetails(@javax.annotation.Nullable Map<String, Object> entityDetails) {
    this.entityDetails = entityDetails;
    return this;
  }

  public CreateAlertRequest putEntityDetailsItem(String key, Object entityDetailsItem) {
    if (this.entityDetails == null) {
      this.entityDetails = new HashMap<>();
    }
    this.entityDetails.put(key, entityDetailsItem);
    return this;
  }

  /**
   * Get entityDetails
   * @return entityDetails
   */
  @javax.annotation.Nullable
  public Map<String, Object> getEntityDetails() {
    return entityDetails;
  }

  public void setEntityDetails(@javax.annotation.Nullable Map<String, Object> entityDetails) {
    this.entityDetails = entityDetails;
  }


  public CreateAlertRequest ownerDetails(@javax.annotation.Nullable Map<String, Object> ownerDetails) {
    this.ownerDetails = ownerDetails;
    return this;
  }

  public CreateAlertRequest putOwnerDetailsItem(String key, Object ownerDetailsItem) {
    if (this.ownerDetails == null) {
      this.ownerDetails = new HashMap<>();
    }
    this.ownerDetails.put(key, ownerDetailsItem);
    return this;
  }

  /**
   * Get ownerDetails
   * @return ownerDetails
   */
  @javax.annotation.Nullable
  public Map<String, Object> getOwnerDetails() {
    return ownerDetails;
  }

  public void setOwnerDetails(@javax.annotation.Nullable Map<String, Object> ownerDetails) {
    this.ownerDetails = ownerDetails;
  }


  public CreateAlertRequest parameters(@javax.annotation.Nullable Map<String, Object> parameters) {
    this.parameters = parameters;
    return this;
  }

  public CreateAlertRequest putParametersItem(String key, Object parametersItem) {
    if (this.parameters == null) {
      this.parameters = new HashMap<>();
    }
    this.parameters.put(key, parametersItem);
    return this;
  }

  /**
   * Get parameters
   * @return parameters
   */
  @javax.annotation.Nullable
  public Map<String, Object> getParameters() {
    return parameters;
  }

  public void setParameters(@javax.annotation.Nullable Map<String, Object> parameters) {
    this.parameters = parameters;
  }


  public CreateAlertRequest status(@javax.annotation.Nonnull AlertStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public AlertStatus getStatus() {
    return status;
  }

  public void setStatus(@javax.annotation.Nonnull AlertStatus status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateAlertRequest createAlertRequest = (CreateAlertRequest) o;
    return Objects.equals(this.alertTemplateId, createAlertRequest.alertTemplateId) &&
        Objects.equals(this.interval, createAlertRequest.interval) &&
        Objects.equals(this.validity, createAlertRequest.validity) &&
        Objects.equals(this.description, createAlertRequest.description) &&
        Objects.equals(this.entityDetails, createAlertRequest.entityDetails) &&
        Objects.equals(this.ownerDetails, createAlertRequest.ownerDetails) &&
        Objects.equals(this.parameters, createAlertRequest.parameters) &&
        Objects.equals(this.status, createAlertRequest.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(alertTemplateId, interval, validity, description, entityDetails, ownerDetails, parameters, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateAlertRequest {\n");
    sb.append("    alertTemplateId: ").append(toIndentedString(alertTemplateId)).append("\n");
    sb.append("    interval: ").append(toIndentedString(interval)).append("\n");
    sb.append("    validity: ").append(toIndentedString(validity)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    entityDetails: ").append(toIndentedString(entityDetails)).append("\n");
    sb.append("    ownerDetails: ").append(toIndentedString(ownerDetails)).append("\n");
    sb.append("    parameters: ").append(toIndentedString(parameters)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("alertTemplateId");
    openapiFields.add("interval");
    openapiFields.add("validity");
    openapiFields.add("description");
    openapiFields.add("entityDetails");
    openapiFields.add("ownerDetails");
    openapiFields.add("parameters");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("alertTemplateId");
    openapiRequiredFields.add("interval");
    openapiRequiredFields.add("status");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CreateAlertRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CreateAlertRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CreateAlertRequest is not found in the empty JSON string", CreateAlertRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CreateAlertRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CreateAlertRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : CreateAlertRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("alertTemplateId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `alertTemplateId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("alertTemplateId").toString()));
      }
      if ((jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) && !jsonObj.get("description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("description").toString()));
      }
      // validate the required field `status`
      AlertStatus.validateJsonElement(jsonObj.get("status"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CreateAlertRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CreateAlertRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CreateAlertRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CreateAlertRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<CreateAlertRequest>() {
           @Override
           public void write(JsonWriter out, CreateAlertRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CreateAlertRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CreateAlertRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CreateAlertRequest
   * @throws IOException if the JSON string is invalid with respect to CreateAlertRequest
   */
  public static CreateAlertRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CreateAlertRequest.class);
  }

  /**
   * Convert an instance of CreateAlertRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

